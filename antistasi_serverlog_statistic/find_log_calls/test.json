{
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/JeroenArsenal/JNA/fn_arsenal_init.sqf": [
"[2,\"JNA init started\",_fileName] call A3A_fnc_log",
"[[\"_object\",objNull,[objNull]]];\n\n//check if it was already initialised\nif(!isnull (missionnamespace getVariable [\"jna_object\",objNull]))exitWith{};\nif(isNull _object)exitWith{[\"Error: wrong input given '%1'\",_object] call BIS_fnc_error;};\nmissionnamespace setVariable [\"jna_object\",_object];\n\n//change this for items that members can only take\n/* Indexes in the array correspond to these tabs:\nDO NOT UNCOMMENT THIS BIT. THESE ARE ALREADY DEFINED\nIDC_RSCDISPLAYARSENAL_TAB_PRIMARYWEAPON\t\t0\nIDC_RSCDISPLAYARSENAL_TAB_SECONDARYWEAPON\t1\nIDC_RSCDISPLAYARSENAL_TAB_HANDGUN\t\t2\nIDC_RSCDISPLAYARSENAL_TAB_UNIFORM\t\t3\nIDC_RSCDISPLAYARSENAL_TAB_VEST\t\t\t4\nIDC_RSCDISPLAYARSENAL_TAB_BACKPACK\t\t5\nIDC_RSCDISPLAYARSENAL_TAB_HEADGEAR\t\t6\nIDC_RSCDISPLAYARSENAL_TAB_GOGGLES\t\t7\nIDC_RSCDISPLAYARSENAL_TAB_NVGS\t\t\t8\nIDC_RSCDISPLAYARSENAL_TAB_BINOCULARS\t\t9\nIDC_RSCDISPLAYARSENAL_TAB_MAP\t\t\t10\nIDC_RSCDISPLAYARSENAL_TAB_GPS\t\t\t11\nIDC_RSCDISPLAYARSENAL_TAB_RADIO\t\t\t12\nIDC_RSCDISPLAYARSENAL_TAB_COMPASS\t\t13\nIDC_RSCDISPLAYARSENAL_TAB_WATCH\t\t\t14\nIDC_RSCDISPLAYARSENAL_TAB_FACE\t\t\t15\nIDC_RSCDISPLAYARSENAL_TAB_VOICE\t\t\t16\nIDC_RSCDISPLAYARSENAL_TAB_INSIGNIA\t\t17\nIDC_RSCDISPLAYARSENAL_TAB_ITEMOPTIC\t\t18\nIDC_RSCDISPLAYARSENAL_TAB_ITEMACC\t\t19\nIDC_RSCDISPLAYARSENAL_TAB_ITEMMUZZLE\t\t20\nIDC_RSCDISPLAYARSENAL_TAB_ITEMBIPOD\t\t25\nIDC_RSCDISPLAYARSENAL_TAB_CARGOMAG\t\t21\nIDC_RSCDISPLAYARSENAL_TAB_CARGOTHROW\t\t22\nIDC_RSCDISPLAYARSENAL_TAB_CARGOPUT\t\t23\nIDC_RSCDISPLAYARSENAL_TAB_CARGOMISC\t\t24\nIDC_RSCDISPLAYARSENAL_TAB_CARGOMAGALL\t\t26\n*/\njna_minItemMember = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];\n//jna_minItemMember = [24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,memberOnlyMagLimit,24,24,24,24,memberOnlyMagLimit];\njna_minItemMember = jna_minItemMember apply { minWeaps };\njna_minItemMember set [IDC_RSCDISPLAYARSENAL_TAB_CARGOMAG, memberOnlyMagLimit];\njna_minItemMember set [IDC_RSCDISPLAYARSENAL_TAB_CARGOMAGALL, memberOnlyMagLimit];\n//preload the ammobox so you dont need to wait the first time\n[\"Preload\"] call jn_fnc_arsenal;\n\n//server\nif(isServer)then{\n    [2,\"JNA server detected\",_fileName] call A3A_fnc_log",
"[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];};\n};\n\n//player\nif(hasInterface)then{\n    [2,\"JNA loading player data\",_fileName] call A3A_fnc_log",
"[\n        localize \"STR_A3_Arsenal\",\n        JN_fnc_arsenal_handleAction,\n        [],\n        6,\n        true,\n        false,\n        \"\",\n        \"alive _target && {_target distance _this < 5}\"\n    ];\n\n\n\n\n    //add open event\n    [missionNamespace, \"arsenalOpened\", {\n        disableSerialization;\n        UINamespace setVariable [\"arsanalDisplay\",(_this select 0)];\n\n        //spawn this to make sure it doesnt freeze the game\n        [] spawn {\n            disableSerialization;\n\n            _type = UINamespace getVariable [\"jn_type\",\"\"];\n            if(_type isEqualTo \"arsenal\")then{\n                _veh = vehicle player;\n                if((_veh != player) && driver _veh == player)then{\n                    [\"CustomInit\", [uiNamespace getVariable \"arsanalDisplay\"]] call jn_fnc_vehicleArsenal;\n                    UINamespace setVariable [\"jn_type\",\"vehicleArsenal\"];\n                }else{\n                    [\"CustomInit\", [uiNamespace getVariable \"arsanalDisplay\"]] call jn_fnc_arsenal;\n                };\n            };\n\n        };\n    }] call BIS_fnc_addScriptedEventHandler;\n\n\t//add close event\n    [missionNamespace, \"arsenalClosed\", {\n\n        _type = UINamespace getVariable [\"jn_type\",\"\"];\n\n        if(_type isEqualTo \"arsenal\")then{\n            [clientOwner] remoteExecCall [\"jn_fnc_arsenal_requestClose\",2];\n        };\n\n        if(_type isEqualTo \"vehicleArsenal\")then{\n            [\"Close\"] call jn_fnc_vehicleArsenal;\n            [clientOwner] remoteExecCall [\"jn_fnc_arsenal_requestClose\",2];\n        };\n    }] call BIS_fnc_addScriptedEventHandler;\n};\n[2,\"JNA init completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/Scripts/fn_advancedTowingInit.sqf": [
"[_positionAGL select 0, _positionAGL select 1, (_objectASL select 2) + 1]; \\\n_surfaceIntersectEndASL = [_positionAGL select 0, _positionAGL select 1, (_objectASL select 2) - 5]; \\\n_surfaces = lineIntersectsSurfaces [_surfaceIntersectStartASL, _surfaceIntersectEndASL, _object, objNull, true, 5]; \\\n_returnSurfaceASL = AGLToASL _positionAGL; \\\n{ \\\n\tscopeName \"surfaceLoop\"; \\\n\tif( isNull (_x select 2) ) then { \\\n\t\t_returnSurfaceASL = _x select 0; \\\n\t\tbreakOut \"surfaceLoop\"; \\\n\t} else { \\\n\t\tif!((_x select 2) isKindOf \"RopeSegment\") then { \\\n\t\t\t_objectFileName = str (_x select 2); \\\n\t\t\tif((_objectFileName find \" t_\") == -1 && (_objectFileName find \" b_\") == -1) then { \\\n\t\t\t\t_returnSurfaceASL = _x select 0; \\\n\t\t\t\tbreakOut \"surfaceLoop\"; \\\n\t\t\t}; \\\n\t\t}; \\\n\t}; \\\n} forEach _surfaces; \\\nif(_canFloat && (_returnSurfaceASL select 2) < 0) then { \\\n\t_returnSurfaceASL set [2,0]; \\\n}; \\\n\n#define SA_Find_Surface_ASL_Under_Model(_object,_modelOffset,_returnSurfaceASL,_canFloat) \\\nSA_Find_Surface_ASL_Under_Position(_object, (_object modelToWorldVisual _modelOffset), _returnSurfaceASL,_canFloat);\n\n#define SA_Find_Surface_AGL_Under_Model(_object,_modelOffset,_returnSurfaceAGL,_canFloat) \\\nSA_Find_Surface_ASL_Under_Model(_object,_modelOffset,_returnSurfaceAGL,_canFloat); \\\n_returnSurfaceAGL = ASLtoAGL _returnSurfaceAGL;\n\n#define SA_Get_Cargo(_vehicle,_cargo) \\\nif( count (ropeAttachedObjects _vehicle) == 0 ) then { \\\n\t_cargo = objNull; \\\n} else { \\\n\t_cargo = ((ropeAttachedObjects _vehicle) select 0) getVariable [\"SA_Cargo\",objNull]; \\\n};\n\nSA_Advanced_Towing_Install = {\n\n// Prevent advanced towing from installing twice\nif(!isNil \"SA_TOW_INIT\") exitWith {};\nscriptName \"fn_advancedTowingInit.sqf\";\nprivate _fileName = \"fn_advancedTowingInit.sqf\";\nSA_TOW_INIT = true;\n\n[2,\"Loading advanced towing\",_fileName] call A3A_fnc_log",
"[\"_vehicle\"];\n\n\tprivate [\"_runSimulation\",\"_currentCargo\",\"_maxVehicleSpeed\",\"_maxTowedVehicles\",\"_vehicleMass\"];\n\n\t_maxVehicleSpeed = getNumber (configFile >> \"CfgVehicles\" >> typeOf _vehicle >> \"maxSpeed\");\n\t_vehicleMass = 1000 max (getMass _vehicle);\n\t_maxTowedCargo = missionNamespace getVariable [\"SA_MAX_TOWED_CARGO\",2];\n\t_runSimulation = true;\n\n\tprivate [\"_currentVehicle\",\"_totalCargoMass\",\"_totalCargoCount\",\"_findNextCargo\",\"_towRopes\",\"_ropeLength\"];\n\tprivate [\"_ends\",\"_endsDistance\",\"_currentMaxSpeed\",\"_newMaxSpeed\"];\n\n\twhile {_runSimulation} do {\n\n\t\t// Calculate total mass and count of cargo being towed (only takes into account\n\t\t// cargo that's actively being towed (e.g. there's no slack in the rope)\n\n\t\t_currentVehicle = _vehicle;\n\t\t_totalCargoMass = 0;\n\t\t_totalCargoCount = 0;\n\t\t_findNextCargo = true;\n\t\twhile {_findNextCargo} do {\n\t\t\t_findNextCargo = false;\n\t\t\tSA_Get_Cargo(_currentVehicle,_currentCargo);\n\t\t\tif(!isNull _currentCargo) then {\n\t\t\t\t_towRopes = _currentVehicle getVariable [\"SA_Tow_Ropes\",[]];\n\t\t\t\tif(count _towRopes > 0) then {\n\t\t\t\t\t_ropeLength = ropeLength (_towRopes select 0);\n\t\t\t\t\t_ends = ropeEndPosition (_towRopes select 0);\n\t\t\t\t\t_endsDistance = (_ends select 0) distance (_ends select 1);\n\t\t\t\t\tif( _endsDistance >= _ropeLength - 2 ) then {\n\t\t\t\t\t\t_totalCargoMass = _totalCargoMass + (1000 max (getMass _currentCargo));\n\t\t\t\t\t\t_totalCargoCount = _totalCargoCount + 1;\n\t\t\t\t\t\t_currentVehicle = _currentCargo;\n\t\t\t\t\t\t_findNextCargo = true;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\t\t_newMaxSpeed = _maxVehicleSpeed / (1 max ((_totalCargoMass /  _vehicleMass) * 2));\n\t\t_newMaxSpeed = (_maxVehicleSpeed * 0.75) min _newMaxSpeed;\n\n\t\t// Prevent vehicle from moving if trying to move more cargo than pre-defined max\n\t\tif(_totalCargoCount > _maxTowedCargo) then {\n\t\t\t_newMaxSpeed = 0;\n\t\t};\n\n\t\t_currentMaxSpeed = _vehicle getVariable [\"SA_Max_Tow_Speed\",_maxVehicleSpeed];\n\n\t\tif(_currentMaxSpeed != _newMaxSpeed) then {\n\t\t\t_vehicle setVariable [\"SA_Max_Tow_Speed\",_newMaxSpeed];\n\t\t};\n\n\t\tsleep 0.1;\n\n\t};\n};\n\nSA_Simulate_Towing = {\n\n\tparams [\"_vehicle\",\"_vehicleHitchModelPos\",\"_cargo\",\"_cargoHitchModelPos\",\"_ropeLength\"];\n\n\tprivate [\"_lastCargoHitchPosition\",\"_lastCargoVectorDir\",\"_cargoLength\",\"_maxDistanceToCargo\",\"_lastMovedCargoPosition\",\"_cargoHitchPoints\"];\n\tprivate [\"_vehicleHitchPosition\",\"_cargoHitchPosition\",\"_newCargoHitchPosition\",\"_cargoVector\",\"_movedCargoVector\",\"_attachedObjects\",\"_currentCargo\"];\n\tprivate [\"_newCargoDir\",\"_lastCargoVectorDir\",\"_newCargoPosition\",\"_doExit\",\"_cargoPosition\",\"_vehiclePosition\",\"_maxVehicleSpeed\",\"_vehicleMass\",\"_cargoMass\",\"_cargoCanFloat\"];\n\tprivate [\"_cargoCorner1AGL\",\"_cargoCorner1ASL\",\"_cargoCorner2AGL\",\"_cargoCorner2ASL\",\"_cargoCorner3AGL\",\"_cargoCorner3ASL\",\"_cargoCorner4AGL\",\"_cargoCorner4ASL\",\"_surfaceNormal1\",\"_surfaceNormal2\",\"_surfaceNormal\"];\n\tprivate [\"_cargoCenterASL\",\"_surfaceHeight\",\"_surfaceHeight2\",\"_maxSurfaceHeight\"];\n\n\t_maxVehicleSpeed = getNumber (configFile >> \"CfgVehicles\" >> typeOf _vehicle >> \"maxSpeed\");\n\t_cargoCanFloat = if( getNumber (configFile >> \"CfgVehicles\" >> typeOf _cargo >> \"canFloat\") == 1 ) then { true } else { false };\n\n\tprivate [\"_cargoCenterOfMassAGL\",\"_cargoModelCenterGroundPosition\"];\n\tSA_Find_Surface_AGL_Under_Model(_cargo,getCenterOfMass _cargo,_cargoCenterOfMassAGL,_cargoCanFloat);\n\t_cargoModelCenterGroundPosition = _cargo worldToModelVisual _cargoCenterOfMassAGL;\n\t_cargoModelCenterGroundPosition set [0,0];\n\t_cargoModelCenterGroundPosition set [1,0];\n\t_cargoModelCenterGroundPosition set [2, (_cargoModelCenterGroundPosition select 2) - 0.05]; // Adjust height so that it doesn't ride directly on ground\n\n\t// Calculate cargo model corner points\n\tprivate [\"_cargoCornerPoints\"];\n\t_cargoCornerPoints = [_cargo] call SA_Get_Corner_Points;\n\t_corner1 = _cargoCornerPoints select 0;\n\t_corner2 = _cargoCornerPoints select 1;\n\t_corner3 = _cargoCornerPoints select 2;\n\t_corner4 = _cargoCornerPoints select 3;\n\n\n\t// Try to set cargo owner if the towing client doesn't own the cargo\n\tif(local _vehicle && !local _cargo) then {\n\t\t[[_cargo, clientOwner],\"SA_Set_Owner\"] call SA_RemoteExecServer;\n\t};\n\n\t_vehicleHitchModelPos set [2,0];\n\t_cargoHitchModelPos set [2,0];\n\n\t_lastCargoHitchPosition = _cargo modelToWorld _cargoHitchModelPos;\n\t_lastCargoVectorDir = vectorDir _cargo;\n\t_lastMovedCargoPosition = getPos _cargo;\n\n\t_cargoHitchPoints = [_cargo] call SA_Get_Hitch_Points;\n\t_cargoLength = (_cargoHitchPoints select 0) distance (_cargoHitchPoints select 1);\n\n\t_vehicleMass = 1 max (getMass _vehicle);\n\t_cargoMass = getMass _cargo;\n\tif(_cargoMass == 0) then {\n\t\t_cargoMass = _vehicleMass;\n\t};\n\n\t_maxDistanceToCargo = _ropeLength;\n\n\t_doExit = false;\n\n\t// Start vehicle speed simulation\n\t[_vehicle] spawn SA_Simulate_Towing_Speed;\n\n\twhile {!_doExit} do {\n\n\t\t_vehicleHitchPosition = _vehicle modelToWorld _vehicleHitchModelPos;\n\t\t_vehicleHitchPosition set [2,0];\n\t\t_cargoHitchPosition = _lastCargoHitchPosition;\n\t\t_cargoHitchPosition set [2,0];\n\n\t\t_cargoPosition = getPos _cargo;\n\t\t_vehiclePosition = getPos _vehicle;\n\n\t\tif(_vehicleHitchPosition distance _cargoHitchPosition > _maxDistanceToCargo) then {\n\n\t\t\t// Calculated simulated towing position + direction\n\t\t\t_newCargoHitchPosition = _vehicleHitchPosition vectorAdd ((_vehicleHitchPosition vectorFromTo _cargoHitchPosition) vectorMultiply _ropeLength);\n\t\t\t_cargoVector = _lastCargoVectorDir vectorMultiply _cargoLength;\n\t\t\t_movedCargoVector = _newCargoHitchPosition vectorDiff _lastCargoHitchPosition;\n\t\t\t_newCargoDir = vectorNormalized (_cargoVector vectorAdd _movedCargoVector);\n\t\t\t//if(_isRearCargoHitch) then {\n\t\t\t//\t_newCargoDir = _newCargoDir vectorMultiply -1;\n\t\t\t//};\n\t\t\t_lastCargoVectorDir = _newCargoDir;\n\t\t\t_newCargoPosition = _newCargoHitchPosition vectorAdd (_newCargoDir vectorMultiply -(vectorMagnitude (_cargoHitchModelPos)));\n\n\t\t\tSA_Find_Surface_ASL_Under_Position(_cargo,_newCargoPosition,_newCargoPosition,_cargoCanFloat);\n\n\t\t\t// Calculate surface normal (up) (more realistic than surfaceNormal function)\n\t\t\tSA_Find_Surface_ASL_Under_Model(_cargo,_corner1,_cargoCorner1ASL,_cargoCanFloat);\n\t\t\tSA_Find_Surface_ASL_Under_Model(_cargo,_corner2,_cargoCorner2ASL,_cargoCanFloat);\n\t\t\tSA_Find_Surface_ASL_Under_Model(_cargo,_corner3,_cargoCorner3ASL,_cargoCanFloat);\n\t\t\tSA_Find_Surface_ASL_Under_Model(_cargo,_corner4,_cargoCorner4ASL,_cargoCanFloat);\n\t\t\t_surfaceNormal1 = (_cargoCorner1ASL vectorFromTo _cargoCorner3ASL) vectorCrossProduct (_cargoCorner1ASL vectorFromTo _cargoCorner2ASL);\n\t\t\t_surfaceNormal2 = (_cargoCorner4ASL vectorFromTo _cargoCorner2ASL) vectorCrossProduct (_cargoCorner4ASL vectorFromTo _cargoCorner3ASL);\n\t\t\t_surfaceNormal = _surfaceNormal1 vectorAdd _surfaceNormal2;\n\n\t\t\tif(missionNamespace getVariable [\"SA_TOW_DEBUG_ENABLED\", false]) then {\n\t\t\t\tif(isNil \"sa_tow_debug_arrow_1\") then {\n\t\t\t\t\tsa_tow_debug_arrow_1 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\t\t\tsa_tow_debug_arrow_2 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\t\t\tsa_tow_debug_arrow_3 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\t\t\tsa_tow_debug_arrow_4 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\t\t};\n\t\t\t\tsa_tow_debug_arrow_1 setPosASL _cargoCorner1ASL;\n\t\t\t\tsa_tow_debug_arrow_1 setVectorUp _surfaceNormal;\n\t\t\t\tsa_tow_debug_arrow_2 setPosASL _cargoCorner2ASL;\n\t\t\t\tsa_tow_debug_arrow_2 setVectorUp _surfaceNormal;\n\t\t\t\tsa_tow_debug_arrow_3 setPosASL _cargoCorner3ASL;\n\t\t\t\tsa_tow_debug_arrow_3 setVectorUp _surfaceNormal;\n\t\t\t\tsa_tow_debug_arrow_4 setPosASL _cargoCorner4ASL;\n\t\t\t\tsa_tow_debug_arrow_4 setVectorUp _surfaceNormal;\n\t\t\t};\n\n\t\t\t// Calculate adjusted surface height based on surface normal (prevents vehicle from clipping into ground)\n\t\t\t_cargoCenterASL = AGLtoASL (_cargo modelToWorldVisual [0,0,0]);\n\t\t\t_cargoCenterASL set [2,0];\n\t\t\t_surfaceHeight = ((_cargoCorner1ASL vectorAdd ( _cargoCenterASL vectorMultiply -1)) vectorDotProduct _surfaceNormal1) /  ([0,0,1] vectorDotProduct _surfaceNormal1);\n\t\t\t_surfaceHeight2 = ((_cargoCorner1ASL vectorAdd ( _cargoCenterASL vectorMultiply -1)) vectorDotProduct _surfaceNormal2) /  ([0,0,1] vectorDotProduct _surfaceNormal2);\n\t\t\t_maxSurfaceHeight = (_newCargoPosition select 2) max _surfaceHeight max _surfaceHeight2;\n\t\t\t_newCargoPosition set [2, _maxSurfaceHeight ];\n\n\t\t\t_newCargoPosition = _newCargoPosition vectorAdd ( _cargoModelCenterGroundPosition vectorMultiply -1 );\n\n\t\t\t_cargo setVectorDir _newCargoDir;\n\t\t\t_cargo setVectorUp _surfaceNormal;\n\t\t\t_cargo setPosWorld _newCargoPosition;\n\n\t\t\t_lastCargoHitchPosition = _newCargoHitchPosition;\n\t\t\t_maxDistanceToCargo = _vehicleHitchPosition distance _newCargoHitchPosition;\n\t\t\t_lastMovedCargoPosition = _cargoPosition;\n\n\t\t\t_massAdjustedMaxSpeed = _vehicle getVariable [\"SA_Max_Tow_Speed\",_maxVehicleSpeed];\n\t\t\tif(speed _vehicle > (_massAdjustedMaxSpeed)+0.1) then {\n\t\t\t\t_vehicle setVelocity ((vectorNormalized (velocity _vehicle)) vectorMultiply (_massAdjustedMaxSpeed/3.6));\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tif(_lastMovedCargoPosition distance _cargoPosition > 2) then {\n\t\t\t\t_lastCargoHitchPosition = _cargo modelToWorld _cargoHitchModelPos;\n\t\t\t\t_lastCargoVectorDir = vectorDir _cargo;\n\t\t\t};\n\n\t\t};\n\n\t\t// If vehicle isn't local to the client, switch client running towing simulation\n\t\tif(!local _vehicle) then {\n\t\t\t[_this,\"SA_Simulate_Towing\",_vehicle] call SA_RemoteExec;\n\t\t\t_doExit = true;\n\t\t};\n\n\t\t// If the vehicle isn't towing anything, stop the towing simulation\n\t\tSA_Get_Cargo(_vehicle,_currentCargo);\n\t\tif(isNull _currentCargo) then {\n\t\t\t_doExit = true;\n\t\t};\n\n\t\tsleep 0.01;\n\n\t};\n};\n\nSA_Get_Corner_Points = {\n\tparams [\"_vehicle\"];\n\tprivate [\"_centerOfMass\",\"_bbr\",\"_p1\",\"_p2\",\"_rearCorner\",\"_rearCorner2\",\"_frontCorner\",\"_frontCorner2\"];\n\tprivate [\"_maxWidth\",\"_widthOffset\",\"_maxLength\",\"_lengthOffset\",\"_widthFactor\",\"_lengthFactor\"];\n\n\t// Correct width and length factor for air\n\t_widthFactor = 0.75;\n\t_lengthFactor = 0.75;\n\tif(_vehicle isKindOf \"Air\") then {\n\t\t_widthFactor = 0.3;\n\t};\n\tif(_vehicle isKindOf \"Helicopter\") then {\n\t\t_widthFactor = 0.2;\n\t\t_lengthFactor = 0.45;\n\t};\n\n\t_centerOfMass = getCenterOfMass _vehicle;\n\t_bbr = boundingBoxReal _vehicle;\n\t_p1 = _bbr select 0;\n\t_p2 = _bbr select 1;\n\t_maxWidth = abs ((_p2 select 0) - (_p1 select 0));\n\t_widthOffset = ((_maxWidth / 2) - abs ( _centerOfMass select 0 )) * _widthFactor;\n\t_maxLength = abs ((_p2 select 1) - (_p1 select 1));\n\t_lengthOffset = ((_maxLength / 2) - abs (_centerOfMass select 1 )) * _lengthFactor;\n\t_rearCorner = [(_centerOfMass select 0) + _widthOffset, (_centerOfMass select 1) - _lengthOffset, _centerOfMass select 2];\n\t_rearCorner2 = [(_centerOfMass select 0) - _widthOffset, (_centerOfMass select 1) - _lengthOffset, _centerOfMass select 2];\n\t_frontCorner = [(_centerOfMass select 0) + _widthOffset, (_centerOfMass select 1) + _lengthOffset, _centerOfMass select 2];\n\t_frontCorner2 = [(_centerOfMass select 0) - _widthOffset, (_centerOfMass select 1) + _lengthOffset, _centerOfMass select 2];\n\n\tif(missionNamespace getVariable [\"SA_TOW_DEBUG_ENABLED\", false]) then {\n\t\tif(isNil \"sa_tow_debug_arrow_1\") then {\n\t\t\tsa_tow_debug_arrow_1 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\tsa_tow_debug_arrow_2 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\tsa_tow_debug_arrow_3 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t\tsa_tow_debug_arrow_4 = \"Sign_Arrow_F\" createVehicleLocal [0,0,0];\n\t\t};\n\t\tsa_tow_debug_arrow_1 setPosASL  AGLtoASL (_vehicle modelToWorldVisual _rearCorner);\n\t\tsa_tow_debug_arrow_2 setPosASL  AGLtoASL (_vehicle modelToWorldVisual _rearCorner2);\n\t\tsa_tow_debug_arrow_3 setPosASL  AGLtoASL (_vehicle modelToWorldVisual _frontCorner);\n\t\tsa_tow_debug_arrow_4 setPosASL  AGLtoASL (_vehicle modelToWorldVisual _frontCorner2);\n\t};\n\n\t[_rearCorner,_rearCorner2,_frontCorner,_frontCorner2];\n};\n\nSA_Get_Hitch_Points = {\n\tparams [\"_vehicle\"];\n\tprivate [\"_cornerPoints\",\"_rearCorner\",\"_rearCorner2\",\"_frontCorner\",\"_frontCorner2\",\"_rearHitchPoint\"];\n\tprivate [\"_frontHitchPoint\",\"_sideLeftPoint\",\"_sideRightPoint\"];\n\t_cornerPoints = [_vehicle] call SA_Get_Corner_Points;\n\t_rearCorner = _cornerPoints select 0;\n\t_rearCorner2 = _cornerPoints select 1;\n\t_frontCorner = _cornerPoints select 2;\n\t_frontCorner2 = _cornerPoints select 3;\n\t_rearHitchPoint = ((_rearCorner vectorDiff _rearCorner2) vectorMultiply 0.5) vectorAdd  _rearCorner2;\n\t_frontHitchPoint = ((_frontCorner vectorDiff _frontCorner2) vectorMultiply 0.5) vectorAdd  _frontCorner2;\n\t//_sideLeftPoint = ((_frontCorner vectorDiff _rearCorner) vectorMultiply 0.5) vectorAdd  _frontCorner;\n\t//_sideRightPoint = ((_frontCorner2 vectorDiff _rearCorner2) vectorMultiply 0.5) vectorAdd  _frontCorner2;\n\t[_frontHitchPoint,_rearHitchPoint];\n};\n\nSA_Attach_Tow_Ropes = {\n\tparams [\"_cargo\",\"_player\"];\n\t_vehicle = _player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull];\n\tif(!isNull _vehicle) then {\n\t\tif(local _vehicle) then {\n\t\t\tprivate [\"_towRopes\",\"_vehicleHitch\",\"_cargoHitch\",\"_objDistance\",\"_ropeLength\"];\n\t\t\t_towRopes = _vehicle getVariable [\"SA_Tow_Ropes\",[]];\n\t\t\tif(count _towRopes == 1) then {\n\n\t\t\t\t/*\n\t\t\t\tprivate [\"_cargoHitchPoints\",\"_distanceToFrontHitch\",\"_distanceToRearHitch\",\"_isRearCargoHitch\"];\n\t\t\t\t_cargoHitchPoints = [_cargo] call SA_Get_Hitch_Points;\n\t\t\t\t_distanceToFrontHitch = player distance (_cargo modelToWorld (_cargoHitchPoints select 0));\n\t\t\t\t_distanceToRearHitch = player distance (_cargo modelToWorld (_cargoHitchPoints select 1));\n\t\t\t\tif( _distanceToFrontHitch < _distanceToRearHitch ) then {\n\t\t\t\t\t_cargoHitch = _cargoHitchPoints select 0;\n\t\t\t\t\t_isRearCargoHitch = false;\n\t\t\t\t} else {\n\t\t\t\t\t_cargoHitch = _cargoHitchPoints select 1;\n\t\t\t\t\t_isRearCargoHitch = true;\n\t\t\t\t};\n\t\t\t\t*/\n\n\t\t\t\t_cargoHitch = ([_cargo] call SA_Get_Hitch_Points) select 0;\n\n\t\t\t\t_vehicleHitch = ([_vehicle] call SA_Get_Hitch_Points) select 1;\n\t\t\t\t_ropeLength = (ropeLength (_towRopes select 0));\n\t\t\t\t_objDistance = ((_vehicle modelToWorld _vehicleHitch) distance (_cargo modelToWorld _cargoHitch));\n\t\t\t\tif( _objDistance > _ropeLength ) then {\n\t\t\t\t\t[[\"The tow ropes are too short. Move vehicle closer.\", false],\"SA_Hint\",_player] call SA_RemoteExec;\n\t\t\t\t} else {\n\t\t\t\t\t[_vehicle,_player] call SA_Drop_Tow_Ropes;\n\t\t\t\t\t_helper = \"Land_Can_V2_F\" createVehicle position _cargo;\n\t\t\t\t\t_helper attachTo [_cargo, _cargoHitch];\n\t\t\t\t\t_helper setVariable [\"SA_Cargo\",_cargo,true];\n\t\t\t\t\thideObject _helper;\n\t\t\t\t\t[[_helper],\"SA_Hide_Object_Global\"] call SA_RemoteExecServer;\n\t\t\t\t\t[_helper, [0,0,0], [0,0,-1]] ropeAttachTo (_towRopes select 0);\n\t\t\t\t\t[_vehicle,_vehicleHitch,_cargo,_cargoHitch,_ropeLength] spawn SA_Simulate_Towing;\n\n\t\t\t\t\t// capture empty vehicles when attached\n\t\t\t\t\tif (count crew _cargo == 0) then {\n\t\t\t\t\t\t[_cargo, side group _player, true] remoteExec [\"A3A_fnc_vehKilledOrCaptured\", 2];\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t} else {\n\t\t\t[_this,\"SA_Attach_Tow_Ropes\",_vehicle,true] call SA_RemoteExec;\n\t\t};\n\t};\n};\n\nSA_Take_Tow_Ropes = {\n\tif (captive player) then {player setCaptive false};//by Barbolani to avoid undercover exploits\n\tparams [\"_vehicle\",\"_player\"];\n\tif(local _vehicle) then {\n\t\tdiag_log format [\"Take Tow Ropes Called %1\", _this];\n\t\tprivate [\"_existingTowRopes\",\"_hitchPoint\",\"_rope\"];\n\t\t_existingTowRopes = _vehicle getVariable [\"SA_Tow_Ropes\",[]];\n\t\tif(count _existingTowRopes == 0) then {\n\t\t\t_hitchPoint = [_vehicle] call SA_Get_Hitch_Points select 1;\n\t\t\t_rope = ropeCreate [_vehicle, _hitchPoint, 10];\n\t\t\t_vehicle setVariable [\"SA_Tow_Ropes\",[_rope],true];\n\t\t\t_this call SA_Pickup_Tow_Ropes;\n\t\t};\n\t} else {\n\t\t[_this,\"SA_Take_Tow_Ropes\",_vehicle,true] call SA_RemoteExec;\n\t};\n};\n\nSA_Pickup_Tow_Ropes = {\n\tparams [\"_vehicle\",\"_player\"];\n\tif(local _vehicle) then {\n\t\tprivate [\"_attachedObj\",\"_helper\"];\n\t\t{\n\t\t\t_attachedObj = _x;\n\t\t\t{\n\t\t\t\t_attachedObj ropeDetach _x;\n\t\t\t} forEach (_vehicle getVariable [\"SA_Tow_Ropes\",[]]);\n\t\t\tdetach _attachedObj;\n\t\t\tdeleteVehicle _attachedObj;\n\t\t} forEach ropeAttachedObjects _vehicle;\n\t\t_helper = \"Land_Can_V2_F\" createVehicle position _player;\n\t\t{\n\t\t\t[_helper, [0, 0, 0], [0,0,-1]] ropeAttachTo _x;\n\t\t\t_helper attachTo [_player, [-0.1, 0.1, 0.15], \"Pelvis\"];\n\t\t} forEach (_vehicle getVariable [\"SA_Tow_Ropes\",[]]);\n\t\thideObject _helper;\n\t\t[[_helper],\"SA_Hide_Object_Global\"] call SA_RemoteExecServer;\n\t\t_player setVariable [\"SA_Tow_Ropes_Vehicle\", _vehicle,true];\n\t\t_player setVariable [\"SA_Tow_Ropes_Pick_Up_Helper\", _helper,true];\n\t} else {\n\t\t[_this,\"SA_Pickup_Tow_Ropes\",_vehicle,true] call SA_RemoteExec;\n\t};\n};\n\nSA_Drop_Tow_Ropes = {\n\tparams [\"_vehicle\",\"_player\"];\n\tif(local _vehicle) then {\n\t\tprivate [\"_helper\"];\n\t\t_helper = (_player getVariable [\"SA_Tow_Ropes_Pick_Up_Helper\", objNull]);\n\t\tif(!isNull _helper) then {\n\t\t\t{\n\t\t\t\t_helper ropeDetach _x;\n\t\t\t} forEach (_vehicle getVariable [\"SA_Tow_Ropes\",[]]);\n\t\t\tdetach _helper;\n\t\t\tdeleteVehicle _helper;\n\t\t};\n\t\t_player setVariable [\"SA_Tow_Ropes_Vehicle\", nil,true];\n\t\t_player setVariable [\"SA_Tow_Ropes_Pick_Up_Helper\", nil,true];\n\t} else {\n\t\t[_this,\"SA_Drop_Tow_Ropes\",_vehicle,true] call SA_RemoteExec;\n\t};\n};\n\nSA_Put_Away_Tow_Ropes = {\n\tparams [\"_vehicle\",\"_player\"];\n\tif(local _vehicle) then {\n\t\tprivate [\"_existingTowRopes\",\"_hitchPoint\",\"_rope\"];\n\t\t_existingTowRopes = _vehicle getVariable [\"SA_Tow_Ropes\",[]];\n\t\tif(count _existingTowRopes > 0) then {\n\t\t\t_this call SA_Pickup_Tow_Ropes;\n\t\t\t_this call SA_Drop_Tow_Ropes;\n\t\t\t{\n\t\t\t\tropeDestroy _x;\n\t\t\t} forEach _existingTowRopes;\n\t\t\t_vehicle setVariable [\"SA_Tow_Ropes\",nil,true];\n\t\t};\n\t} else {\n\t\t[_this,\"SA_Put_Away_Tow_Ropes\",_vehicle,true] call SA_RemoteExec;\n\t};\n};\n\nSA_Attach_Tow_Ropes_Action = {\n\tprivate [\"_vehicle\",\"_cargo\",\"_canBeTowed\"];\n\t_cargo = cursorTarget;\n\t_vehicle = player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull];\n\tif([_vehicle,_cargo] call SA_Can_Attach_Tow_Ropes) then {\n\n\t\t_canBeTowed = true;\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_LOCKED_VEHICLES_ENABLED\",false]) then {\n\t\t\tif( locked _cargo > 1 ) then {\n\t\t\t\t[\"Cannot attach tow ropes to locked vehicle\",false] call SA_Hint;\n\t\t\t\t_canBeTowed = false;\n\t\t\t};\n\t\t};\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_IN_EXILE_SAFEZONE_ENABLED\",false]) then {\n\t\t\tif(!isNil \"ExilePlayerInSafezone\") then {\n\t\t\t\tif( ExilePlayerInSafezone ) then {\n\t\t\t\t\t[\"Cannot attach tow ropes in safe zone\",false] call SA_Hint;\n\t\t\t\t\t_canBeTowed = false;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\t\tif(_canBeTowed) then {\n\t\t\t[_cargo,player] call SA_Attach_Tow_Ropes;\n\t\t};\n\n\t};\n};\n\nSA_Attach_Tow_Ropes_Action_Check = {\n\tprivate [\"_vehicle\",\"_cargo\"];\n\t_vehicle = player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull];\n\t_cargo = cursorTarget;\n\t[_vehicle,_cargo] call SA_Can_Attach_Tow_Ropes;\n};\n\nSA_Can_Attach_Tow_Ropes = {\n\tparams [\"_vehicle\",\"_cargo\"];\n\tif(!isNull _vehicle && !isNull _cargo) then {\n\t\t[_vehicle,_cargo] call SA_Is_Supported_Cargo && vehicle player == player && player distance _cargo < 10 && _vehicle != _cargo;\n\t} else {\n\t\tfalse;\n\t};\n};\n\nSA_Take_Tow_Ropes_Action = {\n\tprivate [\"_vehicle\",\"_canTakeTowRopes\"];\n\t_vehicle = cursorTarget;\n\tif([_vehicle] call SA_Can_Take_Tow_Ropes) then {\n\n\t\t_canTakeTowRopes = true;\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_LOCKED_VEHICLES_ENABLED\",false]) then {\n\t\t\tif( locked _vehicle > 1 ) then {\n\t\t\t\t[\"Cannot take tow ropes from locked vehicle\",false] call SA_Hint;\n\t\t\t\t_canTakeTowRopes = false;\n\t\t\t};\n\t\t};\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_IN_EXILE_SAFEZONE_ENABLED\",false]) then {\n\t\t\tif(!isNil \"ExilePlayerInSafezone\") then {\n\t\t\t\tif( ExilePlayerInSafezone ) then {\n\t\t\t\t\t[\"Cannot take tow ropes in safe zone\",false] call SA_Hint;\n\t\t\t\t\t_canTakeTowRopes = false;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\t\tif(_canTakeTowRopes) then {\n\t\t\t[_vehicle,player] call SA_Take_Tow_Ropes;\n\t\t};\n\n\t};\n};\n\nSA_Take_Tow_Ropes_Action_Check = {\n\t[cursorTarget] call SA_Can_Take_Tow_Ropes;\n};\n\nSA_Can_Take_Tow_Ropes = {\n\tparams [\"_vehicle\"];\n\tif([_vehicle] call SA_Is_Supported_Vehicle) then {\n\t\tprivate [\"_existingVehicle\",\"_existingTowRopes\"];\n\t\t_existingTowRopes = _vehicle getVariable [\"SA_Tow_Ropes\",[]];\n\t\t_existingVehicle = player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull];\n\t\tvehicle player == player && player distance _vehicle < 10 && (count _existingTowRopes) == 0 && isNull _existingVehicle;\n\t} else {\n\t\tfalse;\n\t};\n};\n\nSA_Put_Away_Tow_Ropes_Action = {\n\tprivate [\"_vehicle\",\"_canPutAwayTowRopes\"];\n\t_vehicle = cursorTarget;\n\tif([_vehicle] call SA_Can_Put_Away_Tow_Ropes) then {\n\n\t\t_canPutAwayTowRopes = true;\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_LOCKED_VEHICLES_ENABLED\",false]) then {\n\t\t\tif( locked _vehicle > 1 ) then {\n\t\t\t\t[\"Cannot put away tow ropes in locked vehicle\",false] call SA_Hint;\n\t\t\t\t_canPutAwayTowRopes = false;\n\t\t\t};\n\t\t};\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_IN_EXILE_SAFEZONE_ENABLED\",false]) then {\n\t\t\tif(!isNil \"ExilePlayerInSafezone\") then {\n\t\t\t\tif( ExilePlayerInSafezone ) then {\n\t\t\t\t\t[\"Cannot put away tow ropes in safe zone\",false] call SA_Hint;\n\t\t\t\t\t_canPutAwayTowRopes = false;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\t\tif(_canPutAwayTowRopes) then {\n\t\t\t[_vehicle,player] call SA_Put_Away_Tow_Ropes;\n\t\t};\n\n\t};\n};\n\nSA_Put_Away_Tow_Ropes_Action_Check = {\n\t[cursorTarget] call SA_Can_Put_Away_Tow_Ropes;\n};\n\nSA_Can_Put_Away_Tow_Ropes = {\n\tparams [\"_vehicle\"];\n\tprivate [\"_existingTowRopes\"];\n\tif([_vehicle] call SA_Is_Supported_Vehicle) then {\n\t\t_existingTowRopes = _vehicle getVariable [\"SA_Tow_Ropes\",[]];\n\t\tvehicle player == player && player distance _vehicle < 10 && (count _existingTowRopes) > 0;\n\t} else {\n\t\tfalse;\n\t};\n};\n\n\nSA_Drop_Tow_Ropes_Action = {\n\tprivate [\"_vehicle\"];\n\t_vehicle = player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull];\n\tif([] call SA_Can_Drop_Tow_Ropes) then {\n\t\t[_vehicle, player] call SA_Drop_Tow_Ropes;\n\t};\n};\n\nSA_Drop_Tow_Ropes_Action_Check = {\n\t[] call SA_Can_Drop_Tow_Ropes;\n};\n\nSA_Can_Drop_Tow_Ropes = {\n\t!isNull (player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull]) && vehicle player == player;\n};\n\n\n\nSA_Pickup_Tow_Ropes_Action = {\n\tprivate [\"_nearbyTowVehicles\",\"_canPickupTowRopes\",\"_vehicle\"];\n\t_nearbyTowVehicles = missionNamespace getVariable [\"SA_Nearby_Tow_Vehicles\",[]];\n\tif([] call SA_Can_Pickup_Tow_Ropes) then {\n\n\t\t_vehicle = _nearbyTowVehicles select 0;\n\t\t_canPickupTowRopes = true;\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_LOCKED_VEHICLES_ENABLED\",false]) then {\n\t\t\tif( locked _vehicle > 1 ) then {\n\t\t\t\t[\"Cannot pick up tow ropes from locked vehicle\",false] call SA_Hint;\n\t\t\t\t_canPickupTowRopes = false;\n\t\t\t};\n\t\t};\n\n\t\tif!(missionNamespace getVariable [\"SA_TOW_IN_EXILE_SAFEZONE_ENABLED\",false]) then {\n\t\t\tif(!isNil \"ExilePlayerInSafezone\") then {\n\t\t\t\tif( ExilePlayerInSafezone ) then {\n\t\t\t\t\t[\"Cannot pick up tow ropes in safe zone\",false] call SA_Hint;\n\t\t\t\t\t_canPickupTowRopes = false;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\t\tif(_canPickupTowRopes) then {\n\t\t\t[_nearbyTowVehicles select 0, player] call SA_Pickup_Tow_Ropes;\n\t\t};\n\n\t};\n};\n\nSA_Pickup_Tow_Ropes_Action_Check = {\n\t[] call SA_Can_Pickup_Tow_Ropes;\n};\n\nSA_Can_Pickup_Tow_Ropes = {\n\tisNull (player getVariable [\"SA_Tow_Ropes_Vehicle\", objNull]) && count (missionNamespace getVariable [\"SA_Nearby_Tow_Vehicles\",[]]) > 0 && vehicle player == player;\n};\n\nSA_TOW_SUPPORTED_VEHICLES = [\n\t\"Tank\", \"Car\", \"Ship\"\n];\n\nSA_Is_Supported_Vehicle = {\n\tparams [\"_vehicle\",\"_isSupported\"];\n\t_isSupported = false;\n\tif(not isNull _vehicle) then {\n\t\t{\n\t\t\tif(_vehicle isKindOf _x) then {\n\t\t\t\t_isSupported = true;\n\t\t\t};\n\t\t} forEach (missionNamespace getVariable [\"SA_TOW_SUPPORTED_VEHICLES_OVERRIDE\",SA_TOW_SUPPORTED_VEHICLES]);\n\t};\n\t_isSupported;\n};\n\nSA_TOW_RULES = [\n\t[\"Tank\",\"CAN_TOW\",\"Tank\"],\n\t[\"Tank\",\"CAN_TOW\",\"Car\"],\n\t[\"Tank\",\"CAN_TOW\",\"Ship\"],\n\t[\"Tank\",\"CAN_TOW\",\"Air\"],\n\t[\"Car\",\"CAN_TOW\",\"Tank\"],\n\t[\"Car\",\"CAN_TOW\",\"Car\"],\n\t[\"Car\",\"CAN_TOW\",\"Ship\"],\n\t[\"Car\",\"CAN_TOW\",\"Air\"],\n\t[\"Ship\",\"CAN_TOW\",\"Ship\"]\n];\n\nSA_Is_Supported_Cargo = {\n\tparams [\"_vehicle\",\"_cargo\"];\n\tprivate [\"_canTow\"];\n\t_canTow = false;\n\tif (not isNull _vehicle && not isNull _cargo) then {\n\t\t{\n\t\t\tif (_vehicle isKindOf (_x select 0)) then {\n\t\t\t\tif (_cargo isKindOf (_x select 2)) then {\n\t\t\t\t\tif ( (toUpper (_x select 1)) == \"CAN_TOW\" ) then {\n\t\t\t\t\t\t_canTow = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_canTow = false;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t} forEach (missionNamespace getVariable [\"SA_TOW_RULES_OVERRIDE\",SA_TOW_RULES]);\n\t};\n\t_canTow;\n};\n\nSA_Hint = {\n    params [\"_msg\",[\"_isSuccess\",true]];\n    if (!isNil \"ExileClient_gui_notification_event_addNotification\") then {\n\t\tif (_isSuccess) then {\n\t\t\t[\"Success\", [_msg]] call ExileClient_gui_notification_event_addNotification;\n\t\t} else {\n\t\t\t[\"Whoops\", [_msg]] call ExileClient_gui_notification_event_addNotification;\n\t\t};\n    } else {\n\t\t[\"Advanced Towing\", _msg] call A3A_fnc_customHint;\n    };\n};\n\nSA_Hide_Object_Global = {\n\tparams [\"_obj\"];\n\tif ( _obj isKindOf \"Land_Can_V2_F\" ) then {\n\t\thideObjectGlobal _obj;\n\t};\n};\n\nSA_Set_Owner = {\n\tparams [\"_obj\",\"_client\"];\n\t_obj setOwner _client;\n};\n\nSA_Add_Player_Tow_Actions = {\n\n\tplayer addAction [\"Deploy Tow Ropes\", {\n\t\t[] call SA_Take_Tow_Ropes_Action;\n\t}, nil, 0, false, true, \"\", \"call SA_Take_Tow_Ropes_Action_Check\"];\n\n\tplayer addAction [\"Put Away Tow Ropes\", {\n\t\t[] call SA_Put_Away_Tow_Ropes_Action;\n\t}, nil, 0, false, true, \"\", \"call SA_Put_Away_Tow_Ropes_Action_Check\"];\n\n\tplayer addAction [\"Attach To Tow Ropes\", {\n\t\t[] call SA_Attach_Tow_Ropes_Action;\n\t}, nil, 0, false, true, \"\", \"call SA_Attach_Tow_Ropes_Action_Check\"];\n\n\tplayer addAction [\"Drop Tow Ropes\", {\n\t\t[] call SA_Drop_Tow_Ropes_Action;\n\t}, nil, 0, false, true, \"\", \"call SA_Drop_Tow_Ropes_Action_Check\"];\n\n\tplayer addAction [\"Pickup Tow Ropes\", {\n\t\t[] call SA_Pickup_Tow_Ropes_Action;\n\t}, nil, 0, false, true, \"\", \"call SA_Pickup_Tow_Ropes_Action_Check\"];\n\n\tif (isMultiplayer) then {\n\t\tplayer addEventHandler [\"Respawn\",{\n\t\t\tplayer setVariable [\"SA_Tow_Actions_Loaded\",false];\n\t\t}];\n\t};\n};\n\nSA_Find_Nearby_Tow_Vehicles = {\n\tprivate [\"_nearVehicles\",\"_nearVehiclesWithTowRopes\",\"_vehicle\",\"_ends\",\"_end1\",\"_end2\"];\n\t_nearVehicles = [];\n\t{\n\t\t_nearVehicles append (position player nearObjects [_x, 30]);\n\t} forEach (missionNamespace getVariable [\"SA_TOW_SUPPORTED_VEHICLES_OVERRIDE\",SA_TOW_SUPPORTED_VEHICLES]);\n\t_nearVehiclesWithTowRopes = [];\n\t{\n\t\t_vehicle = _x;\n\t\t{\n\t\t\t_ends = ropeEndPosition _x;\n\t\t\tif (count _ends == 2) then {\n\t\t\t\t_end1 = _ends select 0;\n\t\t\t\t_end2 = _ends select 1;\n\t\t\t\tif (((position player) distance _end1) < 5 || ((position player) distance _end2) < 5 ) then {\n\t\t\t\t\t_nearVehiclesWithTowRopes pushBack _vehicle;\n\t\t\t\t}\n\t\t\t};\n\t\t} forEach (_vehicle getVariable [\"SA_Tow_Ropes\",[]]);\n\t} forEach _nearVehicles;\n\t_nearVehiclesWithTowRopes;\n};\n\nif (hasInterface) then {\n\t[] spawn {\n\t\twhile {true} do {\n\t\t\tif (!isNull player && isPlayer player) then {\n\t\t\t\tif !(player getVariable [\"SA_Tow_Actions_Loaded\",false]) then {\n\t\t\t\t\t[] call SA_Add_Player_Tow_Actions;\n\t\t\t\t\tplayer setVariable [\"SA_Tow_Actions_Loaded\",true];\n\t\t\t\t};\n\t\t\t};\n\t\t\tmissionNamespace setVariable [\"SA_Nearby_Tow_Vehicles\", (call SA_Find_Nearby_Tow_Vehicles)];\n\t\t\tsleep 2;\n\t\t};\n\t};\n};\n\nSA_RemoteExec = {\n\tparams [\"_params\",\"_functionName\",\"_target\",[\"_isCall\",false]];\n\tif (!isNil \"ExileClient_system_network_send\") then {\n\t\t[\"AdvancedTowingRemoteExecClient\",[_params,_functionName,_target,_isCall]] call ExileClient_system_network_send;\n\t} else {\n\t\tif (_isCall) then {\n\t\t\t_params remoteExecCall [_functionName, _target];\n\t\t} else {\n\t\t\t_params remoteExec [_functionName, _target];\n\t\t};\n\t};\n};\n\nSA_RemoteExecServer = {\n\tparams [\"_params\",\"_functionName\",[\"_isCall\",false]];\n\tif (!isNil \"ExileClient_system_network_send\") then {\n\t\t[\"AdvancedTowingRemoteExecServer\",[_params,_functionName,_isCall]] call ExileClient_system_network_send;\n\t} else {\n\t\tif (_isCall) then {\n\t\t\t_params remoteExecCall [_functionName, 2];\n\t\t} else {\n\t\t\t_params remoteExec [_functionName, 2];\n\t\t};\n\t};\n};\n\nif (isServer) then {\n\n\t// Adds support for exile network calls (Only used when running exile) //\n\n\tSA_SUPPORTED_REMOTEEXECSERVER_FUNCTIONS = [\"SA_Set_Owner\",\"SA_Hide_Object_Global\"];\n\n\tExileServer_AdvancedTowing_network_AdvancedTowingRemoteExecServer = {\n\t\tparams [\"_sessionId\", \"_messageParameters\",[\"_isCall\",false]];\n\t\t_messageParameters params [\"_params\",\"_functionName\"];\n\t\tif (_functionName in SA_SUPPORTED_REMOTEEXECSERVER_FUNCTIONS) then {\n\t\t\tif (_isCall) then {\n\t\t\t\t_params call (missionNamespace getVariable [_functionName,{}]);\n\t\t\t} else {\n\t\t\t\t_params spawn (missionNamespace getVariable [_functionName,{}]);\n\t\t\t};\n\t\t};\n\t};\n\n\tSA_SUPPORTED_REMOTEEXECCLIENT_FUNCTIONS = [\"SA_Simulate_Towing\",\"SA_Attach_Tow_Ropes\",\"SA_Take_Tow_Ropes\",\"SA_Put_Away_Tow_Ropes\",\"SA_Pickup_Tow_Ropes\",\"SA_Drop_Tow_Ropes\",\"SA_Hint\"];\n\n\tExileServer_AdvancedTowing_network_AdvancedTowingRemoteExecClient = {\n\t\tparams [\"_sessionId\", \"_messageParameters\"];\n\t\t_messageParameters params [\"_params\",\"_functionName\",\"_target\",[\"_isCall\",false]];\n\t\tif (_functionName in SA_SUPPORTED_REMOTEEXECCLIENT_FUNCTIONS) then {\n\t\t\tif (_isCall) then {\n\t\t\t\t_params remoteExecCall [_functionName, _target];\n\t\t\t} else {\n\t\t\t\t_params remoteExec [_functionName, _target];\n\t\t\t};\n\t\t};\n\t};\n\n\t// Install Advanced Towing on all clients (plus JIP) //\n\n\tpublicVariable \"SA_Advanced_Towing_Install\";\n\tremoteExecCall [\"SA_Advanced_Towing_Install\", -2,true];\n\n};\n\n[2,\"Loaded advanced towing\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/AI/fn_airbomb.sqf": [
"[3, format [\"Executing on: %1\", clientOwner], _filename, true] call A3A_fnc_log",
"[\"_countX\",\"_plane\",\"_typeX\",\"_ammo\",\"_cluster\",\"_sleep\",\"_bomb\"];\n_plane = vehicle (_this select 0);\n_typeX = _this select 1;\n_countX = 4;\n_cluster = false;\n\nswitch (_typeX) do {\n    case (\"HE\"): {\n        _ammo = \"Bo_Mk82\";\n\t\t_sleep = 0.25\n    };\n\tcase (\"CLUSTER\"): {\n\t\t_ammo = \"BombCluster_03_Ammo_F\";\n\t\t_sleep = 0.5\n\t};\n\tcase (\"NAPALM\"): {\n\t\t_ammo = \"ammo_Bomb_SDB\";\n\t\t_sleep = 0.5\n\t};\n\tdefault {\n\t\t[1, \"Invalid bomb type\", _filename] call A3A_fnc_log",
"[3, format [\"Dropping %1 bombs of type %2 at %3 (near %4)\", _countX, _typeX, getPos _plane,text nearestLocation [getPos _plane, \"NameCity\"]], _filename, true] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/AI/fn_artillery.sqf": [
"[\"_mrkOrigin\",\"_pos\",\"_attackingSide\",\"_countX\",\"_mrkDestination\",\"_veh\",\"_posOrigin\",\"_sideTargets\",\"_posDestination\",\"_typeVehX\",\"_typeAmmunition\",\"_size\",\"_vehicle\",\"_vehCrew\",\"_groupVeh\",\"_roundsX\",\"_objectiveX\",\"_objectivesX\",\"_timeX\"];\nprivate _filename = \"fn_artillery\";\n\n_mrkOrigin = _this select 0;\n_posOrigin = if (_mrkOrigin isEqualType \"\") then {getMarkerPos _mrkOrigin} else {_mrkOrigin};\n_mrkDestination = _this select 1;\n_attackingSide = _this select 2;\n_sideTargets = _attackingSide call BIS_fnc_enemySides;\n_posDestination = getMarkerPos _mrkDestination;\n_typeVehX = if (_attackingSide == Occupants) then {vehNATOMRLS} else {vehCSATMRLS};\n\nif !([_typeVehX] call A3A_fnc_vehAvailable) exitWith {};\n\n_typeAmmunition = if (_attackingSide == Occupants) then {vehNATOMRLSMags} else {vehCSATMRLSMags};\n\n_pos = [_posOrigin, 50,100, 10, 0, 0.3, 0] call BIS_Fnc_findSafePos;\n\n_vehicle=[_pos, random 360,_typeVehX, _attackingSide] call bis_fnc_spawnvehicle;\n_veh = _vehicle select 0;\n_vehCrew = _vehicle select 1;\n{[_x] call A3A_fnc_NATOinit} forEach _vehCrew;\n[_veh, _attackingSide] call A3A_fnc_AIVEHinit;\n_groupVeh = _vehicle select 2;\n_size = [_mrkDestination] call A3A_fnc_sizeMarker;\n\nif (!alive _veh) exitWith {[1, \"Arty piece destroyed on spawn, fire mission canceled\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/AI/fn_occupantInvaderUnitKilledEH.sqf": [
"[\"_victim\", \"_killer\"];\n\n//Stops the unit from spawning things\nif (_victim getVariable [\"spawner\",false]) then\n{\n\t_victim setVariable [\"spawner\",nil,true]\n};\n\n//Gather infos, trigger timed despawn\nprivate _victimGroup = group _victim;\nprivate _victimSide = side (group _victim);\n[_victim] spawn A3A_fnc_postmortem;\n\nif (hasACE) then\n{\n\tif ((isNull _killer) || (_killer == _victim)) then\n\t{\n\t\t_killer = _victim getVariable [\"ace_medical_lastDamageSource\", _killer];\n\t};\n};\n\nif (side (group _killer) == teamPlayer) then\n{\n    if (isPlayer _killer) then\n    {\n        [1,_killer] call A3A_fnc_playerScoreAdd;\n        if (captive _killer) then\n        {\n            if (_killer distance _victim < distanceSPWN) then\n            {\n                [_killer,false] remoteExec [\"setCaptive\",0,_killer];\n                _killer setCaptive false;\n            };\n        };\n        _killer addRating 1000;\n    };\n    if (vehicle _killer isKindOf \"StaticMortar\") then\n    {\n        {\n            if ((_x distance _victim < 300) and (captive _x)) then\n            {\n                [_x,false] remoteExec [\"setCaptive\",0,_x];\n                _x setCaptive false;\n            };\n        } forEach (call A3A_fnc_playableUnits);\n    };\n\tif (count weapons _victim < 1 && !(_victim getVariable [\"isAnimal\", false])) then\n    {\n        //This doesn't trigger for dogs, only for surrendered units\n        [\n            3,\n            \"Rebels killed a surrendered unit\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/AI/fn_surrenderAction.sqf": [
"[\"_unit\"];\n\nif !(local _unit) exitWith {\n\t[1, \"Function miscalled with non-local unit\", _filename] call A3A_fnc_log",
"[_unit] remoteExec [\"A3A_fnc_surrenderAction\", _unit];\n};\n\nif (_unit getVariable [\"surrendered\", false]) exitWith {};\n_unit setVariable [\"surrendered\", true, true];\n\nif (typeOf _unit == \"Fin_random_F\") exitWith {};\t\t// dogs do not surrender?\n\nif (!alive _unit) exitWith {};\t\t\t\t\t\t\t// Used to happen with ACE, seems to be fixed\nif (lifeState _unit == \"INCAPACITATED\") exitWith {\n\t[2, \"Unit attempted to surrender while incapacitated\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Ammunition/fn_fillLootCrate.sqf": [
"[\"_crate\", \n[\"_crateWepTypeMax\", crateWepTypeMax], \"_crateWepNum\", \n[\"_crateItemTypeMax\", crateItemTypeMax], \"_crateItemNum\", \n[\"_crateAmmoTypeMax\", crateAmmoTypeMax], \"_crateAmmoNum\", \n[\"_crateExplosiveTypeMax\", crateExplosiveTypeMax], \"_crateExplosiveNum\", \n[\"_crateAttachmentTypeMax\", crateAttachmentTypeMax], \"_crateAttachmentNum\", \n[\"_crateBackpackTypeMax\", crateBackpackTypeMax], \"_crateBackpackNum\", \n[\"_crateHelmetTypeMax\", crateHelmetTypeMax], \"_crateHelmetNum\", \n[\"_crateVestTypeMax\", crateVestTypeMax], \"_crateVestNum\", \n[\"_crateDeviceTypeMax\", crateDeviceTypeMax], \"_crateDeviceNum\"\n];\nprivate _unlocks = (unlockedHeadgear + unlockedVests + unlockedNVGs + unlockedOptics + unlockedItems + unlockedWeapons + unlockedBackpacks + unlockedMagazines);\nprivate _available = objNull;\nprivate _amount = objNull;\n//Empty the crate\nclearMagazineCargoGlobal _crate;\nclearWeaponCargoGlobal _crate;\nclearItemCargoGlobal _crate;\nclearBackpackCargoGlobal _crate;\n//Double max types if the crate is an ammo truck\nif (typeOf _crate in vehAmmoTrucks) then {\n\t[4, \"Ammo Truck Detected: Doubling Types\", _filename] call A3A_fnc_log",
"[allWeapons, unlockedWeapons, Weighting]. \n//We need to know the corresponding unlockedWeapons array, so we can check if they're all unlocked.\nprivate _weaponLootInfo = [\n\t[allRifles, unlockedRifles, 3],\n\t[allHandguns, unlockedHandguns, 1.2],\n\t[allMachineGuns, unlockedMachineGuns, 2],\n\t[allShotguns, unlockedShotguns, 1],\n\t[allSMGs, unlockedSMGs, 2],\n\t[allSniperRifles, unlockedSniperRifles, 0.9],\n\t[allRocketLaunchers, unlockedRocketLaunchers, 0.5],\n\t[allMissileLaunchers, unlockedMissileLaunchers, 0.5] //Increase weighting for RHS.\n];\n\n//Build the weighting array, as used by selectRandomWeighted\nprivate _weaponLootWeighting = [];\n{\n\t_x params [\"_allX\", \"_unlockedX\", \"_weighting\"];\n\t//If the array contains weapons, and we haven't unlocked everything, add it to the pool to be selected.\n\tif (count _allX > 0 && {(count _unlockedX / count _allX) < 1}) then {\n\t\t_weaponLootWeighting pushBack [_allX, _unlockedX];\n\t\t_weaponLootWeighting pushBack _weighting;\n\t};\n} forEach _weaponLootInfo;\n\n/**\nProbabilistic function that checks that A is probably not in B.\n  For a given array A, and another array B, this function selects an item from A that's not in B, with a probability that depends on how much of A is in B.\n  This is purely a performance optimisation.\n\n  X Axis - Attempt/Iteration number\n  Y Axis - % of items from Array 1 in array 2\n  Value - Probability of successfully returning a value from A not in B.\n\n\t       1     2       3        4         5          6           7            8             9             10\n\t\t-----------------------------------------------------------------------------------------------------------------\n\t0.9 | 0.1    0.19    0.271    0.3439    0.40951    0.468559    0.5217031    0.56953279    0.612579511    0.6513215599\n\t0.8 | 0.2    0.36    0.488    0.5904    0.67232    0.737856    0.7902848    0.83222784    0.865782272    0.8926258176\n\t0.7 | 0.3    0.51    0.657    0.7599    0.83193    0.882351    0.9176457    0.94235199    0.959646393    0.9717524751\n\t0.6 | 0.4    0.64    0.784    0.8704    0.92224    0.953344    0.9720064    0.98320384    0.989922304    0.9939533824\n\t0.5 | 0.5    0.75    0.875    0.9375    0.96875    0.984375    0.9921875    0.99609375    0.998046875    0.9990234375\n\t0.4 | 0.6    0.84    0.936    0.9744    0.98976    0.995904    0.9983616    0.99934464    0.999737856    0.9998951424\n\t0.3 | 0.7    0.91    0.973    0.9919    0.99757    0.999271    0.9997813    0.99993439    0.999980317    0.9999940951\n\t0.2 | 0.8    0.96    0.992    0.9984    0.99968    0.999936    0.9999872    0.99999744    0.999999488    0.9999998976\n\t0.1 | 0.9    0.99    0.999    0.9999    0.99999    0.999999    0.9999999    0.99999999    0.999999999    0.9999999999\n    0.0 |  1      1        1         1         1           1            1            1             1               1\n\n\tBest case - two arrays of 400 elements, we see a 20x speedup.\n\tWorst case- two arrays of 1 element, 3x slowdown.\n\t100 array case - 10x speedup.\n\n\tYes, this is over-engineered.\n**/\n\nprivate _fnc_pickRandomFromAProbablyNotInB = {\n\tparams [\"_arrayA\", \"_arrayB\"];\n\n\t//Only run if there's more than 100 items in the array.\n\tif (count _arrayA min count _arrayB < 100) exitWith {\n\t\tselectRandom (_arrayA - _arrayB);\n\t};\n\n\t//Calculate what % of arrayB is likely in arrayA. \n\t//Let's never go over 100% loaded. It's theoretically possible if arrayB ever is somehow larger than arrayA/\n\t//There's not a lot of value in running more than 10 iterations on a 90%+ loading anyway.\n\tprivate _percentageLoaded = (count _arrayB / count _arrayA) min 1;\n\t//Rough heuristic for how many iterations we need to run to get a good chance of success.\n\tprivate _iterations = floor (10 * _percentageLoaded);\n\n\tprivate _choice = selectRandom _arrayA;\n\t[3, format [\"Function check for: %1\", _choice], _filename] call A3A_fnc_log",
"[3, format [\"Item already unlocked, rolling again.\"], _filename] call A3A_fnc_log",
"[4, format [\"Selected Weapon Category: %1\", _category], _filename] call A3A_fnc_log",
"[allX, unlockedX];\n\t\t[_category select 0, _category select 1] call _fnc_pickRandomFromAProbablyNotInB;\n\t}\n};\n\n//Pick the amount of X to spawn. Use gaussian distribution, unless we're in CHAOS MODE.\nprivate _fnc_pickAmount = if (bobChaosCrates) then \n{\n\t{\n\t\tparams [\"_max\"];\n\t\tround random _max;\n\t}\n} \nelse \n{\n\t{\n\t\tparams [\"_max\"];\n\t\t//Never have a greater than 50% chance of getting nothing\n\t\tif (_max * _quantityScalingFactor < 1) then {\n\t\t\tround random 1\n\t\t} else {\n\t\t\tround (random [1, floor (_max/2), _max] * _quantityScalingFactor)\n\t\t}\n\t}\n};\n\nprivate _fnc_pickNumberOfTypes = if (bobChaosCrates) then\n{\n\t{\n\t\tparams [\"_max\"];\n\t\tfloor random _max;\n\t}\n} \nelse \n{\n\t{\n\t\tparams [\"_max\"];\n\t\tfloor random [1, floor (_max/2), _max];\n\t}\n};\n\n//Weapons Loot\nif (_crateWepTypeMax != 0) then {\n\t[3, \"Generating Weapons\", _filename] call A3A_fnc_log",
"[3, \"No Weapons Left in Loot List Or Pick Random Failed\", _filename] call A3A_fnc_log",
"[[ _loot, \"\", \"\", \"\", [], [], \"\"], _amount];\n\t\t\t[4, format [\"Adding %1 weapons of type %2\", _amount, _loot], _filename] call A3A_fnc_log",
"[_magazines select 0] };\t\t// prevent doomsday\n\n\t\t\tfor \"_i\" from 0 to _amount do {\n\t\t\t\t_magazine = selectRandom _magazines;\n\t\t\t\t_magAmount = if ((getText (configFile >> \"CfgMagazines\" >> _magazine >> \"ammo\") isKindOf \"MissileBase\")) then {\n\t\t\t\t\tfloor random 3;\n\t\t\t\t} else {\n\t\t\t\t\tfloor random [1,6,1]\n\t\t\t\t};\n\t\t\t\t[4, format [\"Spawning %1 magazines of %2 for %3\", _magAmount, _magazine, _loot], _filename] call A3A_fnc_log",
"[_magazine, _magAmount];\n\t\t\t};\n\t\t};\n\t};\n};\n\n//Items Loot\nif (_crateItemTypeMax != 0) then {\n\t[3, \"Generating Items\", _filename] call A3A_fnc_log",
"[4, format [\"Breakdown: %1, %2, %3\", lootItem, _unlocks, itemCargo _crate], _filename] call A3A_fnc_log",
"[4, format [\"Items available: %1\", _available], _filename] call A3A_fnc_log",
"[3, \"No Items Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Ammo Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Explosives Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Attachment Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Backpacks Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Helmets Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Vests Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log",
"[3, \"No Device Bags Left in Loot List\", _filename] call A3A_fnc_log",
"[_loot,_amount];\n\t\t\t[4, format [\"Spawning %1 of %2\", _amount,_loot], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_aggressionUpdateLoop.sqf": [
"[(_x select 0) + (_x select 1), (_x select 1)]};\n    //Filter out all elements which have passed the 0 value\n    aggressionStackOccupants = aggressionStackOccupants select {(_x select 0) * (_x select 1) < 0};\n\n    //Calculate new values for each element\n    aggressionStackInvaders = aggressionStackInvaders apply {[(_x select 0) + (_x select 1), (_x select 1)]};\n    //Filter out all elements which have passed the 0 value\n    aggressionStackInvaders = aggressionStackInvaders select {(_x select 0) * (_x select 1) < 0};\n\n    prestigeIsChanging = false;\n    [] call A3A_fnc_calculateAggression;\n\n    [3, format [\"Occupants:%1 Invaders:%2 Warlevel:%3\", aggressionOccupants, aggressionInvaders, tierWar], \"aggressionUpdateLoop\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_garbageCleaner.sqf": [
"[petros,\"hint\",\"Deleting Garbage. Please wait\", \"Garbage Cleaner\"] remoteExec [\"A3A_fnc_commsMP\", 0];\n[2, \"Cleaning garbage...\", _filename] call A3A_fnc_log",
"[\"spawner\",false]} };\n\nprivate _fnc_distCheck = {\n\tparams[\"_object\", \"_dist\"];\n\tprivate _inRange = { if (_x distance _object <= _dist) exitWith {1}; false } count _rebelSpawners;\n\tif (_inRange == 0) then { deleteVehicle _object };\n};\n\n\n{ deleteVehicle _x } forEach allDead;\n{ deleteVehicle _x } forEach (allMissionObjects \"WeaponHolder\");\n{ deleteVehicle _x } forEach (allMissionObjects \"WeaponHolderSimulated\");\n{ deleteVehicle _x } forEach (allMissionObjects \"Box_IND_Wps_F\");\t\t\t\t// Surrender boxes\n{ deleteVehicle _x } forEach (allMissionObjects \"Leaflet_05_F\");\t\t\t\t// Drone drop leaflets\n{ deleteVehicle _x } forEach (allMissionObjects \"Ejection_Seat_Base_F\");\t\t// All vanilla ejection seats\n\nif (hasACE) then {\n\t{ deleteVehicle _x } forEach (allMissionObjects \"ACE_bodyBagObject\");\n\t{ deleteVehicle _x } forEach (allMissionObjects \"UserTexture1m_F\");\t\t\t\t\t\t// ACE spraycan tags\n\t{ [_x, 200] call _fnc_distCheck } forEach (allMissionObjects \"ACE_envelope_big\");\t\t// ACE trench objects\n\t{ [_x, 200] call _fnc_distCheck } forEach (allMissionObjects \"ACE_envelope_small\");\n};\n\n// Base type for trenches is Base_Bag_F, so we can't use that\nif (isClass (configFile >> \"CfgVehicles\" >> \"GRAD_envelope_short\")) then {\n\t{ [_x, 200] call _fnc_distCheck } forEach (allMissionObjects \"GRAD_envelope_short\");\t// GRAD trench objects\n\t{ [_x, 200] call _fnc_distCheck } forEach (allMissionObjects \"GRAD_envelope_giant\");\n\t{ [_x, 200] call _fnc_distCheck } forEach (allMissionObjects \"GRAD_envelope_vehicle\");\n\t{ [_x, 200] call _fnc_distCheck } forEach (allMissionObjects \"GRAD_envelope_long\");\n};\n\nif (hasRHS) then {\n\t{ deleteVehicle _x } forEach (allMissionObjects \"rhs_a10_acesII_seat\");\t\t// Ejection seat for A-10 and F-22\n\t{ deleteVehicle _x } forEach (allMissionObjects \"rhs_a10_canopy\");\t\t\t// other canopies delete on ground contact\n\t{ deleteVehicle _x } forEach (allMissionObjects \"rhs_k36d5_seat\");\t\t\t// AFRF ejection seat\n};\n\n[petros,\"hint\",\"Garbage deleted\", \"Garbage Cleaner\"] remoteExec [\"A3A_fnc_commsMP\", 0];\n[2, \"Garbage clean completed\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_getAggroLevelString.sqf": [
"[\"_level\"];\n\nif(_level == 1) exitWith {\"Low\"};\nif(_level == 2) exitWith {\"Medium\"};\nif(_level == 3) exitWith {\"High\"};\nif(_level == 4) exitWith {\"Very High\"};\nif(_level == 5) exitWith {\"Extreme\"};\n\n[1, format [\"Bad level recieved, cannot generate string, was %1\", _level], \"calculateAggression\", true] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_getVehiclePoolForAttacks.sqf": [
"[\"LandVehicle\"] or [\"Air\"])\n\n    Returns:\n        _vehiclePool: ARRAY : [vehicleName, weight, vehicleName2, weight2]\n*/\n\nparams [\"_side\", [\"_filter\", []]];\n\nprivate _fileName = \"getVehiclePoolForAttacks\";\nprivate _vehicleSelection = [];\n\n[3, format [\"Now searching for attack vehicle pool for %1 with filter %2\", _side, _filter], _fileName] call A3A_fnc_log",
"[\n                [vehNATOLightArmed, 15],\n                [vehNATOTrucks, 10],\n                [vehNATOPatrolHeli, 25],\n                [vehNATOAPC, 35],\n                [vehNATOTransportHelis, 15]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTrucks, 5],\n                [vehCSATLightArmed, 15],\n                [vehCSATPatrolHeli, 25],\n                [vehCSATAPC, 30],\n                [vehCSATTransportHelis, 25]\n            ];\n        };\n    };\n    case (2):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOLightArmed, 10],\n                [vehNATOPatrolHeli, 20],\n                [vehNATOAPC, 40],\n                [vehNATOTransportHelis, 20],\n                [vehNATOUAV, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATPatrolHeli, 15],\n                [vehCSATAPC, 30],\n                [vehCSATTransportHelis, 35],\n                [vehCSATUAV, 15],\n                [vehCSATAA, 5]\n            ];\n        };\n    };\n    case (3):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOPatrolHeli, 15],\n                [vehNATOAPC, 35],\n                [vehNATOTransportHelis, 35],\n                [vehNATOUAV, 10],\n                [vehNATOAA, 5]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATPatrolHeli, 5],\n                [vehCSATAPC, 30],\n                [vehCSATTransportHelis, 30],\n                [vehCSATUAV, 15],\n                [vehCSATAA, 10],\n                [vehCSATAttackHelis, 10]\n            ];\n        };\n    };\n    case (4):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 30],\n                [vehNATOTransportHelis, 35],\n                [vehNATOUAV, 15],\n                [vehNATOAA, 10],\n                [vehNATOAttackHelis, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 15],\n                [vehCSATTransportHelis, 15],\n                [vehCSATUAV, 15],\n                [vehCSATAA, 15],\n                [vehCSATAttackHelis, 15],\n                [vehCSATTank, 10],\n                [vehCSATTransportPlanes, 15]\n            ];\n        };\n    };\n    case (5):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 20],\n                [vehNATOTransportHelis, 20],\n                [vehNATOUAV, 15],\n                [vehNATOAA, 10],\n                [vehNATOAttackHelis, 25],\n                [vehNATOTank, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 15],\n                [vehCSATTransportHelis, 10],\n                [vehCSATAA, 15],\n                [vehCSATAttackHelis, 15],\n                [vehCSATTank, 20],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATPlane, 5],\n                [vehCSATPlaneAA, 5]\n            ];\n        };\n    };\n    case (6):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 15],\n                [vehNATOTransportHelis, 10],\n                [vehNATOAA, 10],\n                [vehNATOAttackHelis, 20],\n                [vehNATOTank, 15],\n                [vehNATOTransportPlanes, 15],\n                [vehNATOPlane, 10],\n                [vehNATOPlaneAA, 5]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 10],\n                [vehCSATTransportHelis, 5],\n                [vehCSATAA, 10],\n                [vehCSATAttackHelis, 20],\n                [vehCSATTank, 20],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATPlane, 10],\n                [vehCSATPlaneAA, 10]\n            ];\n        };\n    };\n    case (7):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 10],\n                [vehNATOTransportHelis, 10],\n                [vehNATOAA, 5],\n                [vehNATOAttackHelis, 20],\n                [vehNATOTank, 20],\n                [vehNATOTransportPlanes, 15],\n                [vehNATOPlane, 10],\n                [vehNATOPlaneAA, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 10],\n                [vehCSATAA, 10],\n                [vehCSATAttackHelis, 25],\n                [vehCSATTank, 25],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATPlane, 5],\n                [vehCSATPlaneAA, 10]\n            ];\n        };\n    };\n    case (8):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 10],\n                [vehNATOTransportHelis, 10],\n                [vehNATOAA, 5],\n                [vehNATOAttackHelis, 20],\n                [vehNATOTank, 20],\n                [vehNATOTransportPlanes, 15],\n                [vehNATOPlane, 10],\n                [vehNATOPlaneAA, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 10],\n                [vehCSATAA, 10],\n                [vehCSATAttackHelis, 25],\n                [vehCSATTank, 25],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATPlane, 5],\n                [vehCSATPlaneAA, 10]\n            ];\n        };\n    };\n    case (9):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 10],\n                [vehNATOTransportHelis, 10],\n                [vehNATOAA, 5],\n                [vehNATOAttackHelis, 20],\n                [vehNATOTank, 20],\n                [vehNATOTransportPlanes, 15],\n                [vehNATOPlane, 10],\n                [vehNATOPlaneAA, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 10],\n                [vehCSATAA, 10],\n                [vehCSATAttackHelis, 25],\n                [vehCSATTank, 25],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATPlane, 5],\n                [vehCSATPlaneAA, 10]\n            ];\n        };\n    };\n    case (10):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOAPC, 10],\n                [vehNATOTransportHelis, 10],\n                [vehNATOAA, 5],\n                [vehNATOAttackHelis, 20],\n                [vehNATOTank, 20],\n                [vehNATOTransportPlanes, 15],\n                [vehNATOPlane, 10],\n                [vehNATOPlaneAA, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATAPC, 10],\n                [vehCSATAA, 10],\n                [vehCSATAttackHelis, 25],\n                [vehCSATTank, 25],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATPlane, 5],\n                [vehCSATPlaneAA, 10]\n            ];\n        };\n    };\n};\n\n//Use this function to filter out any unwanted elements\n_fn_checkElementAgainstFilter =\n{\n    params [\"_element\", \"_filter\"];\n\n    private _passed = true;\n    {\n        if(_element isKindOf _x) exitWith\n        {\n            _passed = false;\n            [\n                3,\n                format [\"%1 didnt passed filter %2\", _element, _x],\n                _fileName\n            ] call A3A_fnc_log",
"[];\n{\n    if((_x select 0) isEqualType []) then\n    {\n        private _points = 0;\n        private _vehicleCount = count (_x select 0);\n        if(_vehicleCount != 0) then\n        {\n            _points = (_x select 1)/_vehicleCount;\n        }\n        else\n        {\n            [1, \"Found vehicle array with no defined vehicles!\", _fileName] call A3A_fnc_log",
"[_x, _filter] call _fn_checkElementAgainstFilter) && {[_x] call A3A_fnc_vehAvailable}) then\n            {\n                _vehiclePool pushBack _x;\n                _vehiclePool pushBack _points;\n            };\n        } forEach (_x select 0);\n    }\n    else\n    {\n        if(([_x select 0, _filter] call _fn_checkElementAgainstFilter) && {[_x select 0] call A3A_fnc_vehAvailable}) then\n        {\n            _vehiclePool pushBack (_x select 0);\n            _vehiclePool pushBack (_x select 1);\n        };\n    };\n} forEach _vehicleSelection;\n\n[\n    3,\n    format [\"For %1 and war level %2 selected units are %3, filter was %4\", _side, tierWar, _vehiclePool, _filter],\n    _fileName\n] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_getVehiclePoolForQRFs.sqf": [
"[\"LandVehicle\"] or [\"Air\"])\n\n    Returns:\n        _vehiclePool: ARRAY : [vehicleName, weight, vehicleName2, weight2]\n*/\n\nparams [\"_side\", [\"_filter\", []]];\n\nprivate _fileName = \"getVehiclePoolForQRFs\";\nprivate _vehicleSelection = [];\n\n[3, format [\"Now searching for QRF vehicle pool for %1 with filter %2\", _side, _filter], _fileName] call A3A_fnc_log",
"[\n                [vehPoliceCar, 40],\n                [vehFIACar, 30],\n                [vehFIATruck, 20],\n                [vehFIAArmedCar, 10],\n\n                [vehNATOPatrolHeli, 100]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATLightUnarmed, 40],\n                [vehCSATTrucks, 40],\n                [vehCSATLightArmed, 20],\n\n                [vehCSATPatrolHeli, 100]\n            ];\n        };\n    };\n    //General idea: Enemies get airborne, police units are reduced and replaced by military units\n    case (2):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehPoliceCar, 15],\n                [vehFIACar, 15],\n                [vehFIAArmedCar, 10],\n                [vehFIATruck, 10],\n                [vehNATOLightUnarmed, 15],\n                [vehNATOTrucks, 25],\n                [vehNATOLightArmed, 10],\n\n                [vehNATOPatrolHeli, 100]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATLightUnarmed, 20],\n                [vehCSATTrucks, 40],\n                [vehCSATLightArmed, 30],\n                [vehCSATAPC, 10],\n\n                [vehCSATPatrolHeli, 80],\n                [vehCSATTransportHelis, 20]\n            ];\n        };\n    };\n    //General idea: No police units any more, armed vehicles and first sightings of APCs\n    case (3):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehFIAArmedCar, 10],\n                [vehFIATruck, 10],\n                [vehNATOLightUnarmed, 10],\n                [vehNATOLightArmed, 20],\n                [vehNATOTrucks, 40],\n                [vehNATOAPC, 10],\n\n                [vehNATOPatrolHeli, 80],\n                [vehNATOTransportHelis, 20]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATLightUnarmed, 5],\n                [vehCSATTrucks, 30],\n                [vehCSATLightArmed, 45],\n                [vehCSATAPC, 20],\n\n                [vehCSATPatrolHeli, 60],\n                [vehCSATTransportHelis, 40]\n            ];\n        };\n    };\n    //General idea: Unarmed vehicles vanish, trucks start to get replaced by APCs, first sighting of transport helicopters\n    case (4):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOLightArmed, 35],\n                [vehNATOTrucks, 40],\n                [vehNATOAPC, 25],\n\n                [vehNATOPatrolHeli, 50],\n                [vehNATOTransportHelis, 50]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTrucks, 10],\n                [vehCSATLightArmed, 40],\n                [vehCSATAPC, 40],\n                [vehCSATTank, 10],\n\n                [vehCSATPatrolHeli, 40],\n                [vehCSATTransportHelis, 50],\n                [vehCSATAttackHelis, 10]\n            ];\n        };\n    };\n    //General idea: Get rid of any unarmed vehicle, Invaders start to bring the big guns\n    case (5):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOLightArmed, 30],\n                [vehNATOTrucks, 25],\n                [vehNATOAPC, 35],\n                [vehNATOTank, 10],\n\n                [vehNATOPatrolHeli, 30],\n                [vehNATOTransportHelis, 60],\n                [vehNATOAttackHelis, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTruck, 10],\n                [vehCSATLightArmed, 30],\n                [vehCSATAPC, 40],\n                [vehCSATTank, 20],\n\n                [vehCSATPatrolHeli, 25],\n                [vehCSATTransportHelis, 50],\n                [vehCSATTransportPlanes, 10],\n                [vehCSATAttackHelis, 15]\n            ];\n        };\n    };\n    //General idea: No light vehicles any more, Invaders start to bring attack helicopter\n    case (6):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOLightArmed, 25],\n                [vehNATOTrucks, 15],\n                [vehNATOAPC, 45],\n                [vehNATOTank, 15],\n\n                [vehNATOPatrolHeli, 20],\n                [vehNATOTransportHelis, 60],\n                [vehNATOTransportPlanes, 10],\n                [vehNATOAttackHelis, 10]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTruck, 5],\n                [vehCSATLightArmed, 25],\n                [vehCSATAPC, 45],\n                [vehCSATAA, 5],\n                [vehCSATTank, 20],\n\n                [vehCSATPatrolHeli, 15],\n                [vehCSATTransportHelis, 50],\n                [vehCSATTransportPlanes, 15],\n                [vehCSATAttackHelis, 20]\n            ];\n        };\n    };\n    //General idea: Getting rid of light helis, Invaders start the endgame\n    case (7):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOTrucks, 10],\n                [vehNATOLightArmed, 20],\n                [vehNATOAPC, 50],\n                [vehNATOAA, 5],\n                [vehNATOTank, 15],\n\n                [vehNATOPatrolHeli, 10],\n                [vehNATOTransportHelis, 55],\n                [vehNATOTransportPlanes, 20],\n                [vehNATOAttackHelis, 15]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTrucks, 5],\n                [vehCSATLightArmed, 25],\n                [vehCSATAPC, 40],\n                [vehCSATAA, 5],\n                [vehCSATTank, 25],\n\n                [vehCSATPatrolHeli, 10],\n                [vehCSATTransportHelis, 40],\n                [vehCSATTransportPlanes, 25],\n                [vehCSATAttackHelis, 25]\n            ];\n        };\n    };\n    //General idea, Occupants start to throw in everything, Invaders upgrade to maximum\n    case (8):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOTrucks, 10],\n                [vehNATOLightArmed, 15],\n                [vehNATOAPC, 50],\n                [vehNATOAA, 5],\n                [vehNATOTank, 20],\n\n                [vehNATOPatrolHeli, 10],\n                [vehNATOTransportHelis, 40],\n                [vehNATOTransportPlanes, 25],\n                [vehNATOAttackHelis, 20],\n                [vehNATOPlaneAA, 5]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTrucks, 5],\n                [vehCSATLightArmed, 20],\n                [vehCSATAPC, 40],\n                [vehCSATAA, 10],\n                [vehCSATTank, 25],\n\n                [vehCSATPatrolHeli, 5],\n                [vehCSATTransportHelis, 40],\n                [vehCSATTransportPlanes, 25],\n                [vehCSATAttackHelis, 25],\n                [vehCSATPlaneAA, 5]\n            ];\n        };\n    };\n    //General idea: Occupants get access to all, invaders start to heavily rely on tanks and attack helis\n    case (9):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOTrucks, 5],\n                [vehNATOLightArmed, 10],\n                [vehNATOAPC, 50],\n                [vehNATOAA, 10],\n                [vehNATOTank, 25],\n\n                [vehNATOPatrolHeli, 5],\n                [vehNATOTransportHelis, 35],\n                [vehNATOTransportPlanes, 25],\n                [vehNATOAttackHelis, 25],\n                [vehNATOPlane, 5],\n                [vehNATOPlaneAA, 5]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTrucks, 5],\n                [vehCSATLightArmed, 10],\n                [vehCSATAPC, 40],\n                [vehCSATAA, 10],\n                [vehCSATTank, 30],\n\n                [vehCSATPatrolHeli, 5],\n                [vehCSATTransportHelis, 35],\n                [vehCSATTransportPlanes, 25],\n                [vehCSATAttackHelis, 30],\n                [vehCSATPlane, 5],\n                [vehCSATPlaneAA, 5]\n            ];\n        };\n    };\n    //General idea: Occupants finish with a focus on infantry units supported by combat vehicles, while Invaders tend to use heavy armor\n    case (10):\n    {\n        if(_side == Occupants) then\n        {\n            _vehicleSelection =\n            [\n                [vehNATOTrucks, 5],\n                [vehNATOLightArmed, 5],\n                [vehNATOAPC, 50],\n                [vehNATOAA, 10],\n                [vehNATOTank, 30],\n\n                [vehNATOPatrolHeli, 5],\n                [vehNATOTransportHelis, 30],\n                [vehNATOTransportPlanes, 25],\n                [vehNATOAttackHelis, 25],\n                [vehNATOPlane, 10],\n                [vehNATOPlaneAA, 5]\n            ];\n        };\n        if(_side == Invaders) then\n        {\n            _vehicleSelection =\n            [\n                [vehCSATTrucks, 5],\n                [vehCSATLightArmed, 5],\n                [vehCSATAPC, 45],\n                [vehCSATAA, 10],\n                [vehCSATTank, 35],\n\n                [vehCSATPatrolHeli, 5],\n                [vehCSATTransportHelis, 30],\n                [vehCSATTransportPlanes, 25],\n                [vehCSATAttackHelis, 30],\n                [vehCSATPlane, 10],\n                [vehCSATPlaneAA, 5]\n            ];\n        };\n    };\n};\n\n//Use this function to filter out any unwanted elements\n_fn_checkElementAgainstFilter =\n{\n    params [\"_element\", \"_filter\"];\n\n    private _passed = true;\n    {\n        if(_element isKindOf _x) exitWith\n        {\n            _passed = false;\n            [\n                3,\n                format [\"%1 didnt passed filter %2\", _element, _x],\n                _fileName\n            ] call A3A_fnc_log",
"[];\n{\n    if((_x select 0) isEqualType []) then\n    {\n        private _points = 0;\n        private _vehicleCount = count (_x select 0);\n        if(_vehicleCount != 0) then\n        {\n            _points = (_x select 1)/_vehicleCount;\n        }\n        else\n        {\n            [1, \"Found vehicle array with no defined vehicles!\", _fileName] call A3A_fnc_log",
"[_x, _filter] call _fn_checkElementAgainstFilter) && {[_x] call A3A_fnc_vehAvailable}) then\n            {\n                _vehiclePool pushBack _x;\n                _vehiclePool pushBack _points;\n            };\n        } forEach (_x select 0);\n    }\n    else\n    {\n        if(([_x select 0, _filter] call _fn_checkElementAgainstFilter) && {[_x select 0] call A3A_fnc_vehAvailable}) then\n        {\n            _vehiclePool pushBack (_x select 0);\n            _vehiclePool pushBack (_x select 1);\n        };\n    };\n} forEach _vehicleSelection;\n\n[\n    3,\n    format [\"For %1 and war level %2 selected units are %3, filter was %4\", _side, tierWar, _vehiclePool, _filter],\n    _fileName\n] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_initPetros.sqf": [
"[2,\"initPetros started\",_fileName] call A3A_fnc_log",
"[\"respawning\",false];\npetros allowDamage false;\n\n[petros,unlockedRifles] call A3A_fnc_randomRifle;\npetros selectWeapon (primaryWeapon petros);\n[petros,true] call A3A_fnc_punishment_FF_addEH;\npetros addEventHandler\n[\n    \"HandleDamage\",\n    {\n    _part = _this select 1;\n    _damage = _this select 2;\n    _injurer = _this select 3;\n\n    _victim = _this select 0;\n    _instigator = _this select 6;\n    if (isPlayer _injurer) then\n    {\n        _damage = (_this select 0) getHitPointDamage (_this select 7);\n    };\n    if ((isNull _injurer) or (_injurer == petros)) then {_damage = 0};\n        if (_part == \"\") then\n        {\n            if (_damage > 1) then\n            {\n                if (!(petros getVariable [\"incapacitated\",false])) then\n                {\n                    petros setVariable [\"incapacitated\",true,true];\n                    _damage = 0.9;\n                    if (!isNull _injurer) then {[petros,side _injurer] spawn A3A_fnc_unconscious} else {[petros,sideUnknown] spawn A3A_fnc_unconscious};\n                }\n                else\n                {\n                    _overall = (petros getVariable [\"overallDamage\",0]) + (_damage - 1);\n                    if (_overall > 1) then\n                    {\n                        petros removeAllEventHandlers \"HandleDamage\";\n                    }\n                    else\n                    {\n                        petros setVariable [\"overallDamage\",_overall];\n                        _damage = 0.9;\n                    };\n                };\n            };\n        };\n    _damage;\n    }\n];\n\npetros addMPEventHandler [\"mpkilled\",\n{\n    removeAllActions petros;\n    _killer = _this select 1;\n    if (isServer) then\n\t{\n        if ((side _killer == Invaders) or (side _killer == Occupants) and !(isPlayer _killer) and !(isNull _killer)) then\n\t\t{\n\t\t\t_nul = [] spawn {\n\t\t\t\tgarrison setVariable [\"Synd_HQ\",[],true];\n\t\t\t\t_hrT = server getVariable \"hr\";\n\t\t\t\t_resourcesFIAT = server getVariable \"resourcesFIA\";\n\t\t\t\t[-1*(round(_hrT*0.9)),-1*(round(_resourcesFIAT*0.9))] remoteExec [\"A3A_fnc_resourcesFIA\",2];\n\t\t\t\twaitUntil {count allPlayers > 0};\n\t\t\t\tif (!isNull theBoss) then {\n\t\t\t\t\t[] remoteExec [\"A3A_fnc_placementSelection\",theBoss];\n\t\t\t\t} else {\n\t\t\t\t\tprivate _playersWithRank =\n\t\t\t\t\t\t(call A3A_fnc_playableUnits)\n\t\t\t\t\t\tselect {(side (group _x) == teamPlayer) && isPlayer _x && _x == _x getVariable [\"owner\", _x]}\n\t\t\t\t\t\tapply {[([_x] call A3A_fnc_numericRank) select 0, _x]};\n\t\t\t\t\t_playersWithRank sort false;\n\n\t\t\t\t\t [] remoteExec [\"A3A_fnc_placementSelection\", _playersWithRank select 0 select 1];\n\t\t\t\t};\n\t\t\t};\n\t\t\t{\n\t\t\t\tif (side _x == Occupants) then {_x setPos (getMarkerPos respawnOccupants)};\n\t\t\t} forEach (call A3A_fnc_playableUnits);\n\t\t}\n        else\n\t\t{\n            [] call A3A_fnc_createPetros;\n\t\t};\n\t};\n}];\n[] spawn {sleep 120; petros allowDamage true;};\n\nprivate _removeProblematicAceInteractions = {\n    _this spawn {\n        //Wait until we've got hasACE initialised fully\n        waitUntil {!isNil \"initVar\"};\n        //Disable ACE Interactions\n        if (hasInterface && hasACE) then {\n            [typeOf _this, 0,[\"ACE_ApplyHandcuffs\"]] call ace_interact_menu_fnc_removeActionFromClass;\n            [typeOf _this, 0,[\"ACE_MainActions\", \"ACE_JoinGroup\"]] call ace_interact_menu_fnc_removeActionFromClass;\n        };\n    };\n};\n\n//We're doing it per-init of petros, because the type of petros on respawn might be different to initial type.\n//This'll prevent it breaking in the future.\n[petros, _removeProblematicAceInteractions] remoteExec [\"call\", 0, petros];\n\n[2,\"initPetros completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_logPerformance.sqf": [
"[[\"_message\", \"\"]];\nprivate _filename = \"fn_logPerformance\";\nprivate _countGroups = 0;\nprivate _countRebels = 0;\nprivate _countInvaders = 0;\nprivate _countOccupants = 0;\nprivate _countCiv = 0;\n\n{\n\t_countGroups = _countGroups + 1;\n\tswitch(side _x) do {\n\t\tcase teamPlayer:\n\t\t\t{\n\t\t\t\t_countRebels = _countRebels + 1;\n\t\t\t};\n\t\tcase Occupants:\n\t\t\t{\n\t\t\t\t_countOccupants = _countOccupants +\t1;\n\t\t\t};\n\t\tcase Invaders:\n\t\t\t{\n\t\t\t\t_countInvaders =\t_countInvaders + 1;\n\t\t\t};\n\t\tcase civilian:\n\t\t\t{\n\t\t\t\t_countCiv = _countCiv + 1;\n\t\t\t};\n\t};\n} forEach allGroups;\n\n\n[2,\nformat [\n\t\"%10 ServerFPS:%1, Players:%11, DeadUnits:%2, AllUnits:%3, UnitsAwareOfEnemies:%14, AllVehicles:%4, WreckedVehicles:%12, Entities:%13, GroupsRebels:%5, GroupsInvaders:%6, GroupsOccupants:%7, GroupsCiv:%8, GroupsTotal:%9, GroupsCombatBehaviour:%15, Faction Cash:%16, HR:%17\"\n\t,diag_fps\n\t,(count alldead)\n\t,count allunits\n\t,count vehicles\n\t,_countRebels\n\t,_countInvaders\n\t,_countOccupants\n\t,_countCiv\n\t,_countGroups\n\t,_message\n\t,count (allPlayers)\n\t,{!alive _x} count vehicles\n\t,count entities \"\"\n\t,{!isPlayer _x && !isNull (_x findNearestEnemy _x)} count allUnits\n\t,{behaviour leader _x == \"COMBAT\"} count allGroups\n\t,server getVariable \"resourcesFIA\"\n\t,server getVariable \"hr\"\n]\n, _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_markerChange.sqf": [
"[\"_winner\",\"_markerX\",\"_looser\",\"_positionX\",\"_other\",\"_flagX\",\"_flagsX\",\"_dist\",\"_textX\",\"_sides\"];\n_winner = _this select 0;\n_markerX = _this select 1;\n\n[3, format [\"Changing side of %1 to %2\", _markerX, _winner], _fileName] call A3A_fnc_log",
"[_markerX,sideUnknown] == teamPlayer)) exitWith {};\nif ((_winner == Occupants) and (sidesX getVariable [_markerX,sideUnknown] == Occupants)) exitWith {};\nif ((_winner == Invaders) and (sidesX getVariable [_markerX,sideUnknown] == Invaders)) exitWith {};\nif (_markerX in markersChanging) exitWith {};\nmarkersChanging pushBackUnique _markerX;\n_positionX = getMarkerPos _markerX;\n_looser = sidesX getVariable [_markerX,sideUnknown];\n_sides = [teamPlayer,Occupants,Invaders];\n_other = \"\";\n_textX = \"\";\n_prestigeOccupants = [0, 0];\n_prestigeInvaders = [0, 0];\n_flagX = objNull;\n_size = [_markerX] call A3A_fnc_sizeMarker;\n\nif ((!(_markerX in citiesX)) and (spawner getVariable _markerX != 2)) then\n\t{\n\t_flagsX = nearestObjects [_positionX, [\"FlagCarrier\"], _size];\n\t_flagX = _flagsX select 0;\n\t};\nif (isNil \"_flagX\") then {_flagX = objNull};\n//[_flagX,\"remove\"] remoteExec [\"A3A_fnc_flagaction\",0,_flagX];\n\nif (_looser == teamPlayer) then\n\t{\n\t_textX = format [\"%1 \",nameTeamPlayer];\n\t[] call A3A_fnc_tierCheck;\n\t}\nelse\n\t{\n\tif (_looser == Occupants) then\n\t\t{\n\t\t_textX = format [\"%1 \",nameOccupants];\n\t\t}\n\telse\n\t\t{\n\t\t_textX = format [\"%1 \",nameInvaders];\n\t\t};\n\t};\ngarrison setVariable [_markerX,[],true];\nsidesX setVariable [_markerX,_winner,true];\n\n[3, format [\"Side changed for %1\", _markerX], _fileName] call A3A_fnc_log",
"[format [\"%1_garrison\", _markerX], [], true];\ngarrison setVariable [format [\"%1_other\", _markerX], [], true];\ngarrison setVariable [format [\"%1_requested\", _markerX], [], true];\n//This system is not yet implemented\n//garrison setVariable [format [\"%1_available\", _markerX], [], true];\n//New system end ===============================================================\n\nif (_winner == teamPlayer) then\n{\n\t_super = if (_markerX in airportsX) then {true} else {false};\n\t[_markerX,_looser,\"\",_super] spawn A3A_fnc_patrolCA;\n\t//sleep 15;\n\t// Removed for the moment, old broken stuff\n//\t[[_markerX],\"A3A_fnc_autoGarrison\"] call A3A_fnc_scheduler;\n}\nelse\n{\n\t_soldiers = [];\n\t{_soldiers pushBack (typeOf _x)} forEach (allUnits select {(_x distance _positionX < (_size*3)) and (_x getVariable [\"spawner\",false]) and (side group _x == _winner) and (vehicle _x == _x) and (alive _x)});\n\t[_soldiers,_winner,_markerX,0] remoteExec [\"A3A_fnc_garrisonUpdate\",2];\n\n\t//New system =================================================================\n\tprivate _type = \"Other\";\n\tswitch (true) do\n\t{\n\t    case (_markerX in airportsX): {_type = \"Airport\"};\n\t\t\tcase (_markerX in outposts): {_type = \"Outpost\"};\n\t\t\tcase (_markerX in citiesX): {_type = \"City\"};\n\t};\n\tprivate _preference = garrison getVariable (format [\"%1_preference\", _type]);\n\tprivate _request = [];\n\tfor \"_i\" from 0 to ((count _preference) - 1) do\n\t{\n\t\t_request pushBack ([_preference select _i, _winner] call A3A_fnc_createGarrisonLine);\n\t};\n\tgarrison setVariable [format [\"%1_requested\", _markerX], _request, true];\n\t//End ========================================================================\n};\n\n[_markerX, [_looser, _winner]] call A3A_fnc_updateReinfState;\n[3, format [\"Garrison set for %1\", _markerX], _fileName] call A3A_fnc_log",
"[_x, sideUnknown] };\n\tif (count _friendlyAirports > 0) then\n\t{\n\t\tprivate _nearAirport = [_friendlyAirports, _markerX] call BIS_fnc_nearestPosition;\n\t\tprivate _kzlist = killZones getVariable [_nearAirport, []];\n\t\t_kzlist = _kzlist - [_markerX];\n\t\tkillZones setVariable [_nearAirport, _kzlist, true];\n\t};\n};\n\n_nul = [_markerX] call A3A_fnc_mrkUpdate;\n_sides = _sides - [_winner,_looser];\n_other = _sides select 0;\n\nif (_markerX in airportsX) then\n{\n\tif (_winner == teamPlayer) then\n\t{\n\t\t[0,10,_positionX] remoteExec [\"A3A_fnc_citySupportChange\",2];\n        [\n            3,\n            \"Rebels took an airport\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log",
"[50, 150];\n\t\t\t_prestigeInvaders = [-25, 90];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_prestigeOccupants = [-25, 90];\n\t\t\t_prestigeInvaders = [50, 150];\n\t\t};\n\t}\n\telse\n\t{\n\t\tserver setVariable [_markerX,dateToNumber date,true];\n\t\t[_markerX,60] call A3A_fnc_addTimeForIdle;\n\t\tif (_winner == Occupants) then\n\t\t{\n\t\t\t[10,0,_positionX] remoteExec [\"A3A_fnc_citySupportChange\",2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t[-10,-10,_positionX] remoteExec [\"A3A_fnc_citySupportChange\",2]\n\t\t};\n\t\tif (_looser == teamPlayer) then\n\t\t{\n            [\n                3,\n                \"Rebels lost an airport\",\n                \"aggroEvent\",\n                true\n            ] call A3A_fnc_log",
"[-40, 90];\n                _prestigeInvaders = [-20, 90];\n            }\n            else\n            {\n                _prestigeOccupants = [-20, 90];\n                _prestigeInvaders = [-40, 90];\n            };\n\t\t};\n\t};\n\t[\"TaskSucceeded\", [\"\", \"Airbase Taken\"]] remoteExec [\"BIS_fnc_showNotification\",_winner];\n\t[\"TaskFailed\", [\"\", \"Airbase Lost\"]] remoteExec [\"BIS_fnc_showNotification\",_looser];\n\t[\"TaskUpdated\",[\"\",format [\"%1 lost an Airbase\",_textX]]] remoteExec [\"BIS_fnc_showNotification\",_other];\n\tkillZones setVariable [_markerX,[],true];\n};\nif (_markerX in outposts) then\n{\n\tif (_winner != teamPlayer) then\n\t{\n\t\tserver setVariable [_markerX,dateToNumber date,true];\n\t\tif (_looser == teamPlayer) then\n\t\t{\n            [\n                3,\n                \"Rebels lost an outpost\",\n                \"aggroEvent\",\n                true\n            ] call A3A_fnc_log",
"[-10, 90];\n            }\n            else\n            {\n                _prestigeInvaders = [-10, 90];\n            };\n\t\t};\n\t}\n\telse\n\t{\n        [\n            3,\n            \"Rebels took an outpost\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log",
"[30, 150];\n            _prestigeInvaders = [-15, 90];\n        }\n        else\n        {\n            _prestigeOccupants = [-15, 90];\n            _prestigeInvaders = [30, 150];\n        };\n\t};\n\t[\"TaskSucceeded\", [\"\", \"Outpost Taken\"]] remoteExec [\"BIS_fnc_showNotification\",_winner];\n\t[\"TaskFailed\", [\"\", \"Outpost Lost\"]] remoteExec [\"BIS_fnc_showNotification\",_looser];\n\t[\"TaskUpdated\",[\"\",format [\"%1 lost an Outpost\",_textX]]] remoteExec [\"BIS_fnc_showNotification\",_other];\n\tkillZones setVariable [_markerX,[],true];\n\t};\nif (_markerX in seaports) then\n{\n\tif (_winner == teamPlayer) then\n\t{\n        [\n            3,\n            \"Rebels took a seaport\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log",
"[20, 120];\n        }\n        else\n        {\n            _prestigeInvaders = [20, 120];\n        };\n\t};\n\t[\"TaskSucceeded\", [\"\", \"Seaport Taken\"]] remoteExec [\"BIS_fnc_showNotification\",_winner];\n\t[\"TaskFailed\", [\"\", \"Seaport Lost\"]] remoteExec [\"BIS_fnc_showNotification\",_looser];\n\t[\"TaskUpdated\",[\"\",format [\"%1 lost a Seaport\",_textX]]] remoteExec [\"BIS_fnc_showNotification\",_other];\n\t};\nif (_markerX in factories) then\n{\n    if (_winner == teamPlayer) then\n\t{\n        [\n            3,\n            \"Rebels took a factory\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log",
"[20, 120];\n        }\n        else\n        {\n            _prestigeInvaders = [20, 120];\n        };\n\t};\n\t[\"TaskSucceeded\", [\"\", \"Factory Taken\"]] remoteExec [\"BIS_fnc_showNotification\",_winner];\n\t[\"TaskFailed\", [\"\", \"Factory Lost\"]] remoteExec [\"BIS_fnc_showNotification\",_looser];\n\t[\"TaskUpdated\",[\"\",format [\"%1 lost a Factory\",_textX]]] remoteExec [\"BIS_fnc_showNotification\",_other];\n};\nif (_markerX in resourcesX) then\n{\n    if (_winner == teamPlayer) then\n\t{\n        [\n            3,\n            \"Rebels took a resource\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log",
"[20, 120];\n        }\n        else\n        {\n            _prestigeInvaders = [20, 120];\n        };\n\t};\n\t[\"TaskSucceeded\", [\"\", \"Resource Taken\"]] remoteExec [\"BIS_fnc_showNotification\",_winner];\n\t[\"TaskFailed\", [\"\", \"Resource Lost\"]] remoteExec [\"BIS_fnc_showNotification\",_looser];\n\t[\"TaskUpdated\",[\"\",format [\"%1 lost a Resource\",_textX]]] remoteExec [\"BIS_fnc_showNotification\",_other];\n};\n\n[3, format [\"Notification and points done for marker change at %1\", _markerX], _fileName] call A3A_fnc_log",
"[_markerX,_x] spawn A3A_fnc_deleteControls} forEach controlsX;\nif (_winner == teamPlayer) then\n{\n\t[] call A3A_fnc_tierCheck;\n\n\t//Convert all of the static weapons to teamPlayer, essentially. Make them mannable by AI.\n\t//Make the size larger, as rarely does the marker cover the whole outpost.\n\tprivate _staticWeapons = nearestObjects [_positionX, [\"StaticWeapon\"], _size * 1.5, true];\n\t{\n\t\t[_x, teamPlayer, true] call A3A_fnc_vehKilledOrCaptured;\n\t\tif !(_x in staticsToSave) then {\n\t\t\tstaticsToSave pushBack _x;\n\t\t};\n\t} forEach _staticWeapons;\n\tpublicVariable \"staticsToSave\";\n\n\tif (!isNull _flagX) then\n\t{\n\t\t//[_flagX,\"remove\"] remoteExec [\"A3A_fnc_flagaction\",0,_flagX];\n\t\t//_flagX setVariable [\"isGettingCaptured\", nil, true];\n\t\t[_flagX,\"SDKFlag\"] remoteExec [\"A3A_fnc_flagaction\",0,_flagX];\n\t\t[_flagX,SDKFlagTexture] remoteExec [\"setFlagTexture\",_flagX];\n\t\tsleep 2;\n\t\t//[_flagX,\"unit\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_flagX];\n\t\t//[_flagX,\"vehicle\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_flagX];\n\t\t//[_flagX,\"garage\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_flagX];\n\t\tif (_markerX in seaports) then {[_flagX,\"seaport\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_flagX]};\n\t};\n\t[_prestigeOccupants,_prestigeInvaders] spawn A3A_fnc_prestige;\n\twaitUntil {sleep 1; ((spawner getVariable _markerX == 2)) or ({((side group _x) in [_looser,_other]) and (_x getVariable [\"spawner\",false]) and ([_x,_markerX] call A3A_fnc_canConquer)} count allUnits > 3*({(side _x == teamPlayer) and ([_x,_markerX] call A3A_fnc_canConquer)} count allUnits))};\n\tif (spawner getVariable _markerX != 2) then\n\t{\n\t\tsleep 10;\n\t\t[_markerX,teamPlayer] remoteExec [\"A3A_fnc_zoneCheck\",2];\n\t};\n}\nelse\n\t{\n\t//Remove static weapons near the marker from the saved statics array\n\tprivate _staticWeapons = nearestObjects [_positionX, [\"StaticWeapon\"], _size * 1.5, true];\n\tstaticsToSave = staticsToSave - _staticWeapons;\n\tpublicVariable \"staticsToSave\";\n\t{\n\t\t[_x, _winner, true] call A3A_fnc_vehKilledOrCaptured;\n\t} forEach _staticWeapons;\n\n\tif (!isNull _flagX) then\n\t{\n\t\t//_flagX setVariable [\"isGettingCaptured\", nil, true];\n\t\tif (_looser == teamPlayer) then\n\t\t{\n\t\t\t[_flagX,\"remove\"] remoteExec [\"A3A_fnc_flagaction\",0,_flagX];\n\t\t\tsleep 2;\n\t\t\t[_flagX,\"take\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_flagX];\n\t\t};\n\t\tif (_winner == Occupants) then\n\t\t{\n\t\t\t[_flagX,NATOFlagTexture] remoteExec [\"setFlagTexture\",_flagX];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t[_flagX,CSATFlagTexture] remoteExec [\"setFlagTexture\",_flagX];\n\t\t};\n\t};\n\tif (_looser == teamPlayer) then\n\t\t{\n\t\t[_prestigeOccupants,_prestigeInvaders] spawn A3A_fnc_prestige;\n\t\tif ((random 10 < ((tierWar + difficultyCoef)/4)) and !([\"DEF_HQ\"] call BIS_fnc_taskExists) and (isPlayer theBoss)) then {[[],\"A3A_fnc_attackHQ\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t};\n\t};\nif ((_winner != teamPlayer) and (_looser != teamPlayer)) then\n\t{\n\tif (_markerX in outposts) then\n\t\t{\n\t\t_closeX = (seaports + resourcesX + factories) select {((getMarkerPos _x) distance _positionX < distanceSPWN) and (sidesX getVariable [_x,sideUnknown] != teamPlayer)};\n\t\tif (_looser == Occupants) then  {_closeX = _closeX select {sidesX getVariable [_x,sideUnknown] == Occupants}} else {_closeX = _closeX select {sidesX getVariable [_x,sideUnknown] == Invaders}};\n\t\t{[_winner,_x] spawn A3A_fnc_markerChange; sleep 5} forEach _closeX;\n\t\t}\n\telse\n\t\t{\n\t\tif (_markerX in airportsX) then\n\t\t\t{\n\t\t\t_closeX = (seaports + outposts) select {((getMarkerPos _x) distance _positionX < distanceSPWN) and (sidesX getVariable [_x,sideUnknown] != teamPlayer)};\n\t\t\t_closeX append ((factories + resourcesX) select {(sidesX getVariable [_x,sideUnknown] != teamPlayer) and (sidesX getVariable [_x,sideUnknown] != _winner) and ([airportsX,_x] call BIS_fnc_nearestPosition == _markerX)});\n\t\t\tif (_looser == Occupants) then  {_closeX = _closeX select {sidesX getVariable [_x,sideUnknown] == Occupants}} else {_closeX = _closeX select {sidesX getVariable [_x,sideUnknown] == Invaders}};\n\t\t\t{[_winner,_x] spawn A3A_fnc_markerChange; sleep 5} forEach _closeX;\n\t\t\t};\n\t\t};\n\t};\nmarkersChanging = markersChanging - [_markerX];\n\n[3, format [\"Finished marker change at %1\", _markerX], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_mrkWIN.sqf": [
"[\"_flagX\",\"_pos\",\"_markerX\",\"_positionX\",\"_size\",\"_powerpl\",\"_revealX\"];\nprivate _filename = \"fn_mrkWIN\";\n\n//Variable Setup.\n_flagX = _this select 0;\n_playerX = _this select 1;\n_revealX = [];\n_pos = getPos _flagX;\n_markerX = [markersX,_pos] call BIS_fnc_nearestPosition;\n\nif (sidesX getVariable [_markerX,sideUnknown] == teamPlayer) exitWith {};\n_positionX = getMarkerPos _markerX;\n_size = [_markerX] call A3A_fnc_sizeMarker;\n\nif ((!isNull _playerX) and (captive _playerX)) exitWith {[\"Capture\", \"You cannot Capture the Flag while Undercover\"] call A3A_fnc_customHint;};\nif ((_markerX in airportsX) and (tierWar < 3)) exitWith {[\"Capture\", \"You cannot capture Airports until you reach War Level 3\"] call A3A_fnc_customHint;};\n\n//Check if the flag is locked\nif(_flagX getVariable [\"isGettingCaptured\", false]) exitWith\n{\n\t[\"Capture\", \"This flag pole is locked, try again in 30 seconds!\"] call A3A_fnc_customHint;\n};\n\n//Lock the flag\n_flagX setVariable [\"isGettingCaptured\", true, true];\n\n//Unlock the flag after 30 seconds\n_flagX spawn\n{\n\tsleep 30;\n\t_this setVariable [\"isGettingCaptured\", nil, true];\n};\n\nif (!isNull _playerX) then\n{\n\t[2, format [\"Flag capture at %1 initiated by %2\", _markerX, str _playerX], _filename, true] call A3A_fnc_log",
"[_x,_markerX] call A3A_fnc_canConquer)) then\n\t\t{\n\t\t\t_revealX pushBack _x\n\t\t};\n\t} forEach allUnits;\n\tif (player == _playerX) then\n\t{\n\t\t_playerX playMove \"MountSide\";\n\t\tsleep 8;\n\t\t_playerX playMove \"\";\n\t\t{\n\t\t\tplayer reveal _x\n\t\t} forEach _revealX;\n\t};\n};\n\nif ((count _revealX) > 2*({([_x,_markerX] call A3A_fnc_canConquer) and (side _x == teamPlayer)} count allUnits)) exitWith\n{\n\t[3, format [\"Markers left to be conquered: %1 \", _revealX], _filename, true] call A3A_fnc_log",
"[2, format [\"Flag capture by %1 abandoned due to outnumbering\", str _playerX], _filename, true] call A3A_fnc_log",
"[\"Capture\", \"The enemy still outnumber us, check the map and clear the rest of the area\"] call A3A_fnc_customHint;\n};\n\n{\n\tif (isPlayer _x) then\n\t{\n\t\t[5,_x] remoteExec [\"A3A_fnc_playerScoreAdd\",_x];\n\t\tif (captive _x) then\n\t\t{\n\t\t\t[_x,false] remoteExec [\"setCaptive\",0,_x];\n\t\t\t_x setCaptive false;\n\t\t};\n\t}\n} forEach ([_size,0,_positionX,teamPlayer] call A3A_fnc_distanceUnits);\n\n[2, format [\"Flag capture by %1 rewarded\", str _playerX], _filename, true] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_onPlayerDisconnect.sqf": [
"[\"_unit\", \"_id\", \"_uid\"];\n\n[2, format [\"Player disconnected with id %1 and unit %2 on side %3\", _uid, _unit, (side _unit)], _filename] call A3A_fnc_log",
"[Antistasi] Exiting onPlayerDisconnect due to no UID or sideLogic unit. Possible Headless Client disconnect?\";\n};\n\n\n// find original player unit in case of remote control\nprivate _realUnit = _unit getVariable [\"owner\", _unit];\n\n[3, format [\"Player unit %1, original unit %2, boss %3\", _unit, _realUnit, theBoss], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_placementselection.sqf": [
"[2,\"New session selected\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_prestige.sqf": [
"[\"_occupantsChanged\",\"_invadersChanged\"];\n\n/*  Adds a new aggro spike to the current stack\n\n    Execution on: Server\n\n    Scope: External\n\n    Params:\n        _occupantsChanged: ARRAY : [change, time in minutes]\n        _invadersChanged: ARRAY : [change, time in minutes]\n\n    Returns:\n        Nothing\n*/\n\n_fn_convertMinutesToDecayRate =\n{\n    params [\"_points\", \"_minutes\"];\n    if(_minutes == 0) then\n    {\n        [1, \"Minute parameter is 0, assuming 1\", \"prestige\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_rebelAttack.sqf": [
"[[\"_side\", sideEnemy]];\n\nprivate _fileName = \"rebelAttack\";\n[2, format [\"Starting large attack script for side %1\", _side], _fileName, true] call A3A_fnc_log",
"[2, \"Aborting attack as IFA has no nightvision (at least thats what I assume)\", _fileName, true] call A3A_fnc_log",
"[\"Synd_HQ\",\"NATO_carrier\",\"CSAT_carrier\"] - destroyedSites;;\nprivate _possibleStartBases = airportsX select {([_x,false] call A3A_fnc_airportCanAttack) && (sidesX getVariable [_x,sideUnknown] == _side)};\n\nif((_side == Occupants) && (gameMode != 4)) then\n{\n    _possibleStartBases pushBack \"NATO_carrier\";\n};\nif((_side == Invaders) && (gameMode != 3)) then\n{\n    _possibleStartBases pushBack \"CSAT_carrier\";\n};\n\nprivate _targetSide = sideEnemy;\n//No AI vs AI, possible targets are only bases held by rebels\nif (gameMode != 1) then\n{\n    _possibleTargets = _possibleTargets select {sidesX getVariable [_x,sideUnknown] == teamPlayer};\n    _targetSide = teamPlayer;\n}\nelse\n{\n    //Select the target side and reduce possible targets based on it\n    private _playersHold = 0;\n    private _ownHold = 0;\n    private _enemyAIHold = 0;\n\n    {\n        switch (sidesX getVariable [_x, sideUnknown]) do\n        {\n            case (teamPlayer):\n            {\n                _playersHold = _playersHold + 1;\n            };\n            case (_side):\n            {\n                _ownHold = _ownHold + 1;\n            };\n            default\n            {\n                _enemyAIHold = _enemyAIHold + 1;\n            };\n        };\n    } forEach (airportsX + outposts + seaports + factories + resourcesX);\n\n    private _allTargetsCount = _playersHold + _ownHold + _enemyAIHold;\n\n    private _playersHoldRatio = _playersHold / _allTargetsCount;\n    private _enemyAIHoldRatio = _enemyAIHold / _allTargetsCount;\n\n    private _aggression = 0;\n    private _enemySide = sideUnknown;\n\n    if(_side == Occupants) then\n    {\n        _aggression = aggressionOccupants;\n        _enemySide = Invaders;\n    }\n    else\n    {\n        _aggression = aggressionInvaders;\n        _enemySide = Occupants;\n    };\n\n    //Select the side to attack and the remaining targets\n    _targetSide = selectRandomWeighted [teamPlayer, (0.5 * _playersHoldRatio) + (0.5 * (_aggression/100)), _enemySide, _enemyAIHoldRatio];\n    _possibleTargets = _possibleTargets select {sidesX getVariable [_x,sideUnknown] == _targetSide};\n};\n\n//On low level remove cities from target list\nif (gameMode != 4) then\n{\n\tif (tierWar < 3) then {_possibleTargets = _possibleTargets - citiesX;};\n}\nelse\n{\n\tif (tierWar < 5) then {_possibleTargets = _possibleTargets - citiesX;};\n};\n\n//Attacks on rebels or cities should be closer than mission range\n_possibleTargets = _possibleTargets select {(sidesX getVariable [_x, sideUnknown] != teamPlayer && (!(_x in citiesX))) || {(getMarkerPos _x) distance2D (getMarkerPos \"Synd_HQ\") < distanceMission}};\n\nif((count _possibleTargets == 0) || (count _possibleStartBases == 0)) exitWith\n{\n    [2, \"Attack found no suitable targets or no suitable start bases, aborting!\", _fileName, true] call A3A_fnc_log",
"[3, format [\"%1 possible targets for attack found, possible start points are %2\", count _possibleTargets, _possibleStartBases], _fileName, true] call A3A_fnc_log",
"[];\nprivate _availableTargets = [];\n{\n    private _startAirport = _x;\n    private _airportSide = sidesX getVariable [_startAirport, sideUnknown];\n\n    //Gather position and killzones of airport\n    private _killZones = killZones getVariable [_startAirport, []];\n    private _startAirportPos = getMarkerPos _startAirport;\n    {\n        //For each target, calculate the distance to the airport\n        private _target = _x;\n        private _distance = (getMarkerPos _target) distance2D _startAirportPos;\n        //In air range, add to target list\n        if(_distance < distanceForAirAttack) then\n        {\n            //If in land range, half the distance\n            if(_distance < distanceForLandAttack && {[_startAirport, _target] call A3A_fnc_isTheSameIsland}) then\n            {\n                _distance = _distance * 0.5;\n            };\n\n            //If the target is surrounded by our friendly markers, remove points\n            private _nearbyFriendlyMarkers = (markersX - controlsX - citiesX - outpostsFIA) select\n            {\n                (sidesX getVariable [_x,sideUnknown] == _airportSide) &&\n                {(getMarkerPos _x) distance2D (getMarkerPos _target) < 1500}\n            };\n            _distance = _distance - (300 * (count _nearbyFriendlyMarkers));\n            if (_distance < 0) then {_distance = 0};\n\n            if(count _nearbyFriendlyMarkers >= 5 && {!(_target in citiesX)}) then\n            {\n                [3, format [\"%1 is surrounded by us, considering easy target\", _target], _fileName] call A3A_fnc_log",
"[_target, [[_startAirport, _distance]]];\n            }\n            else\n            {\n                private _targetArray = _availableTargets select _index;\n                (_targetArray select 1) pushBack [_startAirport, _distance];\n            };\n        };\n    } forEach _possibleTargets;\n} forEach _possibleStartBases;\n\nif (count _availableTargets == 0) exitWith\n{\n    [2, \"Attack could not find available targets, aborting!\", _fileName, true] call A3A_fnc_log",
"[3, \"Logging available targets for attack\", _fileName] call A3A_fnc_log",
"[_availableTargets, \"Available targets\"] call A3A_fnc_log",
"[\"_target\", \"_baseArray\"];\n    //[3, format [\"T: %1, A: %2\", _target, _baseArray], _fileName] call A3A_fnc_log",
"[_x,sideUnknown] == _targetSide) &&\n        {(getMarkerPos _x) distance2D (getMarkerPos _target) < 1500}\n    };\n    _targetPoints = 500 * (count _nearbyFriendlyMarkers);\n\n    if(count _nearbyFriendlyMarkers <= 3) then\n    {\n        //Thats a shitty method, it is better without it as airports are considered easy cause they are in the open ...\n        //Only a few of their friendly markers nearby, consider it an easy target\n        //[3, format [\"%1 has only minimal friendly location around it, considering easy target\", _target], _fileName] call A3A_fnc_log",
"[_target,[]];\n    private _nearbyStatics = staticsToSave select {(_x distance2D (getMarkerPos _target)) < distanceSPWN};\n    _targetPoints = _targetPoints + (50 * (count _garrison) + (200 * (count _nearbyStatics)));\n\n    if((count _garrison <= 8) && {(count _nearbyStatics <= 2) && {!(_target in citiesX)}}) then\n    {\n        //Only minimal garrison, consider it an easy target\n        [3, format [\"%1 has only minimal garrison, considering easy target\", _target], _fileName] call A3A_fnc_log",
"[_x select 0, ((_x select 1) + _targetPoints) * _targetMultiplier]};\n} forEach _availableTargets;\n\n[3, \"Logging final target values for attack\", _fileName] call A3A_fnc_log",
"[_availableTargets, \"Target values\"] call A3A_fnc_log",
"[objNull, objNull, objNull, objNull];\n    {\n        private _target = _x;\n        private _index = _availableTargets findIf {(_x select 0) == _target};\n        private _startArray = (_availableTargets select _index) select 1;\n\n        //Search for the best option for attacking this target (lowest number is best)\n        private _attackParams = objNull;\n        {\n            if(!(_attackParams isEqualType []) || {(_attackParams select 1) > (_x select 1)}) then\n            {\n                _attackParams = _x;\n            };\n        } forEach _startArray;\n        _attackParams pushBack _target;\n\n        //Check if the attack is better than one of the current selected ones\n        private _insertIndex = _attackList findIf {(!(_x isEqualType [])) || {(_x select 1) > (_attackParams select 1)}};\n        if(_insertIndex != -1) then\n        {\n            if(_insertIndex == 3) then\n            {\n                _attackList set [3, _attackParams];\n            }\n            else\n            {\n                //Sort in and push all worse option down by one\n                for \"_i\" from 3 to _insertIndex step -1 do\n                {\n                    _attackList set [_i + 1, _attackList select _i];\n                };\n                //Set attack and then cut of the last option\n                _attackList set [_insertIndex, _attackParams];\n                _attackList resize 4;\n            };\n        };\n    } forEach _easyTargets;\n\n    [3, \"Found four targets to attack, these are:\", _fileName] call A3A_fnc_log",
"[_attackList, \"Target params\"] call A3A_fnc_log",
"[5400, _side] call A3A_fnc_timingCA;\n\n    //Execute the attacks from the given bases to the targets\n    {\n        private _target = _x select 2;\n        private _nearPlayers = allPlayers findIf {(getMarkerPos (_target) distance2D _x) < 1500};\n        if((_nearPlayers != -1) || ((spawner getVariable _target) != 2) || (sidesX getVariable _target == teamPlayer)) then\n        {\n            [2, format [\"Starting single attack against %1 from %2\", _target, _x select 0], _fileName] call A3A_fnc_log",
"[[_target, _x select 0, \"\", false],\"A3A_fnc_patrolCA\"] remoteExec [\"A3A_fnc_scheduler\",2];\n            sleep 180;\n        }\n        else\n        {\n            private _side = sidesX getVariable (_x select 0);\n            [2, format [\"Autowin %1 for side %2 to avoid unnecessary calculations\", _target, _side], _fileName] call A3A_fnc_log",
"[_side, _target] spawn A3A_fnc_markerChange;\n            [_side, _target] spawn\n            {\n                params [\"_side\", \"_target\"];\n                sleep 10;\n                private _squads = 2 + round (random 2);\n                private _soldiers = [];\n                for \"_i\" from 0 to _squads do\n                {\n                    if (_side == Occupants) then\n                    {\n                        _soldiers append (selectRandom (groupsNATOSquad + groupsNATOmid));\n                    }\n                    else\n                    {\n                        _soldiers append (selectRandom (groupsCSATSquad + groupsCSATmid));\n                    };\n                };\n                [_soldiers,_side,_target,0] remoteExec [\"A3A_fnc_garrisonUpdate\",2];\n            };\n            sleep 30;\n        };\n    } forEach _attackList;\n}\nelse\n{\n    //Not enough easy targets, attack the best non easy target if available\n    private _mainTarget = objNull;\n    private _easyTarget = objNull;\n    {\n        _x params [\"_target\", \"_startArray\"];\n\n        //Select the best attack option for the target\n        private _attackParams = objNull;\n        {\n            if(!(_attackParams isEqualType []) || {(_attackParams select 1) > (_x select 1)}) then\n            {\n                _attackParams = _x;\n            };\n        } forEach _startArray;\n        _attackParams pushBack _target;\n\n        //It makes less sense to hit a weak target with a strong waved attack, save it seperated\n        if (_target in _easyTargets) then\n        {\n            if (!(_easyTarget isEqualType []) || {(_easyTarget select 1) > (_attackParams select 1)}) then\n            {\n                _easyTarget = _attackParams;\n            };\n        }\n        else\n        {\n            if(!(_mainTarget isEqualType []) || {(_mainTarget select 1) > (_attackParams select 1)}) then\n            {\n                _mainTarget = _attackParams;\n            };\n        };\n    } forEach _availableTargets;\n\n    [3, format [\"Main target is %1, easy target is %2\", _mainTarget, _easyTarget], _fileName] call A3A_fnc_log",
"[])) then\n    {\n        [3, \"Main target not set, selecting easy target\", _fileName] call A3A_fnc_log",
"[])) then\n        {\n            [3, \"Easy target not set, selecting main target\", _fileName] call A3A_fnc_log",
"[3, format [\"Selected target is %1!\", _finalTarget], _fileName] call A3A_fnc_log",
"[\"_attackOrigin\", \"_attackPoints\", \"_attackTarget\"];\n\n    //Maybe have aggro play a role here?\n    //Select the number of waves based on the points as higher points mean higher difficulty\n    private _waves =\n\t\t_attackPoints / 2500\n\t\t+ ([0, 1] select (_attackTarget in airportsX))\n\t\t+ (count allPlayers / 40)\n\t\t+ (tierWar / 10);\n\n\t_waves = round _waves;\n    if(_waves < 1) then {_waves = 1};\n\n    //Send the actual attacks\n    if (sidesX getVariable [_attackOrigin, sideUnknown] == Occupants || {!(_attackTarget in citiesX)}) then\n    {\n        private _nearPlayers = allPlayers findIf {(getMarkerPos (_attackTarget) distance2D _x) < 1500};\n        if((_nearPlayers != -1) || ((spawner getVariable _attackTarget) != 2) || (sidesX getVariable _attackTarget == teamPlayer) || (_attackTarget in citiesX)) then\n        {\n            //Sending real attack, execute the fight\n            [2, format [\"Starting waved attack with %1 waves from %2 to %3\", _waves, _attackOrigin, _attackTarget], _fileName] call A3A_fnc_log",
"[_attackTarget, _attackOrigin, _waves] spawn A3A_fnc_wavedCA;\n        }\n        else\n        {\n            //Auto win for the attacker, no units or calculation needed\n            private _side = sidesX getVariable _attackOrigin;\n            [2, format [\"Autowin %1 for side %2 to avoid unnecessary calculations\", _attackTarget, _side], _fileName] call A3A_fnc_log",
"[_side, _attackTarget] spawn A3A_fnc_markerChange;\n            [3600, _side] call A3A_fnc_timingCA;\n            //Add units to the marker to avoid fast recapture\n            [_side, _attackTarget] spawn\n            {\n                params [\"_side\", \"_target\"];\n                sleep 10;\n                private _squads = 4 + round (random 3);\n                private _soldiers = [];\n                for \"_i\" from 0 to _squads do\n                {\n                    if (_side == Occupants) then\n                    {\n                        _soldiers append (selectRandom (groupsNATOSquad + groupsNATOmid));\n                    }\n                    else\n                    {\n                        _soldiers append (selectRandom (groupsCSATSquad + groupsCSATmid));\n                    };\n                };\n                [_soldiers,_side,_target,0] remoteExec [\"A3A_fnc_garrisonUpdate\",2];\n            };\n        };\n    }\n    else\n    {\n        [2, format [\"Starting punishment mission from %1 to %2\", _attackOrigin, _attackTarget], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_rebuildRadioTower.sqf": [
"[1, \"Server-only function miscalled\", _file] call A3A_fnc_log",
"[\"_antenna\"];\n\nif !(_antenna in antennasDead) exitWith { [1, \"Attempted to rebuild invalid radio tower\", _file] call A3A_fnc_log",
"[2, format[\"Repairing Antenna %1\", str _antenna], _file] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_repairRuinedBuilding.sqf": [
"[1, \"Server-only function miscalled\", \"fn_repairRuinedBuilding\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_scheduler.sqf": [
"[2,format [\"Scheduled function: %1, Function params: %2\",_function,_params],_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_splitVehicleCrewIntoOwnGroups.sqf": [
"[\"_vehicle\"];\n\n[3, format [\"Splitting the crew of %1, type of %2\", _vehicle, typeOf _vehicle], __FILE__] call A3A_fnc_log",
"[]) exitWith {\n\t[[], \"\"];\n};\n\nprivate _crewGroups = [];\n\nprivate _groupName = groupId group (_crew select 0 select 0);\n\n[3, format [\"Crew is %1\", str _crew], __FILE__] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Base/fn_startTestingTimer.sqf": [
"[] spawn A3A_fnc_startTestingTimer;\n};\n\nprivate _fileName = \"testingTimer\";\n\n[\n    3,\n    \"Starting testing timer now\",\n    _fileName\n] call A3A_fnc_log",
"[];\n{\n    _peopleOnline pushBack [_x, getPos _x];\n} forEach (allPlayers - (entities \"HeadlessClient_F\"));\nprivate _playersActive = 0;\n\nwhile {true} do\n{\n    //Sleep if no player is online\n    if (isMultiplayer && (count (allPlayers - (entities \"HeadlessClient_F\")) == 0)) then\n    {\n        waitUntil {sleep 10; (count (allPlayers - (entities \"HeadlessClient_F\")) > 0)};\n    };\n\n    //Sleep 5 minutes\n    sleep TESTING_INTERVAL;\n\n    private _newOnline = [];\n    private _index = 0;\n    {\n        private _player = _x;\n        //Check if player was online before\n        _index = _peopleOnline findIf {(_x select 0) isEqualTo _player};\n        if(_index != -1) then\n        {\n            //If online, check if the player has moved at least 5 meters in the mean time\n            if((_peopleOnline select _index select 1) distance (getPos _player) > 5) then\n            {\n                _playersActive = _playersActive + 1;\n            };\n        };\n        _newOnline pushBack [_player, getPos _player];\n    } forEach (allPlayers - (entities \"HeadlessClient_F\"));\n\n    //Replace array with new data\n    _peopleOnline = _newOnline;\n\n    //Limit counted players to a maximum of 10\n    _playersActive = _playersActive min 10;\n\n    //Add new testing time\n    _testedTime = _testedTime + (_playersActive * TESTING_INTERVAL);\n\n    [\n        3,\n        format\n        [\n            \"Total testing time: %1 || Testing time last cycle: %2 || Active players: %3\",\n            _testedTime/3600,\n            (_playersActive * TESTING_INTERVAL)/3600,\n            _playersActive\n        ],\n        _fileName\n    ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_AIVEHinit.sqf": [
"[\"_veh\", \"_side\"];\nif (isNil \"_veh\") exitWith {};\n\nif !(isNil { _veh getVariable \"ownerSide\" }) exitWith\n{\n\t// vehicle already initialized, just swap side and exit\n\t[_veh, _side] call A3A_fnc_vehKilledOrCaptured;\n};\n\n_veh setVariable [\"originalSide\", _side, true];\n_veh setVariable [\"ownerSide\", _side, true];\n\n// probably just shouldn't be called for these\nif ((_veh isKindOf \"FlagCarrier\") or (_veh isKindOf \"Building\") or (_veh isKindOf \"ReammoBox_F\")) exitWith {};\n//if (_veh isKindOf \"ReammoBox_F\") exitWith {[_veh] call A3A_fnc_NATOcrate};\n\n// this might need moving into a different function later\nif (_side == teamPlayer) then\n{\n\tclearMagazineCargoGlobal _veh;\t\t\t// might need an exception on this for vehicle weapon mags?\n\tclearWeaponCargoGlobal _veh;\n\tclearItemCargoGlobal _veh;\n\tclearBackpackCargoGlobal _veh;\n};\n\nprivate _typeX = typeOf _veh;\nif ((_typeX in vehNormal) or (_typeX in vehAttack) or (_typeX in vehBoats) or (_typeX in vehAA)) then\n{\n\t_veh call A3A_fnc_addActionBreachVehicle;\n\n\tif !(_typeX in vehAttack) then\n\t{\n\t\tif (_veh isKindOf \"Car\") then\n\t\t{\n\t\t\t_veh addEventHandler [\"HandleDamage\",{if (((_this select 1) find \"wheel\" != -1) and ((_this select 4==\"\") or (side (_this select 3) != teamPlayer)) and (!isPlayer driver (_this select 0))) then {0} else {(_this select 2)}}];\n\t\t\tif ({\"SmokeLauncher\" in (_veh weaponsTurret _x)} count (allTurrets _veh) > 0) then\n\t\t\t{\n\t\t\t\t_veh setVariable [\"within\",true];\n\t\t\t\t_veh addEventHandler [\"GetOut\", {private [\"_veh\"]; _veh = _this select 0; if (side (_this select 2) != teamPlayer) then {if (_veh getVariable \"within\") then {_veh setVariable [\"within\",false]; [_veh] call A3A_fnc_smokeCoverAuto}}}];\n\t\t\t\t_veh addEventHandler [\"GetIn\", {private [\"_veh\"]; _veh = _this select 0; if (side (_this select 2) != teamPlayer) then {_veh setVariable [\"within\",true]}}];\n\t\t\t};\n\t\t};\n\t}\n\telse\n\t{\n\t\tif (_typeX in vehAPCs) then\n\t\t{\n\t\t\t_veh addEventHandler [\"HandleDamage\",{private [\"_veh\"]; _veh = _this select 0; if (!canFire _veh) then {[_veh] call A3A_fnc_smokeCoverAuto; _veh removeEventHandler [\"HandleDamage\",_thisEventHandler]};if (((_this select 1) find \"wheel\" != -1) and (_this select 4==\"\") and (!isPlayer driver (_veh))) then {0;} else {(_this select 2);}}];\n\t\t\t_veh setVariable [\"within\",true];\n\t\t\t_veh addEventHandler [\"GetOut\", {private [\"_veh\"];  _veh = _this select 0; if (side (_this select 2) != teamPlayer) then {if (_veh getVariable \"within\") then {_veh setVariable [\"within\",false];[_veh] call A3A_fnc_smokeCoverAuto}}}];\n\t\t\t_veh addEventHandler [\"GetIn\", {private [\"_veh\"];_veh = _this select 0; if (side (_this select 2) != teamPlayer) then {_veh setVariable [\"within\",true]}}];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (_typeX in vehTanks) then\n\t\t\t{\n\t\t\t\t_veh addEventHandler [\"HandleDamage\",{private [\"_veh\"]; _veh = _this select 0; if (!canFire _veh) then {[_veh] call A3A_fnc_smokeCoverAuto;  _veh removeEventHandler [\"HandleDamage\",_thisEventHandler]}}];\n\t\t\t}\n\t\t\telse\t\t// never called? vehAttack is APCs+tank\n\t\t\t{\n\t\t\t\t_veh addEventHandler [\"HandleDamage\",{if (((_this select 1) find \"wheel\" != -1) and ((_this select 4==\"\") or (side (_this select 3) != teamPlayer)) and (!isPlayer driver (_this select 0))) then {0} else {(_this select 2)}}];\n\t\t\t};\n\t\t};\n\t};\n}\nelse\n{\n\tif (_typeX in vehPlanes) then\n\t{\n\t\t_veh addEventHandler [\"GetIn\",\n\t\t{\n\t\t\tif (_this select 1 != \"driver\") exitWith {};\n\t\t\t_unit = _this select 2;\n\t\t\tif ((!isPlayer _unit) and (_unit getVariable [\"spawner\",false]) and (side group _unit == teamPlayer)) then\n\t\t\t{\n\t\t\t\tmoveOut _unit;\n\t\t\t\t[\"General\", \"Only Humans can pilot an air vehicle\"] call A3A_fnc_customHint;\n\t\t\t};\n\t\t}];\n\n\t\tif (_veh isKindOf \"Helicopter\") then\n\t\t{\n\t\t\tif (_typeX in vehTransportAir) then\n\t\t\t{\n\t\t\t\t_veh setVariable [\"within\",true];\n\t\t\t\t_veh addEventHandler [\"GetOut\", {private [\"_veh\"];_veh = _this select 0; if ((isTouchingGround _veh) and (isEngineOn _veh)) then {if (side (_this select 2) != teamPlayer) then {if (_veh getVariable \"within\") then {_veh setVariable [\"within\",false]; [_veh] call A3A_fnc_smokeCoverAuto}}}}];\n\t\t\t\t_veh addEventHandler [\"GetIn\", {private [\"_veh\"];_veh = _this select 0; if (side (_this select 2) != teamPlayer) then {_veh setVariable [\"within\",true]}}];\n\t\t\t};\n\t\t};\n\t}\n\telse\n\t{\n\t\tif (_veh isKindOf \"StaticWeapon\") then\n\t\t{\n\t\t\t_veh setCenterOfMass [(getCenterOfMass _veh) vectorAdd [0, 0, -1], 0];\n\t\t\tif ((not (_veh in staticsToSave)) and (side gunner _veh != teamPlayer)) then\n\t\t\t{\n\t\t\t\tif (activeGREF and ((_typeX == staticATteamPlayer) or (_typeX == staticAAteamPlayer))) then {[_veh,\"moveS\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_veh]} else {[_veh,\"steal\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_veh]};\n\t\t\t};\n\t\t\tif (_typeX == SDKMortar) then\n\t\t\t{\n\t\t\t\tif (!isNull gunner _veh) then\n\t\t\t\t{\n\t\t\t\t\t[_veh,\"steal\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_veh];\n\t\t\t\t};\n\t\t\t\t_veh addEventHandler [\"Fired\",\n\t\t\t\t{\n\t\t\t\t\t_mortarX = _this select 0;\n\t\t\t\t\t_dataX = _mortarX getVariable [\"detection\",[position _mortarX,0]];\n\t\t\t\t\t_positionX = position _mortarX;\n\t\t\t\t\t_chance = _dataX select 1;\n\t\t\t\t\tif ((_positionX distance (_dataX select 0)) < 300) then\n\t\t\t\t\t{\n\t\t\t\t\t\t_chance = _chance + 2;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_chance = 0;\n\t\t\t\t\t};\n\t\t\t\t\tif (random 100 < _chance) then\n\t\t\t\t\t{\n\t\t\t\t\t\t{if ((side _x == Occupants) or (side _x == Invaders)) then {_x reveal [_mortarX,4]}} forEach allUnits;\n\t\t\t\t\t\tif (_mortarX distance posHQ < 300) then\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!([\"DEF_HQ\"] call BIS_fnc_taskExists)) then\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_LeaderX = leader (gunner _mortarX);\n\t\t\t\t\t\t\t\tif (!isPlayer _LeaderX) then\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t[[],\"A3A_fnc_attackHQ\"] remoteExec [\"A3A_fnc_scheduler\",2];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif ([_LeaderX] call A3A_fnc_isMember) then {[[],\"A3A_fnc_attackHQ\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_bases = airportsX select {(getMarkerPos _x distance _mortarX < distanceForAirAttack) and ([_x,true] call A3A_fnc_airportCanAttack) and (sidesX getVariable [_x,sideUnknown] != teamPlayer)};\n\t\t\t\t\t\t\tif (count _bases > 0) then\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_base = [_bases,_positionX] call BIS_fnc_nearestPosition;\n\t\t\t\t\t\t\t\t_sideX = sidesX getVariable [_base,sideUnknown];\n\t\t\t\t\t\t\t\t[[getPosASL _mortarX,_sideX,\"Normal\",false],\"A3A_fnc_patrolCA\"] remoteExec [\"A3A_fnc_scheduler\",2];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t_mortarX setVariable [\"detection\",[_positionX,_chance]];\n\t\t\t\t}];\n\t\t\t};\n\t\t};\n\t};\n};\n\nif (_side == civilian) then\n{\n\t_veh addEventHandler [\"HandleDamage\",{if (((_this select 1) find \"wheel\" != -1) and (_this select 4==\"\") and (!isPlayer driver (_this select 0))) then {0;} else {(_this select 2);};}];\n\t_veh addEventHandler [\"HandleDamage\", {\n\t\t_veh = _this select 0;\n\t\tif (side(_this select 3) == teamPlayer) then\n\t\t{\n\t\t\t_driverX = driver _veh;\n\t\t\tif (side group _driverX == civilian) then {_driverX leaveVehicle _veh};\n\t\t\t_veh removeEventHandler [\"HandleDamage\", _thisEventHandler];\n\t\t};\n\t}];\n};\n\n// EH behaviour:\n// GetIn/GetOut/Dammaged: Runs where installed, regardless of locality \n// Local: Runs where installed if target was local before or after the transition\n// HandleDamage/Killed: Runs where installed, only if target is local\n// MPKilled: Runs everywhere, regardless of target locality or install location\n\nif (_side != teamPlayer) then\n{\n\t// Vehicle stealing handler\n\t// When a rebel first enters a vehicle, fire capture function\n\t_veh addEventHandler [\"GetIn\", {\n\n\t\tparams [\"_veh\", \"_role\", \"_unit\"];\n\t\tif (side group _unit != teamPlayer) exitWith {};\t\t// only rebels can flip vehicles atm\n\t\tprivate _oldside = _veh getVariable [\"ownerSide\", teamPlayer];\n\t\tif (_oldside != teamPlayer) then\n\t\t{\n\t\t\t[3, format [\"%1 switching side from %2 to rebels\", typeof _veh, _oldside], \"fn_AIVEHinit\"] call A3A_fnc_log",
"[_veh, teamPlayer, true] call A3A_fnc_vehKilledOrCaptured;\n\t\t};\n\t\t_veh removeEventHandler [\"GetIn\", _thisEventHandler];\n\t}];\n};\n\n// Handler to prevent vehDespawner deleting vehicles for an hour after rebels exit them\n\n_veh addEventHandler [\"GetOut\", {\n\tparams [\"_veh\", \"_role\", \"_unit\"];\n\tif !(_unit isEqualType objNull) exitWith {\n\t\t[1, format [\"GetOut handler weird input: %1, %2, %3\", _veh, _role, _unit], \"fn_AIVEHinit\"] call A3A_fnc_log",
"[\"despawnBlockTime\", time + 3600];\t\t\t// despawner always launched locally\n\t};\n}];\n\n// Because Killed and MPKilled are both retarded, we use Dammaged\n\n_veh addEventHandler [\"Dammaged\", {\n\tparams [\"_veh\", \"_selection\", \"_damage\"];\n\tif (_damage >= 1 && _selection == \"\") then {\n\t\tprivate _killerSide = side group (_this select 5);\n\t\t[3, format [\"%1 destroyed by %2\", typeof _veh, _killerSide], \"fn_AIVEHinit\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_CIVinit.sqf": [
"[\"_unit\",\"_enemiesX\"];\n\n_unit = _this select 0;\n\n_unit setSkill 0;\n_unit forceAddUniform (selectRandom allCivilianUniforms);\n_unit disableAI \"TARGET\";\n_unit disableAI \"AUTOTARGET\";\n//Stops civilians from shouting out commands.\n[_unit, \"NoVoice\"] remoteExec [\"setSpeaker\", 0, _unit];\n\n_unit addEventHandler\n[\n\t\"HandleDamage\",\n\t{\n\t\tprivate _unit = _this select 0;\n\t\t_dam = _this select 2;\n\t\t_proy = _this select 4;\n\t\t_injurer = _this select 3;\n\t\tif(!isNil \"_injurer\" && isPlayer _injurer) then\n\t\t{\n\t\t\t_unit setVariable [\"injuredByPlayer\", _injurer, true];\n\t\t\t_unit setVariable [\"lastInjuredByPlayer\", time, true];\n\t\t};\n\t\tif (_proy == \"\") then\n\t\t{\n\t\t\tif ((_dam > 0.95) and (!isPlayer _injurer)) then {_dam = 0.9};\n\t\t};\n\t\t_dam\n\t}\n];\n_EHkilledIdx = _unit addEventHandler\n[\n\t\"killed\",\n\t{\n\t\t_victim = _this select 0;\n\t\t_killer = _this select 1;\n\t\tif (time - (_victim getVariable [\"lastInjuredByPlayer\", 0]) < 120) then\n\t\t{\n\t\t\t_killer = _victim getVariable [\"injuredByPlayer\", _killer];\n\t\t};\n\t\tif (isNull _killer) then\n\t\t{\n\t\t\t_killer\t= _victim;\n\t\t};\n\t\tif (_victim == _killer) then\n\t\t{\n\t\t\t_nul = [-1,-1,getPos _victim] remoteExec [\"A3A_fnc_citySupportChange\",2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (isPlayer _killer) then\n\t\t\t{\n\t\t\t\tif (typeOf _victim == \"C_man_w_worker_F\") then {_killer addRating 1000};\n\t\t\t\t[-10,_killer] call A3A_fnc_playerScoreAdd;\n\t\t\t};\n\t\t\t_multiplier = 1;\n\t\t\tif (typeOf _victim == \"C_journalist_F\") then {_multiplier = 3};\n\t\t\t//Must be group, in case they're undercover.\n\t\t\tif (side group _killer == teamPlayer) then\n\t\t\t{\n                [\n                    3,\n                    \"Rebels killed a civilian\",\n                    \"aggroEvent\",\n                    true\n                ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_NATOinit.sqf": [
"[\"_unit\", [\"_marker\", \"\"], \"_isSpawner\"];\n\n/*  Inits the given unit with all needed data, flags and weapons\n*   Params:\n*       _unit : OBJECT : The unit that needs to be initialized\n*       _marker : STRING : The name of the marker (default \"\")\n*       _isSpawner : BOOL : (Optional) Whether the unit should be made a spawner, otherwise automatic\n*\n*   Returns:\n*       Nothing\n*/\n\n//TODO we may want to rename that file to AIinit or something\nprivate _fileName = \"NATOinit\";\n\nif ((isNil \"_unit\") || (isNull _unit)) exitWith\n{\n    [1, format [\"Bad init parameter: %1\", _this], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_cleanserVeh.sqf": [
"[\"_veh\"];\n\nsleep 5;\n\nif (isNull _veh) exitWith {\n\t[3, format [\"%1 is null on spawn\", typeof _veh], _filename] call A3A_fnc_log",
"[3, format [\"%1 destroyed on spawn\", typeof _veh], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_createCIV.sqf": [
"[\"_markerX\",\"_dataX\",\"_numCiv\",\"_numVeh\",\"_roads\",\"_prestigeOPFOR\",\"_prestigeBLUFOR\",\"_civs\",\"_groups\",\"_vehiclesX\",\"_civsPatrol\",\"_groupsPatrol\",\"_vehPatrol\",\"_typeCiv\",\"_typeVehX\",\"_dirVeh\",\"_groupX\",\"_size\",\"_road\",\"_typeVehX\",\"_dirVeh\",\"_positionX\",\"_area\",\"_civ\",\"_veh\",\"_roadcon\",\"_pos\",\"_p1\",\"_p2\",\"_mrkMar\",\"_burst\",\"_groupP\",\"_wp\",\"_wp1\"];\n\n_markerX = _this select 0;\n\nif (_markerX in destroyedSites) exitWith {};\n\n_dataX = server getVariable _markerX;\n\n_numCiv = _dataX select 0;\n_numVeh = _dataX select 1;\n//_roads = _dataX select 2;\n_roads = roadsX getVariable [_markerX, []];\nif (count _roads == 0) then {\n\t[1, format [\"Roads not found for marker %1\", _markerX], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_createQRF.sqf": [
"[\"_target\", \"_source\", \"_sideX\", \"_vehicleCount\", \"_landAttack\", \"_typeOfAttack\"];\n\n[2, format [\"Spawning CA. Target:%1, Source:%2, Side:%3, Count:%4, Land:%5, Type:%6\", _target, _source, _sideX, _vehicleCount, _landAttack, _typeOfAttack], _filename] call A3A_fnc_log",
"[_target,sideUnknown] == teamPlayer) then { _isRebelMarker = true };\n};\n\n\nprivate _soldiers = [];\nprivate _vehiclesX = [];\nprivate _groups = [];\nprivate _roads = [];\n\nif (_landAttack) then\n{\n\tprivate _pos = [];\n\tprivate _dir = 0;\n\tif (_source in airportsX) then\n\t{\n\t\t[_source,30] call A3A_fnc_addTimeForIdle;\n\t\tprivate _spawnPoint = server getVariable (format [\"spawn_%1\", _source]);\n\t\t_pos = getMarkerPos _spawnPoint;\n\t\t_dir = markerDir _spawnPoint;\n\t}\n\telse\n\t{\n\t\t[_source,60] call A3A_fnc_addTimeForIdle;\n\t\tprivate _spawnPoint = [_posOrigin] call A3A_fnc_findNearestGoodRoad;\n\t\t_pos = position _spawnPoint;\n\t\t_dir = getDir _spawnPoint;\n\t};\n\n\tprivate _vehPool = [_sideX, [\"Air\"]] call A3A_fnc_getVehiclePoolForQRFs;\n    if(count _vehPool == 0) then\n    {\n        if(_sideX == Occupants) then\n        {\n            {\n                _vehPool pushBack _x;\n                _vehPool pushBack 5;\n            } forEach (vehNATOTrucks + vehNATOLightArmed);\n        }\n        else\n        {\n            {\n                _vehPool pushBack _x;\n                _vehPool pushBack 5;\n            } forEach (vehCSATTrucks + vehCSATLightArmed);\n        };\n    };\n\tif (_typeOfAttack == \"Air\") then {\n\t\tprivate _aaType = if (_sideX == Occupants) then {vehNATOAA} else {vehCSATAA};\n\t\tif ([_aaType] call A3A_fnc_vehAvailable) then { _vehPool append [_aaType, 30] };\n\t};\n\tif (_typeOfAttack == \"Tank\") then {\n\t\tprivate _tankType = if (_sideX == Occupants) then {vehNATOTank} else {vehCSATTank};\n\t\tif ([_tankType] call A3A_fnc_vehAvailable) then { _vehPool append [_tankType, 30] };\n\t};\n\n\t_road = [_posDest] call A3A_fnc_findNearestGoodRoad;\n\t_landPosBlacklist = [];\n\n\tfor \"_i\" from 1 to _vehicleCount do\n\t{\n\t\t_typeVehX = selectRandomWeighted _vehPool;\n\t\t_timeOut = 0;\n\t\t_pos = _pos findEmptyPosition [0,100,_typeVehX];\n\t\twhile {_timeOut < 60} do\n\t\t{\n\t\t\tif (count _pos > 0) exitWith {};\n\t\t\t_timeOut = _timeOut + 1;\n\t\t\t_pos = _pos findEmptyPosition [0,100,_typeVehX];\n\t\t\tsleep 1;\n\t\t};\n\t\tif (count _pos == 0) then {_pos = if (_indexX == -1) then {getMarkerPos _spawnPoint} else {position _spawnPoint}};\n\t\t_vehicle=[_pos, _dir,_typeVehX, _sideX] call bis_fnc_spawnvehicle;\n\n\t\t_veh = _vehicle select 0;\n\t\t_vehCrew = _vehicle select 1;\n\t\t{[_x] call A3A_fnc_NATOinit} forEach _vehCrew;\n\t\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t\t_groupVeh = _vehicle select 2;\n\t\t_soldiers = _soldiers + _vehCrew;\n\t\t_groups pushBack _groupVeh;\n\t\t_vehiclesX pushBack _veh;\n\t\t_landPos = [_posDest,_pos,false,_landPosBlacklist] call A3A_fnc_findSafeRoadToUnload;\n\t\tif ((not(_typeVehX in vehTanks)) and (not(_typeVehX in vehAA))) then\n\t\t{\n\t\t\t_landPosBlacklist pushBack _landPos;\n\t\t\t_typeGroup = if (_typeOfAttack == \"Normal\") then\n\t\t\t{\n\t\t\t\t[_typeVehX,_sideX] call A3A_fnc_cargoSeats;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (_typeOfAttack == \"Air\") then\n\t\t\t\t{\n\t\t\t\t\tif (_sideX == Occupants) then {groupsNATOAA} else {groupsCSATAA}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (_sideX == Occupants) then {groupsNATOAT} else {groupsCSATAT}\n\t\t\t\t};\n\t\t\t};\n\t\t\t_groupX = [_posOrigin,_sideX,_typeGroup] call A3A_fnc_spawnGroup;\n\t\t\t{\n                _x assignAsCargo _veh;\n                _x moveInCargo _veh;\n                if (vehicle _x == _veh) then\n                {\n                    _soldiers pushBack _x;\n                    [_x] call A3A_fnc_NATOinit;\n                    _x setVariable [\"originX\",_source];\n                }\n                else\n                {\n                    deleteVehicle _x;\n                };\n            } forEach units _groupX;\n\t\t\tif (not(_typeVehX in vehTrucks)) then\n\t\t\t{\n\t\t\t\t{_x disableAI \"MINEDETECTION\"} forEach (units _groupVeh);\n\t\t\t\t(units _groupX) joinSilent _groupVeh;\n\t\t\t\tdeleteGroup _groupX;\n\t\t\t\t_groupVeh spawn A3A_fnc_attackDrillAI;\n\t\t\t\t[_source,_landPos,_groupVeh] call A3A_fnc_WPCreate;\n\t\t\t\t_Vwp0 = _groupVeh addWaypoint [_landPos,count (wayPoints _groupVeh)];\n\t\t\t\t_Vwp0 setWaypointType \"TR UNLOAD\";\n\t\t\t\t_Vwp1 = _groupVeh addWaypoint [_posDest, count (wayPoints _groupVeh)];\n\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t_Vwp1 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\t_Vwp1 setWaypointBehaviour \"COMBAT\";\n\t\t\t\tprivate _typeName = if (_typeVehX in vehAPCs) then {\"APC\"} else {\"MRAP\"};\n\t\t\t\t[_veh, _typeName] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t_veh allowCrewInImmobile true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t(units _groupX) joinSilent _groupVeh;\n\t\t\t\tdeleteGroup _groupX;\n\t\t\t\t_groupVeh spawn A3A_fnc_attackDrillAI;\n\t\t\t\tif (count units _groupVeh > 1) then {_groupVeh selectLeader (units _groupVeh select 1)};\n\t\t\t\t[_source,_landPos,_groupVeh] call A3A_fnc_WPCreate;\n\t\t\t\t/*\n\t\t\t\t_Vwp0 = (wayPoints _groupVeh) select ((count wayPoints _groupVeh) - 1);\n\t\t\t\t_Vwp0 setWaypointType \"GETOUT\";\n\t\t\t\t*/\n\t\t\t\t_Vwp0 = _groupVeh addWaypoint [_landPos, count (wayPoints _groupVeh)];\n\t\t\t\t_Vwp0 setWaypointType \"GETOUT\";\n\t\t\t\t_Vwp1 = _groupVeh addWaypoint [_posDest, count (wayPoints _groupVeh)];\n\t\t\t\t_Vwp1 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\tif (_isMarker) then\n\t\t\t\t{\n\t\t\t\t\tif ((count (garrison getVariable [_target, []])) < 4) then\n\t\t\t\t\t{\n\t\t\t\t\t\t_Vwp1 setWaypointType \"MOVE\";\n\t\t\t\t\t\t_Vwp1 setWaypointBehaviour \"AWARE\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t\t\t_Vwp1 setWaypointBehaviour \"COMBAT\";\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t\t_Vwp1 setWaypointBehaviour \"COMBAT\";\n\t\t\t\t};\n\t\t\t\t[_veh, \"Truck\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t{_x disableAI \"MINEDETECTION\"} forEach (units _groupVeh);\n\t\t\t[_source,_posDest,_groupVeh] call A3A_fnc_WPCreate;\n\t\t\t_Vwp0 = _groupVeh addWaypoint [_posDest, count (waypoints _groupVeh)];\n\t\t\t_Vwp0 setWaypointType \"SAD\";\n\t\t\t_Vwp0 setWaypointBehaviour \"AWARE\";\n\t\t\t_Vwp0 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\tprivate _typeName = if (_typeVehX in vehTanks) then {\"Tank\"} else {\"AA\"};\n\t\t\t[_veh, _typeName] spawn A3A_fnc_inmuneConvoy;\n\t\t\t_veh allowCrewInImmobile true;\n\t\t};\n\t\t[3, format [\"QRF vehicle %1 sent with %2 soldiers\", typeof _veh, count crew _veh], _filename] call A3A_fnc_log",
"[3, \"QRF reached maximum unit limit\", _filename] call A3A_fnc_log",
"[2, format [\"Land QRF performed on %1, type %2, veh count %3, troop count %4\", _target,_typeOfAttack,count _vehiclesX,count _soldiers], _filename] call A3A_fnc_log",
"[_source,20] call A3A_fnc_addTimeForIdle;\n\tprivate _vehPool = [_sideX, [\"LandVehicle\"]] call A3A_fnc_getVehiclePoolForQRFs;\n    if(count _vehPool == 0) then\n    {\n        if(_sideX == Occupants) then\n        {\n            {\n                _vehPool pushBack _x;\n                _vehPool pushBack 10;\n            } forEach vehNATOTransportHelis + [vehNATOPatrolHeli];\n        }\n        else\n        {\n            {\n                _vehPool pushBack _x;\n                _vehPool pushBack 10;\n            } forEach vehCSATTransportHelis + [vehCSATPatrolHeli];\n        };\n    };\n\tif (_typeOfAttack == \"Air\") then {\n\t\tprivate _vehType = if (_sideX == Occupants) then {vehNATOPlaneAA} else {vehCSATPlaneAA};\n\t\tif ([_vehType] call A3A_fnc_vehAvailable) then { _vehPool append [_vehType, 30] };\n\t};\n\tif (_typeOfAttack == \"Tank\") then {\n\t\tprivate _vehType = if (_sideX == Occupants) then {vehNATOPlane} else {vehCSATPlane};\n\t\tif ([_vehType] call A3A_fnc_vehAvailable) then { _vehPool append [_vehType, 30] };\n\t};\n\n\tfor \"_i\" from 1 to _vehicleCount do\n\t{\n\t\tprivate _typeVehX = selectRandomWeighted _vehPool;\n\t\t_pos = _posOrigin;\n\t\t_ang = 0;\n\t\t_size = [_source] call A3A_fnc_sizeMarker;\n\t\t_buildings = nearestObjects [_posOrigin, [\"Land_LandMark_F\",\"Land_runway_edgelight\"], _size / 2];\n\t\tif (count _buildings > 1) then\n\t\t{\n\t\t\t_pos1 = getPos (_buildings select 0);\n\t\t\t_pos2 = getPos (_buildings select 1);\n\t\t\t_ang = [_pos1, _pos2] call BIS_fnc_DirTo;\n\t\t\t_pos = [_pos1, 5,_ang] call BIS_fnc_relPos;\n\t\t};\n\t\tif (count _pos == 0) then {_pos = _posOrigin};\n\t\t_vehicle=[_pos, _ang + 90,_typeVehX, _sideX] call bis_fnc_spawnvehicle;\n\t\t_veh = _vehicle select 0;\n\t\tif (hasIFA) then {_veh setVelocityModelSpace [((velocityModelSpace _veh) select 0) + 0,((velocityModelSpace _veh) select 1) + 150,((velocityModelSpace _veh) select 2) + 50]};\n\t\t_vehCrew = _vehicle select 1;\n\t\t_groupVeh = _vehicle select 2;\n\t\t_soldiers append _vehCrew;\n\t\t_groups pushBack _groupVeh;\n\t\t_vehiclesX pushBack _veh;\n\t\t{[_x] call A3A_fnc_NATOinit} forEach units _groupVeh;\n\t\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t\tif (not (_typeVehX in vehTransportAir)) then\n\t\t{\n\t\t\t_Hwp0 = _groupVeh addWaypoint [_posDest, 0];\n\t\t\t_Hwp0 setWaypointBehaviour \"AWARE\";\n\t\t\t_Hwp0 setWaypointType \"SAD\";\n\t\t\t//[_veh,\"Air Attack\"] spawn A3A_fnc_inmuneConvoy;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_typeGroup = if (_typeOfAttack == \"Normal\") then\n\t\t\t{\n\t\t\t\t[_typeVehX,_sideX] call A3A_fnc_cargoSeats;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (_typeOfAttack == \"Air\") then\n\t\t\t\t{\n\t\t\t\t\tif (_sideX == Occupants) then {groupsNATOAA} else {groupsCSATAA}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (_sideX == Occupants) then {groupsNATOAT} else {groupsCSATAT}\n\t\t\t\t};\n\t\t\t};\n\t\t\t_groupX = [_posOrigin,_sideX,_typeGroup] call A3A_fnc_spawnGroup;\n\t\t\t//{_x assignAsCargo _veh;_x moveInCargo _veh; [_x] call A3A_fnc_NATOinit;_soldiers pushBack _x;_x setVariable [\"originX\",_source]} forEach units _groupX;\n\t\t\t{\n                _x assignAsCargo _veh;\n                _x moveInCargo _veh;\n                if (vehicle _x == _veh) then\n                {\n                    _soldiers pushBack _x;\n                    [_x] call A3A_fnc_NATOinit;\n                    _x setVariable [\"originX\",_source];\n                }\n                else\n                {\n                    deleteVehicle _x;\n                };\n\t\t\t} forEach units _groupX;\n\t\t\t_groups pushBack _groupX;\n\t\t\t_landpos = [];\n\t\t\t_proceed = true;\n\t\t\tif (_isMarker) then\n\t\t\t{\n\t\t\t\tif ((_target in airportsX) or !(_veh isKindOf \"Helicopter\")) then\n\t\t\t\t{\n\t\t\t\t\t_proceed = false;\n\t\t\t\t\t[_veh,_groupX,_target,_source] spawn A3A_fnc_airdrop;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (_isRebelMarker) then\n\t\t\t\t\t{\n\t\t\t\t\t\tif (((count(garrison getVariable [_target,[]])) < 10) and (_typeVehX in vehFastRope)) then\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_proceed = false;\n                            //_groupX setVariable [\"mrkAttack\",_target];\n\t\t\t\t\t\t\t[_veh,_groupX,_posDest,_posOrigin,_groupVeh] spawn A3A_fnc_fastrope;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif !(_veh isKindOf \"Helicopter\") then\n\t\t\t\t{\n\t\t\t\t\t_proceed = false;\n\t\t\t\t\t[_veh,_groupX,_posDest,_source] spawn A3A_fnc_airdrop;\n\t\t\t\t};\n\t\t\t};\n\t\t\tif (_proceed) then\n\t\t\t{\n\t\t\t\t_landPos = [_posDest, 300, 550, 10, 0, 0.20, 0,[],[[0,0,0],[0,0,0]]] call BIS_fnc_findSafePos;\n\t\t\t\tif !(_landPos isEqualTo [0,0,0]) then\n\t\t\t\t{\n\t\t\t\t\t_landPos set [2, 0];\n\t\t\t\t\t_pad = createVehicle [\"Land_HelipadEmpty_F\", _landpos, [], 0, \"NONE\"];\n\t\t\t\t\t_vehiclesX pushBack _pad;\n\t\t\t\t\t_wp0 = _groupVeh addWaypoint [_landpos, 0];\n\t\t\t\t\t_wp0 setWaypointType \"TR UNLOAD\";\n\t\t\t\t\t_wp0 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (vehicle this) land 'GET OUT';[vehicle this] call A3A_fnc_smokeCoverAuto\"];\n\t\t\t\t\t_wp0 setWaypointBehaviour \"CARELESS\";\n\t\t\t\t\t_wp3 = _groupX addWaypoint [_landpos, 0];\n\t\t\t\t\t_wp3 setWaypointType \"GETOUT\";\n\t\t\t\t\t_wp3 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (group this) spawn A3A_fnc_attackDrillAI\"];\n\t\t\t\t\t_wp0 synchronizeWaypoint [_wp3];\n\t\t\t\t\t_wp4 = _groupX addWaypoint [_posDest, 1];\n\t\t\t\t\t_wp4 setWaypointType \"MOVE\";\n\t\t\t\t\t_wp4 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\t\t_wp2 = _groupVeh addWaypoint [_posOrigin, 1];\n\t\t\t\t\t_wp2 setWaypointType \"MOVE\";\n\t\t\t\t\t_wp2 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; deleteVehicle (vehicle this); {deleteVehicle _x} forEach thisList\"];\n\t\t\t\t\t[_groupVeh,1] setWaypointBehaviour \"AWARE\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (_typeVehX in vehFastRope) then\n\t\t\t\t\t{\n\t\t\t\t\t\t[_veh,_groupX,_posDest,_posOrigin,_groupVeh] spawn A3A_fnc_fastrope;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t[_veh,_groupX,_target,_source] spawn A3A_fnc_airdrop;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\tsleep 15;\n\t\t[3, format [\"QRF vehicle %1 sent with %2 soldiers\", typeof _veh, count crew _veh], _filename] call A3A_fnc_log",
"[3, \"QRF reached maximum unit limit\", _filename] call A3A_fnc_log",
"[2, format [\"Air QRF performed on %1, type %2, veh count %3, troop count %4\", _target,_typeOfAttack,count _vehiclesX,count _soldiers], _filename] call A3A_fnc_log",
"[_x] call A3A_fnc_canFight} count _soldiers) <= 0.25 * (count _soldiers);\n};\n\nif (_isMarker) then\n{\n\t_timeX = time + 3600;\n\t_size = [_target] call A3A_fnc_sizeMarker;\n\n\twaitUntil {sleep 5; (call _fnc_lowStrength) or (time > _timeX) or (sidesX getVariable [_target,sideUnknown] == _sideX) or (({[_x,_target] call A3A_fnc_canConquer} count _soldiers) > 3*({(side _x != _sideX) and (side _x != civilian) and ([_x,_target] call A3A_fnc_canConquer)} count allUnits))};\n\tif  ((({[_x,_target] call A3A_fnc_canConquer} count _soldiers) > 3*({(side _x != _sideX) and (side _x != civilian) and ([_x,_target] call A3A_fnc_canConquer)} count allUnits)) and (not(sidesX getVariable [_target,sideUnknown] == _sideX))) then\n\t{\n\t\t[_sideX,_target] remoteExec [\"A3A_fnc_markerChange\",2];\n\t\t[3, format [\"QRF from %1 to retake %2 has outnumbered the enemy, changing marker!\", _source, _target], _filename] call A3A_fnc_log",
"[_target,sideUnknown] == _sideX)) then\n\t{\n\t\t{_x doMove _posOrigin} forEach _soldiers;\n\t\tif (sidesX getVariable [_source,sideUnknown] == _sideX) then\n\t\t{\n\t\t\t_killZones = killZones getVariable [_source,[]];\n\t\t\t_killZones = _killZones + [_target,_target];\n\t\t\tkillZones setVariable [_source,_killZones,true];\n\t\t};\n\t\t[3, format [\"QRF from %1 to retake %2 has failed as the marker is not changed!\", _source, _target], _filename] call A3A_fnc_log",
"[distanceSPWN1,1,_posDest,teamPlayer] call A3A_fnc_distanceUnits) and !([distanceSPWN1,1,_posDest,_sideEnemy] call A3A_fnc_distanceUnits))}}\n\telse {waitUntil {sleep 5; (_timeX < time) or (call _fnc_lowStrength)}};\n\tif (call _fnc_lowStrength) then\n\t{\n\t\tprivate _nearMrk = [(resourcesX + factories + airportsX + outposts + seaports),_posDest] call BIS_fnc_nearestPosition;\n\t\t_killZones = killZones getVariable [_source,[]];\n\t\t_killZones pushBack _nearMrk;\n\t\tkillZones setVariable [_source,_killZones,true];\n\t\t[3, format [\"QRF from %1 on position %2 defeated\", _source, _target], _filename] call A3A_fnc_log",
"[3, format [\"QRF from %1 on position %2 despawned\", _source, _target], _filename] call A3A_fnc_log",
"[2, format [\"QRF on %1 finished\", _target], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_cycleSpawn.sqf": [
"[\"_marker\", \"_patrolMarker\", \"_flag\", \"_box\"];\n\nif(isNil \"_marker\") exitWith {diag_log \"CycleSpawn: No marker given!\"};\n\nprivate [\"_side\", \"_garrison\", \"_unitX\", \"_allSoldiers\", \"_allVehicles\", \"_allGroups\", \"_groupX\", \"_vehicleType\", \"_crewArray\", \"_cargoArray\", \"_skip\"];\n\n_side = sidesX getVariable [_marker, sideUnknown];\nif(_side == sideUnknown) exitWith {diag_log \"CycleSpawn: Marker side resulted in sideUnknown!\"};\n\ndiag_log \"CycleSpawn: Spawning in now!\";\n\n_garrison = [_marker] call A3A_fnc_getGarrison;\n_garCount = [_garrison, false] call A3A_fnc_countGarrison;\n_patrolSize = [_patrolMarker] call A3A_fnc_calculateMarkerArea;\n\n[_garrison, \"Garrison\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_findSpawnPosition.sqf": [
"[\"_marker\", \"_type\"];\n\n_result = getMarkerPos _marker;\n\n//diag_log format [\"Searching spawn position on %1 for %2\", _marker, _type];\n_spawns = spawner getVariable [format [\"%1_spawns\", _marker], -1];\nif(_spawns isEqualType -1) exitWith\n{\n  diag_log format [\"%1 does not have any spawn positions set!\", _marker];\n  -1;\n};\n//[_spawns, \"Spawnpoints\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_freeSpawnPositions.sqf": [
"[\"_marker\"];\n\n/* Unlocks all locked vehicle slots of a marker\n*****/\n\n_spawns = spawner getVariable [format [\"%1_spawns\", _marker], [[],[],[],[]]];\nif(_spawns isEqualTo [[],[],[],[]]) exitWith\n{\n  diag_log format [\"Marker %1 has no spawn places defined!\", _marker];\n};\n\ndiag_log format [\"Logging spawn places of %1\", _marker];\n[_spawns, \"Spawn places\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_invaderPunish.sqf": [
"[\"_posOrigin\",\"_typeGroup\",\"_nameOrigin\",\"_markTsk\",\"_wp1\",\"_soldiers\",\"_landpos\",\"_pad\",\"_vehiclesX\",\"_wp0\",\"_wp3\",\"_wp4\",\"_wp2\",\"_groupX\",\"_groups\",\"_typeAirVehicle\",\"_vehicle\",\"_pilots\",\"_rnd\",\"_resourcesAAF\",\"_nVeh\",\"_radiusX\",\"_roads\",\"_Vwp1\",\"_tanksX\",\"_road\",\"_veh\",\"_vehCrew\",\"_groupVeh\",\"_Vwp0\",\"_size\",\"_Hwp0\",\"_groupX1\",\"_uav\",\"_groupUAV\",\"_uwp0\",\"_tsk\",\"_vehicle\",\"_soldierX\",\"_pilot\",\"_attackDestination\",\"_posDestination\",\"_prestigeCSAT\",\"_base\",\"_airportX\",\"_nameDestination\",\"_missionExpireTime\",\"_soldiersSpawned\",\"_nul\",\"_pos\",\"_timeOut\"];\n_attackDestination = _this select 0;\n_attackOrigin = _this select 1;\nbigAttackInProgress = true;\npublicVariable \"bigAttackInProgress\";\n_posDestination = getMarkerPos _attackDestination;\n_posOrigin = getMarkerPos _attackOrigin;\n_groups = [];\n_soldiers = [];\n_pilots = [];\n_vehiclesX = [];\n_civilians = [];\n\ndiag_log format [\"[Antistasi] Launching CSAT Punish Against %1 from %2 (CSATpunish.sqf)\", _attackDestination, _attackOrigin];\n\n_nameDestination = [_attackDestination] call A3A_fnc_localizar;\n[[teamPlayer,civilian,Occupants],\"invaderPunish\",[format [\"%2 is attacking innocent civilians in %1! Defend the city at all costs\",_nameDestination,nameInvaders],format [\"%1 Punishment\",nameInvaders],_attackDestination],getMarkerPos _attackDestination,false,0,true,\"Defend\",true] call BIS_fnc_taskCreate;\n\n_nul = [_attackOrigin,_attackDestination,Invaders] spawn A3A_fnc_artillery;\nprivate _sideTarget = if (sidesX getVariable [_attackDestination,sideUnknown] == Occupants) then {Occupants} else {teamPlayer};\n_missionExpireTime = time + 3600;\n\nprivate _invaderAirTransport = vehCSATTransportHelis + vehCSATTransportPlanes;\n\nfor \"_i\" from 1 to 3 do {\n\t_typeAirVehicle = if (_i != 3) then {selectRandom (vehCSATAir select {[_x] call A3A_fnc_vehAvailable})} else {selectRandom (_invaderAirTransport select {[_x] call A3A_fnc_vehAvailable})};\n\t_timeOut = 0;\n\t_pos = _posOrigin findEmptyPosition [0,100,_typeAirVehicle];\n\twhile {_timeOut < 60} do {\n\t\tif (count _pos > 0) exitWith {};\n\t\t_timeOut = _timeOut + 1;\n\t\t_pos = _posOrigin findEmptyPosition [0,100,_typeAirVehicle];\n\t\tsleep 1;\n\t};\n\tif (count _pos == 0) then {_pos = _posOrigin};\n\tprivate _spawnResult = [_pos, 0, _typeAirVehicle, Invaders] call bis_fnc_spawnvehicle;\n\tprivate _veh = _spawnResult select 0;\n\tprivate _vehCrew = _spawnResult select 1;\n\t{[_x] call A3A_fnc_NATOinit} forEach _vehCrew;\n\t[_veh, Invaders] call A3A_fnc_AIVEHinit;\n\t_groupVeh = _spawnResult select 2;\n\t_pilots append _vehCrew;\n\t_groups pushBack _groupVeh;\n\t_vehiclesX pushBack _veh;\n\n\t//If spawning a plane, it needs moving into the air.\n\tif (_typeAirVehicle isKindOf \"Plane\") then {\n\t\t_veh setDir ((getDir _veh) + (_veh getRelDir _posDestination));\n\t\t_veh setPos (getPos _veh vectorAdd [0, 0, 300]);\n\t\t_veh setVelocityModelSpace (velocityModelSpace _veh vectorAdd [0, 150, 10]);\n\t};\n\n\t//If we're an attack vehicle.\n\tif (not(_typeAirVehicle in _invaderAirTransport)) then {\n\t\t_wp1 = _groupVeh addWaypoint [_posDestination, 0];\n\t\t_wp1 setWaypointType \"SAD\";\n\t\t//[_veh,\"Air Attack\"] spawn A3A_fnc_inmuneConvoy;\n\t} else {\n\t\t{_x setBehaviour \"CARELESS\";} forEach units _groupVeh;\n\t\t_typeGroup = [_typeAirVehicle,Invaders] call A3A_fnc_cargoSeats;\n\t\t_groupX = [_posOrigin, Invaders, _typeGroup] call A3A_fnc_spawnGroup;\n\t\t{_x assignAsCargo _veh;_x moveInCargo _veh; _soldiers pushBack _x; [_x] call A3A_fnc_NATOinit; _x setVariable [\"originX\",_attackOrigin]} forEach units _groupX;\n\t\t_groups pushBack _groupX;\n\t\t//[_veh,\"CSAT Air Transport\"] spawn A3A_fnc_inmuneConvoy;\n\n\t\tif (_typeAirVehicle isKindOf \"Plane\") then {\n\t\t\t[_veh,_groupX,_attackDestination,_attackOrigin] spawn A3A_fnc_airdrop;\n\t\t} else {\n\t\t\tif (not(_typeAirVehicle in vehFastRope)) then {\n\t\t\t\t_landPos = _posDestination getPos [(random 500) + 300, random 360];\n\t\t\t\t_landPos = [_landPos, 200, 350, 10, 0, 0.20, 0,[],[[0,0,0],[0,0,0]]] call BIS_fnc_findSafePos;\n\t\t\t\tif !(_landPos isEqualTo [0,0,0]) then {\n\t\t\t\t\t_landPos set [2, 0];\n\t\t\t\t\t_pad = createVehicle [\"Land_HelipadEmpty_F\", _landpos, [], 0, \"NONE\"];\n\t\t\t\t\t_vehiclesX pushBack _pad;\n\t\t\t\t\t_wp0 = _groupVeh addWaypoint [_landpos, 0];\n\t\t\t\t\t_wp0 setWaypointType \"TR UNLOAD\";\n\t\t\t\t\t_wp0 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (vehicle this) land 'GET OUT'\"];\n\t\t\t\t\t[_groupVeh,0] setWaypointBehaviour \"CARELESS\";\n\t\t\t\t\t_wp3 = _groupX addWaypoint [_landpos, 0];\n\t\t\t\t\t_wp3 setWaypointType \"GETOUT\";\n\t\t\t\t\t_wp0 synchronizeWaypoint [_wp3];\n\t\t\t\t\t_wp4 = _groupX addWaypoint [_posDestination, 1];\n\t\t\t\t\t_wp4 setWaypointType \"SAD\";\n\t\t\t\t\t_wp4 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\t\t_wp2 = _groupVeh addWaypoint [_posOrigin, 1];\n\t\t\t\t\t_wp2 setWaypointType \"MOVE\";\n\t\t\t\t\t_wp2 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; deleteVehicle (vehicle this); {deleteVehicle _x} forEach thisList\"];\n\t\t\t\t\t[_groupVeh,1] setWaypointBehaviour \"AWARE\";\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t{_x disableAI \"TARGET\"; _x disableAI \"AUTOTARGET\"} foreach units _groupVeh;\n\t\t\t\t[_veh,_groupX,_posDestination,_posOrigin,_groupVeh] spawn A3A_fnc_fastrope;\n\t\t\t};\n\t\t};\n\t};\n\tsleep 20;\n};\n\n_dataX = server getVariable _attackDestination;\n_numCiv = _dataX select 0;\n_numCiv = round (_numCiv /10);\nif (sidesX getVariable [_attackDestination,sideUnknown] == Occupants) then {[[_posDestination,Occupants,\"\",false],\"A3A_fnc_patrolCA\"] remoteExec [\"A3A_fnc_scheduler\",2]};\nif (_numCiv < 8) then {_numCiv = 8};\n\n_size = [_attackDestination] call A3A_fnc_sizeMarker;\n\n_groupCivil = createGroup _sideTarget;\n_groups pushBack _groupCivil;\n_typeUnit = if (_sideTarget == teamPlayer) then {SDKUnarmed} else {NATOUnarmed};\nfor \"_i\" from 0 to _numCiv do {\n\twhile {true} do {\n\t\t_pos = _posDestination getPos [random _size,random 360];\n\t\tif (!surfaceIsWater _pos) exitWith {};\n\t};\n\t_civ = [_groupCivil, _typeUnit,_pos, [],0,\"NONE\"] call A3A_fnc_createUnit;\n\t_civ forceAddUniform (selectRandom allCivilianUniforms);\n\t_rnd = random 100;\n\tif (_rnd < 90) then {\n\t\tif (_rnd < 25) then {\n\t\t\t[_civ, \"hgun_PDW2000_F\", 5, 0] call BIS_fnc_addWeapon;\n\t\t} else {\n\t\t\t[_civ, \"hgun_Pistol_heavy_02_F\", 5, 0] call BIS_fnc_addWeapon;\n\t\t};\n\t};\n\t_civilians pushBack _civ;\n\t[_civ] call A3A_fnc_civInit;\n\t_civ setSkill 0.5;\n\tsleep 0.5;\n};\n\n_nul = [leader _groupCivil, _attackDestination, \"AWARE\",\"SPAWNED\",\"NOVEH2\"] execVM \"scripts\\UPSMON.sqf\";//TODO need delete UPSMON link\n_soldiersSpawned = count _soldiers;\n\nif (tierWar >= 5) then {\n\tfor \"_i\" from 0 to round random 1 do {\n\t\tif ([vehCSATPlane] call A3A_fnc_vehAvailable) then {\n\t\t\tprivate _bombType = if (napalmEnabled) then {\"NAPALM\"} else {\"HE\"};\n\t\t\t_nul = [_attackDestination,Invaders,_bombType] spawn A3A_fnc_airstrike;\n\t\t\tsleep 30;\n\t\t};\n\t};\n};\n\nwaitUntil {sleep 5; (({not (captive _x)} count _soldiers) < ({captive _x} count _soldiers)) or ({alive _x} count _soldiers < round (_soldiersSpawned / 3)) or (({(_x distance _posDestination < _size*2) and (not(vehicle _x isKindOf \"Air\")) and (alive _x) and (!captive _x)} count _soldiers) > 6*({(alive _x) and (_x distance _posDestination < _size*2)} count _civilians)) or (time > _missionExpireTime)};\n\nif ((({not (captive _x)} count _soldiers) < ({captive _x} count _soldiers)) or ({alive _x} count _soldiers < round (_soldiersSpawned / 3)) or (time > _missionExpireTime)) then {\n\t{_x doMove [0,0,0]} forEach _soldiers;\n\t[\"invaderPunish\",[format [\"%2 is attacking innocent civilians in %1! Defend the city at all costs\",_nameDestination,nameInvaders],format [\"%1 Punishment\",nameInvaders],_attackDestination],getMarkerPos _attackDestination,\"SUCCEEDED\"] call A3A_fnc_taskUpdate;\n\tif ({(side _x == teamPlayer) and (_x distance _posDestination < _size * 2)} count allUnits >= {(side _x == _sideTarget) and (_x distance _posDestination < _size * 2)} count allUnits) then {\n\t\tif (sidesX getVariable [_attackDestination,sideUnknown] == Occupants) then {[-15,15,_posDestination] remoteExec [\"A3A_fnc_citySupportChange\",2]} else {[-5,15,_posDestination] remoteExec [\"A3A_fnc_citySupportChange\",2]};\n        [\n            3,\n            \"Rebels won a punishment mission\",\n            \"aggroEvent\",\n            true\n        ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_patrolCA.sqf": [
"[\"A3A_fnc_patrolCA\", 2];\t\t\t// fudge until the other calls are fixed up\n//\t[1, \"Server-only function miscalled\", _filename] call A3A_fnc_log",
"[\"_target\", \"_source\", \"_typeOfAttack\"];\nprivate _super = if (!isMultiplayer) then {false} else {_this select 3};\nprivate _forced = false;\nprivate _sideX = Occupants;\nprivate _posOrigin = [];\nprivate _posDest = [];\n\n[2, format [\"QRF requested. Target:%1, Source:%2, Type:%3, IsSuper:%4\",_target,_source,_typeOfAttack,_super], _filename] call A3A_fnc_log",
"[_target, false] call A3A_fnc_fogCheck < 0.3) exitWith {\n\t[2, format [\"PatrolCA on %1 cancelled due to heavy fog\",_target], _filename] call A3A_fnc_log",
"[_source,sideUnknown] == Invaders) then {_sideX = Invaders};\n\t_posOrigin = getMarkerPos _source;\n}\nelse\n{\n\t_sideX = _source;\n};\n\n// Check whether there's already a patrolCA active in the vicinity\nprivate _isMarker = false;\nprivate _exit = false;\nif (_target isEqualType \"\") then\n{\n\t// If the target is a marker, only consider other marker attacks\n\t_isMarker = true;\n\t_posDest = getMarkerPos _target;\n\tif (!_forced) then {if (_target in smallCAmrk) then {_exit = true}};\n}\nelse\n{\n\t// If the target is a position, consider both position and marker attacks\n\t_posDest = _target;\n\tprivate _nearX = [smallCApos,_target] call BIS_fnc_nearestPosition;\n\tif (_nearX distance _target < 500) exitWith {_exit = true};\n\n\tif (count smallCAmrk > 0) then\n\t{\n\t\t_nearX = [smallCAmrk,_target] call BIS_fnc_nearestPosition;\n\t\tif (getMarkerPos _nearX distance _target < 500) then {_exit = true};\n\t};\n};\n\nif (_exit) exitWith {\n\t[2, format [\"PatrolCA on %1 cancelled due to other CA in vicinity\",_target], _filename] call A3A_fnc_log",
"[_x,sideUnknown] == _sideX} count airportsX > 0)) then\n{\n\tprivate _plane = if (_sideX == Occupants) then {vehNATOPlane} else {vehCSATPlane};\n\tif !([_plane] call A3A_fnc_vehAvailable) exitWith {};\n\n\t// Government have much broader definition of \"friendlies\" than invaders do\n\tprivate _friendlies = if (_sideX == Occupants) then {allUnits select {(_x distance _posDest < 200) and (alive _x) and ((side (group _x) == _sideX) or (side (group _x) == civilian))}} else {allUnits select {(_x distance _posDest < 100) and ([_x] call A3A_fnc_canFight) and (side (group _x) == _sideX)}};\n\tif (count _friendlies == 0) then\n\t{\n\t\t// select ordnance to use\n\t\tprivate _bombType = if (napalmEnabled) then {\"NAPALM\"} else {\"HE\"};\t\t// anti-infantry default. why?\n\t\t{\n\t\t\tprivate _veh = vehicle _x;\n\t\t\tif (_veh isKindOf \"Tank\") exitWith {_bombType = \"HE\"};\n\t\t\tif (_veh != _x && !(_veh isKindOf \"StaticWeapon\")) then {_bombType = \"CLUSTER\"};\n\t\t} forEach _enemiesX;\n\n\t\t_exit = true;\n\t\t[_posDest, \"add\"] call A3A_fnc_updateCAMark;\n\t\t[_posDest, _sideX, _bombType] spawn A3A_fnc_airstrike;\t\t\t// should be scheduled\n\t\t[2, format [\"PatrolCA airstrike of type %1 sent to %2\", _bombType, _posDest], _filename] call A3A_fnc_log",
"[_posDest, \"remove\"] call A3A_fnc_updateCAMark;\n\t};\n};\nif (_exit) exitWith {};\n\n\n// maxUnits needs to be multiplied by the HC count here, as we're counting all units not just local\nprivate _maxUnits = (1 max (count hcArray)) * maxUnits;\nprivate _remUnitCount = _maxUnits - ({!(isPlayer _x) && (alive _x)} count allUnits);\nif (gameMode <3) then\n{\n\tprivate _sideCount = {!(isPlayer _x) and (alive _x) and (side group _x == _sideX)} count allUnits;\n\t_remUnitCount = _remUnitCount min (_maxUnits * 0.7 - _sideCount);\n};\n\nif (_remUnitCount < 5) exitWith {\n\t[2, format [\"PatrolCA on %1 cancelled because maximum unit count reached\", _target], _filename] call A3A_fnc_log",
"[_posDest,_sideX] call A3A_fnc_landThreatEval;\nif (!_forced) then\n{\n\tprivate _airportsX = airportsX select {(sidesX getVariable [_x,sideUnknown] == _sideX) and ([_x,true] call A3A_fnc_airportCanAttack) and (getMarkerPos _x distance2D _posDest < distanceForAirAttack)};\n\tif (hasIFA and (_threatEvalLand <= 15)) then {_airportsX = _airportsX select {(getMarkerPos _x distance2D _posDest < distanceForLandAttack)}};\n\tprivate _outposts = if (_threatEvalLand <= 15) then {outposts select {(sidesX getVariable [_x,sideUnknown] == _sideX) and ([_posDest,getMarkerPos _x] call A3A_fnc_isTheSameIsland) and (getMarkerPos _x distance _posDest < distanceForLandAttack)  and ([_x,true] call A3A_fnc_airportCanAttack)}} else {[]};\n\tprivate _bases = _airportsX + _outposts;\n\tif (_isMarker) then\n\t{\n\t\tif (_target in blackListDest) then { _bases = _bases - outposts };\n\t\t_bases = _bases - [_target];\n\t\t_bases = _bases select {({_x == _target} count (killZones getVariable [_x,[]])) < 3};\n\t}\n\telse\n\t{\n\t\tif (!_super) then\n\t\t{\n\t\t\tprivate _siteX = [(resourcesX + factories + airportsX + outposts + seaports),_posDest] call BIS_fnc_nearestPosition;\n\t\t\t_bases = _bases select {({_x == _siteX} count (killZones getVariable [_x,[]])) < 3};\n\t\t};\n\t};\n\tif (_bases isEqualTo []) exitWith {_exit = true};\n\n\t// Use closest base outside spawn range of rebels. If none, allow bases further than half spawn range.\n\tprivate _spawners = allUnits select { side group _x == teamPlayer && {_x getVariable [\"spawner\",false]} };\n\tprivate _closeMrk = \"\";\n\tprivate _closeDist = 1000000;\n\t{\n\t\tprivate _basePos = getMarkerPos _x;\n\t\tprivate _dist = _basePos distance2D _posDest;\n\t\tif (_dist < _closeDist) then {\n\t\t\tprivate _closeSpwn = _spawners inAreaArray [getMarkerPos _x, distanceSPWN, distanceSPWN];\n\t\t\tprivate _closeSpwn2 = _closeSpwn inAreaArray [getMarkerPos _x, distanceSPWN2, distanceSPWN2];\n\t\t\tif (count _closeSpwn2 > 0) exitWith {};\n\t\t\tif (count _closeSpwn > 0) then { _dist = distanceForLandAttack + _dist};\n\t\t\tif (_dist > _closeDist) exitWith {};\n\t\t\t_closeDist = _dist;\n\t\t\t_closeMrk = _x;\n\t\t};\n\t} forEach _bases;\n\n\tif (_closeMrk == \"\") exitWith {_exit = true};\n\t_source = _closeMrk;\n\t_posOrigin = getMarkerPos _closeMrk;\n};\n\nif (_exit) exitWith {\n\t[2, format [\"PatrolCA on %1 cancelled because no usable bases in vicinity\", _target], _filename] call A3A_fnc_log",
"[_posDest,_posOrigin] call A3A_fnc_isTheSameIsland) and (_threatEvalLand <= 15)) then {true} else {false};\n\n// Automatically determine attack type from enemy vehicles, if it was left blank\nif (_typeOfAttack == \"\") then\n{\n\t_typeOfAttack = \"Normal\";\n\t{\n\t\tif (vehicle _x != _x) then\n\t\t{\n\t\t\tprivate _veh = vehicle _x;\n\t\t\tif (_veh isKindOf \"Plane\") exitWith {_typeOfAttack = \"Air\"};\n\t\t\tif (_veh isKindOf \"Helicopter\") then\n\t\t\t{\n\t\t\t\t_weapons = getArray (configfile >> \"CfgVehicles\" >> (typeOf _veh) >> \"weapons\");\n\t\t\t\tif (_weapons isEqualType []) then\n\t\t\t\t{\n\t\t\t\t\tif (count _weapons > 1) then {_typeOfAttack = \"Air\"};\n\t\t\t\t};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (_veh isKindOf \"Tank\") then {_typeOfAttack = \"Tank\"};\n\t\t\t};\n\t\t};\n\t\tif (_typeOfAttack == \"Air\") exitWith {};\n\t} forEach _enemiesX;\n};\n\n\n// Determine vehicle count from aggression & attack type\nprivate _aggro = if(_sideX == Occupants) then {aggressionOccupants} else {aggressionInvaders};\nif (_isMarker && {sidesX getVariable [_target, sideUnknown] != teamPlayer}) then {_aggro = 100 - _aggro;};\nprivate _vehicleCount = 0.5 + random (1.5) + _aggro/33;\n\nif (_super) then { _vehicleCount = _vehicleCount + 2 };\n_vehicleCount = _vehicleCount + ((skillMult - 2) / 2);\t\t\t// skillMult range 1-3\nif (_sideX == Invaders) then { _vehicleCount = _vehicleCount * 1.2 };\nif !(_isMarker) then { _vehicleCount = _vehicleCount / 2 };\n\n_vehicleCount = (round (_vehicleCount)) max 1;\n[3, format [\"With %1 aggression, sending %2 vehicles\", _aggro, _vehicleCount], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_patrolReinf.sqf": [
"[\"_mrkDestination\",\"_mrkOrigin\",\"_numberX\",\"_sideX\",\"_typeGroup\",\"_typeVehX\",\"_indexX\",\"_spawnPoint\",\"_pos\",\"_timeOut\",\"_veh\",\"_groupX\",\"_landPos\",\"_Vwp0\",\"_posOrigin\",\"_land\",\"_pos1\",\"_pos2\"];\n\n_mrkDestination = _this select 0;\n_mrkOrigin = _this select 1;\n_numberX = _this select 2;\n_sideX = _this select 3;\n[2, format [\"Spawning PatrolReinf. Dest:%1, Orig:%2, Size:%3, Side: %4\",_mrkDestination,_mrkOrigin,_numberX,_sideX], _filename] call A3A_fnc_log",
"[_sideX] call A3A_fnc_remUnitCount < _numberX) exitWith {\n\t[2, \"Cancelling because maxUnits exceeded\", _filename] call A3A_fnc_log",
"[vehNATOPatrolHeli,vehCSATPatrolHeli]};\n\t//_vehPool = _vehPool select {(_x isKindOf \"Helicopter\") and (_x in vehFastRope)};\n\t_typeVehX = selectRandom _vehPool;\n};\n\n_pos = [];\n_veh = objNull;\n_groupX = grpNull;\nprivate _groupVeh = grpNull;\nprivate _landpad = objNull;\n\nif (_land) then\n{\n\t_indexX = airportsX find _mrkOrigin;\n\t_spawnPoint = server getVariable (format [\"spawn_%1\", _mrkOrigin]);\n\t_pos = getMarkerPos _spawnPoint;\n\t_timeOut = 0;\n\t_pos = _pos findEmptyPosition [0,100,_typeVehX];\n\twhile {_timeOut < 60} do\n\t{\n\t\tif (count _pos > 0) exitWith {};\n\t\t_timeOut = _timeOut + 1;\n\t\t_pos = _pos findEmptyPosition [0,100,_typeVehX];\n\t\tsleep 1;\n\t};\n\tif (count _pos == 0) then {_pos = getMarkerPos _spawnPoint};\n\t_veh = _typeVehX createVehicle _pos;\n\t_veh setDir (markerDir _spawnPoint);\n\t_groupX = [_pos,_sideX, _typeGroup,true,false] call A3A_fnc_spawnGroup;\n\t_groupX addVehicle _veh;\n\t{\n\t\tif (_x == leader _x) then {_x assignAsDriver _veh;_x moveInDriver _veh} else {_x assignAsCargo _veh;_x moveInCargo _veh};\n\n\t\tif (vehicle _x == _x) then\n\t\t{\n\t\t\tdeleteVehicle _x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t[_x] call A3A_fnc_NATOinit;\n\t\t};\n\t} forEach units _groupX;\n\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t[_veh,\"Inf Truck.\"] spawn A3A_fnc_inmuneConvoy;\n//\t_groupX spawn A3A_fnc_attackDrillAI;\n\t[_mrkOrigin,_posDestination,_groupX] call A3A_fnc_WPCreate;\n\t_Vwp0 = _groupX addWaypoint [_posDestination, 50];\n\t_Vwp0 setWaypointCompletionRadius 50;\n\t_Vwp0 setWaypointType \"GETOUT\";\n\t_Vwp1 = _groupX addWaypoint [_posDestination, 5];\n\t_Vwp1 setWaypointType \"MOVE\";\n\t}\nelse\n{\n\t_pos = _posOrigin;\n\t_ang = 0;\n\t_size = [_mrkOrigin] call A3A_fnc_sizeMarker;\n\t_buildings = nearestObjects [_posOrigin, [\"Land_LandMark_F\",\"Land_runway_edgelight\"], _size / 2];\n\tif (count _buildings > 1) then\n\t{\n\t\t_pos1 = getPos (_buildings select 0);\n\t\t_pos2 = getPos (_buildings select 1);\n\t\t_ang = [_pos1, _pos2] call BIS_fnc_DirTo;\n\t\t_pos = [_pos1, 5,_ang] call BIS_fnc_relPos;\n\t};\n\tif (count _pos == 0) then {_pos = _posOrigin};\n\n\t_vehicle=[_pos, _ang + 90,_typeVehX, _sideX] call bis_fnc_spawnvehicle;\n\t_veh = _vehicle select 0;\n\t_vehCrew = _vehicle select 1;\n\t_groupVeh = _vehicle select 2;\n\t{ [_x] call A3A_fnc_NATOinit } forEach units _groupVeh;\n\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\n\t_groupX = [_posOrigin,_sideX,_typeGroup,true,false] call A3A_fnc_spawnGroup;\n\t{\n\t\t_x assignAsCargo _veh;\n\t\t_x moveInCargo _veh;\n\t\tif (vehicle _x == _x) then\n\t\t{\n\t\t\tdeleteVehicle _x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t[_x] call A3A_fnc_NATOinit;\n\t\t};\n\t} forEach units _groupX;\n\t_landPos = if (_typeVehX isKindOf \"Helicopter\") then {[_posDestination, 0, 300, 10, 0, 0.20, 0,[],[[0,0,0],[0,0,0]]] call BIS_fnc_findSafePos} else {[0,0,0]};\n\tif !(_landPos isEqualTo [0,0,0]) then\n\t{\n\t\t_landPos set [2, 0];\n\t\t_landpad = createVehicle [\"Land_HelipadEmpty_F\", _landpos, [], 0, \"NONE\"];\n\t\t_wp0 = _groupVeh addWaypoint [_landpos, 0];\n\t\t_wp0 setWaypointType \"TR UNLOAD\";\n\t\t_wp0 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (vehicle this) land 'GET OUT'\"];\n\t\t_wp0 setWaypointBehaviour \"CARELESS\";\n\t\t_wp3 = _groupX addWaypoint [_landpos, 0];\n\t\t_wp3 setWaypointType \"GETOUT\";\n//\t\t_wp3 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (group this) spawn A3A_fnc_attackDrillAI\"];\n\t\t_wp0 synchronizeWaypoint [_wp3];\n\t\t_wp4 = _groupX addWaypoint [_posDestination, 5];\n\t\t_wp4 setWaypointType \"MOVE\";\n\t\t_wp2 = _groupVeh addWaypoint [_posOrigin, 1];\n\t\t_wp2 setWaypointType \"MOVE\";\n\t\t_wp2 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; deleteVehicle (vehicle this); {deleteVehicle _x} forEach thisList\"];\n\t\t[_groupVeh,1] setWaypointBehaviour \"AWARE\";\n\t}\n\telse\n\t{\n\t\tif (_typeVehX in vehFastRope) then\n\t\t{\n\t\t\t[_veh,_groupX,_posDestination,_posOrigin,_groupVeh,true] spawn A3A_fnc_fastrope;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t[_veh,_groupX,_posDestination,_mrkOrigin,true] spawn A3A_fnc_airdrop;\n\t\t};\n\t};\n};\n\n[2, format [\"Spawn performed: Vehicle type %1 with %2 troops\", _typeVehX, count units _groupX], _filename] call A3A_fnc_log",
"[_veh] spawn A3A_fnc_VEHdespawner;\n[_groupVeh] spawn A3A_fnc_groupDespawner;\n\n\nprivate _units = (units _groupX) select { alive _x };\nif (count _units == 0 || time > _timeout || _sideX != (sidesX getVariable _mrkDestination)) exitWith\n{\n\t// Failure case, RTB and add to killzones\n\n\tprivate _wp = _groupX addWaypoint [_posOrigin, 50];\n\t_wp setWaypointType \"MOVE\";\n\t_groupX setCurrentWaypoint _wp;\n\t[_groupX] spawn A3A_fnc_groupDespawner;\n\n\tif (_sideX == (sidesX getVariable _mrkOrigin)) then {\n\t\tprivate _killzones = killZones getVariable [_mrkOrigin,[]];\n\t\t_killzones pushBack _mrkDestination;\n\t\tkillZones setVariable [_mrkOrigin,_killzones,true];\n\t};\n\n\t[2, format [\"Reinf on %1 failed, returning with %2 units\", _mrkDestination, count units _groupX], _filename] call A3A_fnc_log",
"[2, format [\"Reinf on %1 successful, adding %2 units\", _mrkDestination, count units _groupX], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_updateCAMark.sqf": [
"[1, \"Server-only function miscalled\", _filename] call A3A_fnc_log",
"[\"_target\", \"_operation\"];\n\nif (_target isEqualType \"\") then {\n\t[3, format [\"%1 CA mark for marker %2\", _operation, _target], _filename] call A3A_fnc_log",
"[_target] };\n} else { \n\t[3, format [\"%1 CA mark for position %2\", _operation, _target], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_vehKilledOrCaptured.sqf": [
"[\"_veh\", \"_sideEnemy\", [\"_captured\", false]];\n\nprivate _type = typeof _veh;\nprivate _side = _veh getVariable [\"ownerSide\", teamPlayer];\t\t\t// default because Zeus\n\nif (_captured && (_side == _sideEnemy)) exitWith {};\n\nprivate _act = if (_captured) then {\"captured\"} else {\"destroyed\"};\n[3, format [\"%1 of %2 %3 by %4\", _type, _side, _act, _sideEnemy], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/CREATE/fn_wavedCA.sqf": [
"[\"_posOrigin\",\"_typeGroup\",\"_nameOrigin\",\"_markTsk\",\"_wp1\",\"_soldiers\",\"_landpos\",\"_pad\",\"_vehiclesX\",\"_wp0\",\"_wp3\",\"_wp4\",\"_wp2\",\"_groupX\",\"_groups\",\"_typeVehX\",\"_vehicle\",\"_heli\",\"_heliCrew\",\"_groupHeli\",\"_pilots\",\"_rnd\",\"_resourcesAAF\",\"_nVeh\",\"_radiusX\",\"_roads\",\"_Vwp1\",\"_road\",\"_veh\",\"_vehCrew\",\"_groupVeh\",\"_Vwp0\",\"_size\",\"_Hwp0\",\"_groupX1\",\"_uwp0\",\"_tsk\",\"_vehicle\",\"_soldierX\",\"_pilot\",\"_mrkDestination\",\"_posDestination\",\"_prestigeCSAT\",\"_mrkOrigin\",\"_airportX\",\"_nameDest\",\"_timeX\",\"_solMax\",\"_nul\",\"_costs\",\"_typeX\",\"_threatEvalAir\",\"_threatEvalLand\",\"_pos\",\"_timeOut\",\"_sideX\",\"_waves\",\"_countX\",\"_tsk1\",\"_spawnPoint\",\"_vehPool\", \"_airportIndex\"];\n\nprivate _fileName = \"wavedCA\";\n\nbigAttackInProgress = true;\npublicVariable \"bigAttackInProgress\";\n_firstWave = true;\n_mrkDestination = _this select 0;\n//_mrkOrigin can be an Airport or Carrier\n_mrkOrigin = _this select 1;\n_waves = _this select 2;\nif (_waves <= 0) then {_waves = -1};\n_size = [_mrkDestination] call A3A_fnc_sizeMarker;\n_tsk = \"\";\n_tsk1 = \"\";\n_posDestination = getMarkerPos _mrkDestination;\n_posOrigin = getMarkerPos _mrkOrigin;\n\ndiag_log format [\"[Antistasi] Spawning Waved Attack Against %1 from %2 with %3 waves (wavedCA.sqf)\", _mrkDestination, _mrkOrigin,\t_waves];\n\n_groups = [];\n_soldiersTotal = [];\n_pilots = [];\n_vehiclesX = [];\n_forced = [];\n\n_nameDest = [_mrkDestination] call A3A_fnc_localizar;\n_nameOrigin = [_mrkOrigin] call A3A_fnc_localizar;\n\n_sideX = sidesX getVariable [_mrkOrigin,sideUnknown];\n_sideTsk = [teamPlayer,civilian,Invaders];\n_sideTsk1 = [Occupants];\n_nameENY = nameOccupants;\n//_config = cfgNATOInf;\nif (_sideX == Invaders) then\n\t{\n\t_nameENY = nameInvaders;\n\t//_config = cfgCSATInf;\n\t_sideTsk = [teamPlayer,civilian,Occupants];\n\t_sideTsk1 = [Invaders];\n\t};\n_isSDK = if (sidesX getVariable [_mrkDestination,sideUnknown] == teamPlayer) then {true} else {false};\n_SDKShown = false;\nif (_isSDK) then\n\t{\n\t_sideTsk = [teamPlayer,civilian,Occupants,Invaders] - [_sideX];\n\t}\nelse\n\t{\n\tif (not(_mrkDestination in _forced)) then {_forced pushBack _mrkDestination};\n\t};\n\n//forcedSpawn = forcedSpawn + _forced; publicVariable \"forcedSpawn\";\nforcedSpawn pushBack _mrkDestination; publicVariable \"forcedSpawn\";\ndiag_log format [\"%1: [Antistasi] | INFO | Side Attacker:%2, Side Defender: %3\",servertime,_sideX,_isSDK];\n_nameDest = [_mrkDestination] call A3A_fnc_localizar;\n\n[_sideTsk,\"rebelAttack\",[format [\"%2 Is attacking from the %1. Intercept them or we may loose a sector\",_nameOrigin,_nameENY],format [\"%1 Attack\",_nameENY],_mrkOrigin],getMarkerPos _mrkOrigin,false,0,true,\"Defend\",true] call BIS_fnc_taskCreate;\n[_sideTsk1,\"rebelAttackPVP\",[format [\"We are attacking %2 from the %1. Help the operation if you can\",_nameOrigin,_nameDest],format [\"%1 Attack\",_nameENY],_mrkDestination],getMarkerPos _mrkDestination,false,0,true,\"Attack\",true] call BIS_fnc_taskCreate;\n//_tsk = [\"rebelAttack\",_sideTsk,[format [\"%2 Is attacking from the %1. Intercept them or we may loose a sector\",_nameOrigin,_nameENY],format [\"%1 Attack\",_nameENY],_mrkOrigin],getMarkerPos _mrkOrigin,\"CREATED\",10,true,true,\"Defend\"] call BIS_fnc_setTask;\n//missionsX pushbackUnique \"rebelAttack\"; publicVariable \"missionsX\";\n//_tsk1 = [\"rebelAttackPVP\",_sideTsk1,[format [\"We are attacking %2 from the %1. Help the operation if you can\",_nameOrigin,_nameDest],format [\"%1 Attack\",_nameENY],_mrkDestination],getMarkerPos _mrkDestination,\"CREATED\",10,true,true,\"Attack\"] call BIS_fnc_setTask;\n\n// Use fixed aggro value for non-rebel targets for the moment\nprivate _aggro = if (_sideX == Occupants) then {aggressionOccupants} else {aggressionInvaders};\nif !(_isSDK) then {_aggro = 100 - _aggro;};\n\n_timeX = time + 3600;\n\nprivate _vehPoolLand = [];\nprivate _vehPoolAirSupport = [];\nprivate _vehPoolAirTransport = [];\n\n// unlimited vehicle types, for later use\nprivate _typePatrolHeli = if (_sideX == Occupants) then {vehNATOPatrolHeli} else {vehCSATPatrolHeli};\nprivate _typesTruck = if (_sideX == Occupants) then {vehNATOTrucks} else {vehCSATTrucks};\nprivate _typesMRAP = if (_sideX == Occupants) then {vehNATOLightArmed} else {vehCSATLightArmed};\n\n// Just getting the variables out of scope\ncall {\n\tprivate _typesAPC = if (_sideX == Occupants) then {vehNATOAPC} else {vehCSATAPC};\n\tprivate _typeTank = if (_sideX == Occupants) then {vehNATOTank} else {vehCSATTank};\n\tprivate _typeAA = if (_sideX == Occupants) then {vehNATOAA} else {vehCSATAA};\n\n\t// Add up to 4 + tierWar APCs, selected randomly from available vehicles\n\t{\n\t\tprivate _vcount = floor (timer getVariable [_x, 0]);\n\t\tfor \"_i\" from 1 to (_vcount) do { _vehPoolLand pushBack _x };\n\t} forEach _typesAPC;\n\t_vehPoolLand = _vehPoolLand call BIS_fnc_arrayShuffle;\n\t_vehPoolLand resize ((4 + tierWar) min (count _vehPoolLand));\n\n\t// Add in war-tier capped tanks and AA vehicles\n\tprivate _tankCount = tierWar min (timer getVariable [_typeTank, 0]);\n\tfor \"_i\" from 1 to (_tankCount) do { _vehPoolLand pushBack _typeTank };\n\tprivate _aaCount = (ceil (tierWar / 3)) min (timer getVariable [_typeAA, 0]);\n\tfor \"_i\" from 1 to (_aaCount) do { _vehPoolLand pushBack _typeAA };\n\n\t// Add some trucks and MRAPs depending on war tier\n\tprivate _truckCount = 8 - ceil (tierWar / 2);\n\tfor \"_i\" from 1 to (_truckCount) do { _vehPoolLand pushBack (selectRandom _typesTruck) };\n\tprivate _mrapCount = 8 - ceil (tierWar / 2);\n\tfor \"_i\" from 1 to (_mrapCount) do { _vehPoolLand pushBack (selectRandom _typesMRAP) };\n\n\n\t// Separate air support from transports because air support can't conquer\n\n\tprivate _typePlane = if (_sideX == Occupants) then {vehNATOPlane} else {vehCSATPlane};\n\tprivate _typePlaneAA = if (_sideX == Occupants) then {vehNATOPlaneAA} else {vehCSATPlaneAA};\n\tprivate _typesAttackHelis = if (_sideX == Occupants) then {vehNATOAttackHelis} else {vehCSATAttackHelis};\n\tprivate _typesTransportPlanes = if (_sideX == Occupants) then {vehNATOTransportPlanes} else {vehCSATTransportPlanes};\n\tprivate _typesTransportHelis = if (_sideX == Occupants) then {vehNATOTransportHelis} else {vehCSATTransportHelis};\n\n\t// Add up to 2 + tierWar attack helis, selected randomly from available vehicles\n\t{\n\t\tprivate _vcount = floor (timer getVariable [_x, 0]);\n\t\tfor \"_i\" from 1 to (_vcount) do { _vehPoolAirSupport pushBack _x };\n\t} forEach _typesAttackHelis;\n\t_vehPoolAirSupport = _vehPoolAirSupport call BIS_fnc_arrayShuffle;\n\t_vehPoolAirSupport resize ((2 + tierWar) min (count _vehPoolAirSupport));\n\n\t// Plus a handful of fixed-wing aircraft\n\tprivate _planeCount = ceil (tierWar / 3);\n\tfor \"_i\" from 1 to (_planeCount) do { _vehPoolAirSupport pushBack _typePlane };\n\tfor \"_i\" from 1 to (_planeCount) do { _vehPoolAirSupport pushBack _typePlaneAA };\n\n\t// Use up to 8 + tierWar/2 air transports, randomly selected from available vehicles\n\t{\n\t\tprivate _vcount = floor (timer getVariable [_x, 0]);\n\t\tfor \"_i\" from 1 to (_vcount) do { _vehPoolAirTransport pushBack _x };\n\t} forEach (_typesTransportPlanes + _typesTransportHelis);\n\t_vehPoolAirTransport = _vehPoolAirTransport call BIS_fnc_arrayShuffle;\n\t_vehPoolAirTransport resize ((8 + tierWar/2) min (count _vehPoolAirTransport));\n\n\t// Fill out with patrol helis\n\tprivate _patrolHeliCount = 8 - ceil (tierWar / 2);\n\tfor \"_i\" from 1 to (_patrolHeliCount) do { _vehPoolAirTransport pushBack _typePatrolHeli };\n};\n\n[3, format [\"Land vehicle pool: %1\", _vehPoolLand], _filename] call A3A_fnc_log",
"[3, format [\"Air transport pool: %1\", _vehPoolAirTransport], _filename] call A3A_fnc_log",
"[3, format [\"Air support pool: %1\", _vehPoolAirSupport], _filename] call A3A_fnc_log",
"[];\nprivate _uav = objNull;\n\n// First wave: half air support, half either air transports or ground vehicles.\n// Subsequent waves: if live air support < half, top up. Otherwise, +1 air support. Fill out with transports/ground.\n// Only one UAV at a time, rebuild if destroyed instead of one vehicle.\n// Builds minimum 10 soldiers (air cargo or ground units) per wave.\n\nwhile {(_waves > 0)} do\n{\n\t_soldiers = [];\n\t_nVeh = 2 + random (2) + (_aggro / 25);\n\t_nVeh = _nVeh + (skillMult - 2);\n\tif (_firstWave) then { _nVeh = _nVeh + 2 };\n    _nVeh = (round (_nVeh)) max 1;\n\n    [3, format [\"Wave will contain %1 vehicles\", _nVeh], _fileName] call A3A_fnc_log",
"[];\n\t_pos = [];\n\t_dir = 0;\n\t_spawnPoint = \"\";\n\tif !(_mrkDestination in blackListDest) then\n\t{\n\t\t//Attempt land attack if origin is an airport in range\n\t\t_airportIndex = airportsX find _mrkOrigin;\n\t\tif (_airportIndex >= 0 and (_posOrigin distance _posDestination < distanceForLandAttack)\n\t\t\tand ([_posOrigin, _posDestination] call A3A_fnc_isTheSameIsland)) then\n\t\t{\n\t\t\t_spawnPoint = server getVariable (format [\"spawn_%1\", _mrkOrigin]);\n\t\t\t_pos = getMarkerPos _spawnPoint;\n\t\t\t_posOriginLand = _posOrigin;\n\t\t\t_dir = markerDir _spawnPoint;\n\t\t}\n\t\telse\n\t\t//Find an outpost we can attack from\n\t\t{\n\t\t\t_outposts = outposts select {\n\t\t\t\t(sidesX getVariable [_x,sideUnknown] == _sideX)\n\t\t\t\tand (getMarkerPos _x distance _posDestination < distanceForLandAttack)\n\t\t\t\tand {[_posDestination, getMarkerPos _x] call A3A_fnc_isTheSameIsland}\n\t\t\t\tand {[_x,false] call A3A_fnc_airportCanAttack}\t\t\t// checks idle, garrison size, spawndist2\n\t\t\t};\n\t\t\tif !(_outposts isEqualTo []) then\n\t\t\t{\n\t\t\t\t_outpost = selectRandom _outposts;\n\t\t\t\t_posOriginLand = getMarkerPos _outpost;\n\t\t\t\t//[_outpost,60] call A3A_fnc_addTimeForIdle;\n\t\t\t\t_spawnPoint = [_posOriginLand] call A3A_fnc_findNearestGoodRoad;\n\t\t\t\t_pos = position _spawnPoint;\n\t\t\t\t_dir = getDir _spawnPoint;\n\t\t\t};\n\t\t};\n\t};\n\tprivate _nVehLand = 0;\n\tif !(_posOriginLand isEqualTo []) then\n\t{\n\t\t_nVehLand = ceil (_nVeh / 2);\t\t\t// spawn >half ground, <half air\n\t\t_road = [_posDestination] call A3A_fnc_findNearestGoodRoad;\n\t\t_countX = 1;\n\t\t_landPosBlacklist = [];\n\t\twhile {_countX <= _nVehLand} do\n\t\t{\n\t\t\tif (count _vehPoolLand == 0) then {\n\t\t\t\t_vehPoolLand append _typesTruck;\n\t\t\t\t_vehPoolLand append _typesMRAP;\n\t\t\t\t_waves = 0;\n\t\t\t\t[2, \"Attack ran out of land vehicles\", _filename] call A3A_fnc_log",
"[3, format [\"Spawning vehicle type %1\", _typeVehX], _filename] call A3A_fnc_log",
"[0,100,_typeVehX];\n\t\t\t\twhile {_timeOut < 60} do\n\t\t\t\t{\n\t\t\t\t\tif (count _pos > 0) exitWith {};\n\t\t\t\t\t_timeOut = _timeOut + 1;\n\t\t\t\t\t_pos = _pos findEmptyPosition [0,100,_typeVehX];\n\t\t\t\t\tsleep 1;\n\t\t\t\t};\n\t\t\t\tif (count _pos == 0) then {_pos = getMarkerPos _spawnPoint};\n\t\t\t\t_vehicle=[_pos, _dir,_typeVehX, _sideX] call bis_fnc_spawnvehicle;\n\n\t\t\t\t_veh = _vehicle select 0;\n\t\t\t\t_vehCrew = _vehicle select 1;\n\t\t\t\t{[_x] call A3A_fnc_NATOinit} forEach _vehCrew;\n\t\t\t\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t\t\t\t_groupVeh = _vehicle select 2;\n\t\t\t\t_soldiers append _vehCrew;\n\t\t\t\t_soldiersTotal append _vehCrew;\n\t\t\t\t_groups pushBack _groupVeh;\n\t\t\t\t_vehiclesX pushBack _veh;\n\t\t\t\t_landPos = [_posDestination,_pos,false,_landPosBlacklist] call A3A_fnc_findSafeRoadToUnload;\n\t\t\t\tif (not(_typeVehX in vehTanks)) then\n\t\t\t\t{\n\t\t\t\t\t_landPosBlacklist pushBack _landPos;\n\t\t\t\t\t_typeGroup = [_typeVehX,_sideX] call A3A_fnc_cargoSeats;\n\t\t\t\t\t_grupo = grpNull;\n\t\t\t\t\t_grupo = [_posOrigin,_sideX, _typeGroup,true,false] call A3A_fnc_spawnGroup;\n\t\t\t\t\t{\n                        _x assignAsCargo _veh;\n                        _x moveInCargo _veh;\n                        if (vehicle _x == _veh) then\n                        {\n                            _soldiers pushBack _x;\n                            _soldiersTotal pushBack _x;\n                            [_x] call A3A_fnc_NATOinit;\n                            _x setVariable [\"originX\",_mrkOrigin];\n                        }\n                        else\n                        {\n                            deleteVehicle _x;\n                        };\n\t\t\t\t\t} forEach units _grupo;\n\t\t\t\t\tif (not(_typeVehX in vehTrucks)) then\n\t\t\t\t\t{\n\t\t\t\t\t\t{_x disableAI \"MINEDETECTION\"} forEach (units _groupVeh);\n\t\t\t\t\t\t(units _grupo) joinSilent _groupVeh;\n\t\t\t\t\t\tdeleteGroup _grupo;\n\t\t\t\t\t\t_groupVeh spawn A3A_fnc_attackDrillAI;\n\t\t\t\t\t\t[_posOriginLand,_landPos,_groupVeh] call A3A_fnc_WPCreate;\n\t\t\t\t\t\t_Vwp0 = _groupVeh addWaypoint [_landPos, count (wayPoints _groupVeh)];\n\t\t\t\t\t\t_Vwp0 setWaypointType \"TR UNLOAD\";\n\t\t\t\t\t\t_Vwp0 setWayPointCompletionRadius (10*_countX);\n\t\t\t\t\t\t_Vwp1 = _groupVeh addWaypoint [_posDestination, 1];\n\t\t\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t\t\t_Vwp1 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\t\t\t_Vwp1 setWaypointBehaviour \"COMBAT\";\n\t\t\t\t\t\t_veh allowCrewInImmobile true;\n\t\t\t\t\t\tprivate _typeName = if (_typeVehX in vehAPCs) then {\"APC\"} else {\"MRAP\"};\n\t\t\t\t\t\t[_veh,\"APC\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t(units _grupo) joinSilent _groupVeh;\n\t\t\t\t\t\tdeleteGroup _grupo;\n\t\t\t\t\t\t_groupVeh selectLeader (units _groupVeh select 1);\n\t\t\t\t\t\t_groupVeh spawn A3A_fnc_attackDrillAI;\n\t\t\t\t\t\t[_posOriginLand,_landPos,_groupVeh] call A3A_fnc_WPCreate;\n\t\t\t\t\t\t_Vwp0 = _groupVeh addWaypoint [_landPos, count (wayPoints _groupVeh)];\n\t\t\t\t\t\t_Vwp0 setWaypointType \"GETOUT\";\n\t\t\t\t\t\t_Vwp1 = _groupVeh addWaypoint [_posDestination, count (wayPoints _groupVeh)];\n\t\t\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t\t\t[_veh,\"Truck\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t{_x disableAI \"MINEDETECTION\"} forEach (units _groupVeh);\n\t\t\t\t\t[_posOriginLand,_posDestination,_groupVeh] call A3A_fnc_WPCreate;\n\t\t\t\t\t_Vwp0 = _groupVeh addWaypoint [_posDestination, count (wayPoints _groupVeh)];\n\t\t\t\t\t_Vwp0 setWaypointType \"MOVE\";\n\t\t\t\t\t_Vwp0 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\t\t_Vwp0 = _groupVeh addWaypoint [_posDestination, count (wayPoints _groupVeh)];\n\t\t\t\t\t_Vwp0 setWaypointType \"SAD\";\n\t\t\t\t\tprivate _typeName = if (_typeVehX in vehTanks) then {\"Tank\"} else {\"AA\"};\n\t\t\t\t\t[_veh, _typeName] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t\t_veh allowCrewInImmobile true;\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tif ((count _soldiers >= 10) && (call _fnc_remUnitCount < 5)) exitWith {\n\t\t\t\t[2, format [\"Ground wave reached maximum units count after %1 vehicles\", _countX], _filename] call A3A_fnc_log",
"[1000,(_i*90)];\n\t\t\tif (surfaceIsWater _pos) exitWith\n\t\t\t\t{\n\t\t\t\tif ({sidesX getVariable [_x,sideUnknown] == _sideX} count seaports > 1) then\n\t\t\t\t\t{\n\t\t\t\t\t_isSea = true;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\tif ((_isSea) and (_firstWave)) then\n\t\t{\n\t\t_pos = getMarkerPos ([seaAttackSpawn,_posDestination] call BIS_fnc_nearestPosition);\n\t\tif (count _pos > 0) then\n\t\t\t{\n\t\t\t_vehPool = if (_sideX == Occupants) then {vehNATOBoats} else {vehCSATBoats};\n\t\t\t_vehPool = _vehPool select {[_x] call A3A_fnc_vehAvailable};\n\t\t\t_countX = 0;\n\t\t\t_spawnedSquad = false;\n\t\t\twhile {(_countX < 3) and (count _soldiers <= 80)} do\n\t\t\t\t{\n\t\t\t\t_typeVehX = if (_vehPool isEqualTo []) then {if (_sideX == Occupants) then {vehNATORBoat} else {vehCSATRBoat}} else {selectRandom _vehPool};\n\t\t\t\t_proceed = true;\n\t\t\t\tif ((_typeVehX == vehNATOBoat) or (_typeVehX == vehCSATBoat)) then\n\t\t\t\t\t{\n\t\t\t\t\t_landPos = [_posDestination, 10, 1000, 10, 2, 0.3, 0] call BIS_Fnc_findSafePos;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t_allUnits = {(local _x) and (alive _x)} count allUnits;\n\t\t\t\t\t_allUnitsSide = 0;\n\t\t\t\t\t_maxUnitsSide = maxUnits;\n\t\t\t\t\tif (gameMode <3) then\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_allUnitsSide = {(local _x) and (alive _x) and (side group _x == _sideX)} count allUnits;\n\t\t\t\t\t\t_maxUnitsSide = round (maxUnits * 0.7);\n\t\t\t\t\t\t};\n\t\t\t\t\tif (((_allUnits + 4 > maxUnits) or (_allUnitsSide + 4 > _maxUnitsSide)) and _spawnedSquad) then\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_proceed = false\n\t\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_typeGroup = [_typeVehX,_sideX] call A3A_fnc_cargoSeats;\n\t\t\t\t\t\t_landPos = [_posDestination, 10, 1000, 10, 2, 0.3, 1] call BIS_Fnc_findSafePos;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\tif ((count _landPos > 0) and _proceed) then\n\t\t\t\t\t{\n\t\t\t\t\t_vehicle=[_pos, random 360,_typeVehX, _sideX] call bis_fnc_spawnvehicle;\n\n\t\t\t\t\t_veh = _vehicle select 0;\n\t\t\t\t\t_vehCrew = _vehicle select 1;\n\t\t\t\t\t_groupVeh = _vehicle select 2;\n\t\t\t\t\t_pilots append _vehCrew;\n\t\t\t\t\t_groups pushBack _groupVeh;\n\t\t\t\t\t_vehiclesX pushBack _veh;\n\t\t\t\t\t{[_x] call A3A_fnc_NATOinit} forEach units _groupVeh;\n\t\t\t\t\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t\t\t\t\tif ((_typeVehX == vehNATOBoat) or (_typeVehX == vehCSATBoat)) then\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_wp0 = _groupVeh addWaypoint [_landpos, 0];\n\t\t\t\t\t\t_wp0 setWaypointType \"SAD\";\n\t\t\t\t\t\t//[_veh,\"Boat\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_grupo = grpNull;\n\t\t\t\t\t\tif !(_spawnedSquad) then {_grupo = [_posOrigin,_sideX, _typeGroup,true,false] call A3A_fnc_spawnGroup;_spawnedSquad = true} else {_grupo = [_posOrigin,_sideX, _typeGroup,false,true] call A3A_fnc_spawnGroup};\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_x assignAsCargo _veh;\n\t\t\t\t\t\t_x moveInCargo _veh;\n\t\t\t\t\t\tif (vehicle _x == _veh) then\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_soldiers pushBack _x;\n\t\t\t\t\t\t\t_soldiersTotal pushBack _x;\n\t\t\t\t\t\t\t[_x] call A3A_fnc_NATOinit;\n\t\t\t\t\t\t\t_x setVariable [\"originX\",_mrkOrigin];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdeleteVehicle _x;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} forEach units _grupo;\n\t\t\t\t\t\tif (_typeVehX in vehAPCs) then\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_groups pushBack _grupo;\n\t\t\t\t\t\t\t_Vwp = _groupVeh addWaypoint [_landPos, 0];\n\t\t\t\t\t\t\t_Vwp setWaypointBehaviour \"SAFE\";\n\t\t\t\t\t\t\t_Vwp setWaypointType \"TR UNLOAD\";\n\t\t\t\t\t\t\t_Vwp setWaypointSpeed \"FULL\";\n\t\t\t\t\t\t\t_Vwp1 = _groupVeh addWaypoint [_posDestination, 1];\n\t\t\t\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t\t\t\t_Vwp1 setWaypointStatements [\"true\",\"if !(local this) exitWith {}; {if (side _x != side this) then {this reveal [_x,4]}} forEach allUnits\"];\n\t\t\t\t\t\t\t_Vwp1 setWaypointBehaviour \"COMBAT\";\n\t\t\t\t\t\t\t_Vwp2 = _grupo addWaypoint [_landPos, 0];\n\t\t\t\t\t\t\t_Vwp2 setWaypointType \"GETOUT\";\n\t\t\t\t\t\t\t_Vwp2 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (group this) spawn A3A_fnc_attackDrillAI\"];\n\t\t\t\t\t\t\t//_grupo setVariable [\"mrkAttack\",_mrkDestination];\n\t\t\t\t\t\t\t_Vwp synchronizeWaypoint [_Vwp2];\n\t\t\t\t\t\t\t_Vwp3 = _grupo addWaypoint [_posDestination, 1];\n\t\t\t\t\t\t\t_Vwp3 setWaypointType \"SAD\";\n\t\t\t\t\t\t\t_veh allowCrewInImmobile true;\n\t\t\t\t\t\t\t//[_veh,\"APC\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(units _grupo) joinSilent _groupVeh;\n\t\t\t\t\t\t\tdeleteGroup _grupo;\n\t\t\t\t\t\t\t_groupVeh selectLeader (units _groupVeh select 1);\n\t\t\t\t\t\t\t_Vwp = _groupVeh addWaypoint [_landPos, 0];\n\t\t\t\t\t\t\t_Vwp setWaypointBehaviour \"SAFE\";\n\t\t\t\t\t\t\t_Vwp setWaypointSpeed \"FULL\";\n\t\t\t\t\t\t\t_Vwp setWaypointType \"GETOUT\";\n\t\t\t\t\t\t\t_Vwp setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (group this) spawn A3A_fnc_attackDrillAI\"];\n\t\t\t\t\t\t\t_Vwp1 = _groupVeh addWaypoint [_posDestination, 1];\n\t\t\t\t\t\t\t_Vwp1 setWaypointType \"SAD\";\n\t\t\t\t\t\t\t_Vwp1 setWaypointBehaviour \"COMBAT\";\n\t\t\t\t\t\t\t//[_veh,\"Boat\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\tsleep 15;\n\t\t\t\t_countX = _countX + 1;\n\t\t\t\t_vehPool = _vehPool select {[_x] call A3A_fnc_vehAvailable};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\tprivate _nVehAir = _nVeh;\n\tif !(_posOriginLand isEqualTo []) then {\n\t\tsleep ((_posOrigin distance _posDestination)/15);\t\t\t// give land vehicles a head start\n\t\t_nVehAir = floor (_nVeh / 2);\t\t\t\t\t\t\t\t// fill out with air vehicles\n\t};\n\t_posGround = [_posOrigin select 0,_posOrigin select 1,0];\n\t_posOrigin set [2,300];\n\n\t_countX = 1;\n\t_pos = _posOrigin;\n\t_ang = 0;\n\t_size = [_mrkOrigin] call A3A_fnc_sizeMarker;\n\tprivate _runwayTakeoff = [_mrkOrigin] call A3A_fnc_getRunwayTakeoffForAirportMarker;\n\tif (count _runwayTakeoff > 0) then {\n\t\t_pos = _runwayTakeoff select 0;\n\t\t_ang = _runwayTakeoff select 1;\n\t};\n\n\t// Remove disabled air supports from active list\n\t_airSupport = _airSupport select { canMove _x };\n\n\t// Fill air supports up to half wave size, minimum +1\n\tprivate _countNewSupport = 1 max (floor (_nVeh / 2) - count _airSupport);\n\t[3, format [\"Spawning %1 new support aircraft\", _countNewSupport], _filename] call A3A_fnc_log",
"[2, \"Attack ran out of air supports\", _filename] call A3A_fnc_log",
"[_typeVehX, _posOrigin, [], 0, \"FLY\"];\n\t\t_vehiclesX pushBack _uav;\n\t\t_airSupport pushBack _uav;\n\t\t//[_uav,\"UAV\"] spawn A3A_fnc_inmuneConvoy;\n\t\t[_uav,_mrkDestination,_sideX] spawn A3A_fnc_VANTinfo;\n\t\tcreateVehicleCrew _uav;\n\t\t_pilots append (crew _uav);\n\t\t_groupVeh = group driver _uav;\n\t\t_groups pushBack _groupVeh;\n\t\t_uwp0 = _groupVeh addWayPoint [_posDestination,0];\n\t\t_uwp0 setWaypointBehaviour \"AWARE\";\n\t\t_uwp0 setWaypointType \"SAD\";\n\t\t{[_x] call A3A_fnc_NATOinit} forEach (crew _uav);\n\t\t[_uav, _sideX] call A3A_fnc_AIVEHinit;\n\t\tif (not(_mrkDestination in airportsX)) then {_uav removeMagazines \"6Rnd_LG_scalpel\"};\n\t\t[3, format [\"Spawning vehicle type %1\", _typeVehX], _filename] call A3A_fnc_log",
"[2, \"Attack ran out of air transports\", _filename] call A3A_fnc_log",
"[3, format [\"Spawning vehicle type %1\", _typeVehX], _filename] call A3A_fnc_log",
"[_pos, _ang + 90,_typeVehX, _sideX] call bis_fnc_spawnvehicle;\n\t\t\t_veh = _vehicle select 0;\n\t\t\tif (_veh isKindOf \"Plane\") then {\n\t\t\t\t_veh setVelocityModelSpace (velocityModelSpace _veh vectorAdd [0, 150, 50]);\n\t\t\t};\n\t\t\t_vehCrew = _vehicle select 1;\n\t\t\t_groupVeh = _vehicle select 2;\n\t\t\t_pilots append _vehCrew;\n\t\t\t_vehiclesX pushBack _veh;\n\t\t\t{[_x] call A3A_fnc_NATOinit} forEach units _groupVeh;\n\t\t\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t\t\tif (not (_typeVehX in vehTransportAir)) then\n\t\t\t\t{\n\t\t\t\t_airSupport pushBack _veh;\n\t\t\t\t_groups pushBack _groupVeh;\n\t\t\t\t_uwp0 = _groupVeh addWayPoint [_posDestination,0];\n\t\t\t\t_uwp0 setWaypointBehaviour \"AWARE\";\n\t\t\t\t_uwp0 setWaypointType \"SAD\";\n\t\t\t\t//[_veh,\"Air Attack\"] spawn A3A_fnc_inmuneConvoy;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t_groups pushBack _groupVeh;\n\t\t\t\t_typeGroup = [_typeVehX,_sideX] call A3A_fnc_cargoSeats;\n\t\t\t\t_grupo = grpNull;\n\t\t\t\t_grupo = [_posGround,_sideX, _typeGroup,true,false] call A3A_fnc_spawnGroup;\n\t\t\t\t_groups pushBack _grupo;\n\t\t\t\t{\n\t\t\t\t_x assignAsCargo _veh;\n\t\t\t\t_x moveInCargo _veh;\n\t\t\t\tif (vehicle _x == _veh) then\n\t\t\t\t\t{\n\t\t\t\t\t_soldiers pushBack _x;\n\t\t\t\t\t_soldiersTotal pushBack _x;\n\t\t\t\t\t[_x] call A3A_fnc_NATOinit;\n\t\t\t\t\t_x setVariable [\"originX\",_mrkOrigin];\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\tdeleteVehicle _x;\n\t\t\t\t\t};\n\t\t\t\t} forEach units _grupo;\n\t\t\t\tif (!(_veh isKindOf \"Helicopter\") or (_mrkDestination in airportsX)) then\n\t\t\t\t\t{\n\t\t\t\t\t[_veh,_grupo,_mrkDestination,_mrkOrigin] spawn A3A_fnc_airdrop;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t_landPos = _posDestination getPos [300, random 360];\n\t\t\t\t\t_landPos = [_landPos, 0, 550, 10, 0, 0.20, 0,[],[[0,0,0],[0,0,0]]] call BIS_fnc_findSafePos;\n\t\t\t\t\tif !(_landPos isEqualTo [0,0,0]) then\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_landPos set [2, 0];\n\t\t\t\t\t\t_pad = createVehicle [\"Land_HelipadEmpty_F\", _landPos, [], 0, \"NONE\"];\n\t\t\t\t\t\t_vehiclesX pushBack _pad;\n\t\t\t\t\t\t_wp0 = _groupVeh addWaypoint [_landpos, 0];\n\t\t\t\t\t\t_wp0 setWaypointType \"TR UNLOAD\";\n\t\t\t\t\t\t_wp0 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (vehicle this) land 'GET OUT';[vehicle this] call A3A_fnc_smokeCoverAuto\"];\n\t\t\t\t\t\t_wp0 setWaypointBehaviour \"CARELESS\";\n\t\t\t\t\t\t_wp3 = _grupo addWaypoint [_landpos, 0];\n\t\t\t\t\t\t_wp3 setWaypointType \"GETOUT\";\n\t\t\t\t\t\t_wp3 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; (group this) spawn A3A_fnc_attackDrillAI\"];\n\t\t\t\t\t\t_wp0 synchronizeWaypoint [_wp3];\n\t\t\t\t\t\t_wp4 = _grupo addWaypoint [_posDestination, 1];\n\t\t\t\t\t\t_wp4 setWaypointType \"SAD\";\n\t\t\t\t\t\t_wp4 = _grupo addWaypoint [_posDestination, 1];\n\t\t\t\t\t\t_wp2 = _groupVeh addWaypoint [_posOrigin, 1];\n\t\t\t\t\t\t_wp2 setWaypointType \"MOVE\";\n\t\t\t\t\t\t_wp2 setWaypointStatements [\"true\", \"if !(local this) exitWith {}; deleteVehicle (vehicle this); {deleteVehicle _x} forEach thisList\"];\n\t\t\t\t\t\t[_groupVeh,1] setWaypointBehaviour \"AWARE\";\n\t\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t{_x disableAI \"TARGET\"; _x disableAI \"AUTOTARGET\"} foreach units _groupVeh;\n\t\t\t\t\t\tif ((_typeVehX in vehFastRope) and ((count(garrison getVariable [_mrkDestination, []])) < 10)) then\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//_grupo setVariable [\"mrkAttack\",_mrkDestination];\n\t\t\t\t\t\t\t[_veh,_grupo,_posDestination,_posOrigin,_groupVeh] spawn A3A_fnc_fastrope;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[_veh,_grupo,_mrkDestination,_mrkOrigin] spawn A3A_fnc_airdrop;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\tif ((_countX > _countNewSupport) && (count _soldiers >= 10) && (call _fnc_remUnitCount < 5)) exitWith {\n\t\t\t[2, format [\"Air wave reached maximum units count after %1 vehicles\", _countX], _filename] call A3A_fnc_log",
"[_pos, 80,_ang] call BIS_fnc_relPos;\n\t\t_countX = _countX + 1;\n\t\t};\n\n\t[2, format [\"Spawn performed: %1 air vehicles inc. %2 supports, %3 land vehicles, %4 soldiers\", _nVehAir, _countNewSupport, _nVehLand, count _soldiers], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Convoy/fn_createAIAction.sqf": [
"[\"_destination\", \"_type\", \"_side\", [\"_arguments\", []]];\n\n/*  Handles the creation of any AI Action\n*   Params\n*     _destination : MARKER or POS; the marker or position the AI should take AI on\n*     _type : STRING; (not case sensitive) one of \"ATTACK\", \"PATROL\", \"REINFORCE\", \"CONVOY\", \"AIRSTRIKE\" more to add\n*     _side : SIDE; the side of the AI forces to send\n*     _arguments : ARRAY; any further argument needed for the operation\n*        -here should be some manual for each _type, but it is currently unfinished\n*   Returns:\n*     Nothing\n*/\n\nif(!serverInitDone) then\n{\n  diag_log \"CreateAIAction: Waiting for server init to be completed!\";\n  waitUntil {sleep 1; serverInitDone};\n};\n\nif(isNil \"_destination\") exitWith {diag_log \"CreateAIAction: No destination given for AI Action\"};\n_acceptedTypes = [\"attack\", \"patrol\", \"reinforce\", \"convoy\", \"airstrike\"];\nif(isNil \"_type\" || {!((toLower _type) in _acceptedTypes)}) exitWith {diag_log \"CreateAIAction: Type is not in the accepted types\"};\nif(isNil \"_side\" || {!(_side == Occupants || _side == Invaders)}) exitWith {diag_log \"CreateAIAction: Can only create AI for Inv and Occ\"};\n\n_convoyID = round (random 1000);\n_IDinUse = server getVariable [format [\"Con%1\", _convoyID], false];\nsleep 0.1;\nwhile {_IDinUse} do\n{\n  _convoyID = round (random 1000);\n  _IDinUse = server getVariable [format [\"Con%1\", _convoyID], false];\n};\nserver setVariable [format [\"Con%1\", _convoyID], true, true];\n\n_convoyID spawn\n{\n  sleep (30 * 60);\n  server setVariable [format [\"Con%1\", _this], nil, true];\n};\n\n_type = toLower _type;\n_isMarker = _destination isEqualType \"\";\n_targetString = if(_isMarker) then {_destination} else {str _destination};\ndiag_log format [\"CreateAIAction[%1]: Started creation of %2 action to %3\", _convoyID, _type, _targetString];\n\n_nearestMarker = if(_isMarker) then {_destination} else {[markersX,_destination] call BIS_fnc_nearestPosition};\nif ([_nearestMarker,false] call A3A_fnc_fogCheck < 0.3) exitWith\n{\n  diag_log format [\"CreateAIAction[%1]: AI Action on %2 cancelled because of heavy fog\", _convoyID, _targetString];\n  server setVariable [format [\"Con%1\", _convoyID], nil, true];\n};\n\n_abort = false;\n_attackDistance = distanceSPWN2;\nif (_isMarker) then\n{\n  if(_destination in attackMrk) then {_abort = true};\n}\nelse\n{\n  if(count attackPos != 0) then\n  {\n    _nearestAttack = [attackPos, _destination] call BIS_fnc_nearestPosition;\n    if ((_nearestAttack distance _destination) < _attackDistance) then {_abort = true;};\n  }\n  else\n  {\n    if(count attackMrk != 0) then\n    {\n      _nearestAttack = [attackMrk, _destination] call BIS_fnc_nearestPosition;\n      if (getMarkerPos _nearestAttack distance _destination < _attackDistance) then {_abort = true};\n    };\n  };\n};\nif(_abort) exitWith\n{\n  diag_log format [\"CreateAIAction[%1]: Aborting creation of AI action because, there is already a action close by!\", _convoyID];\n  server setVariable [format [\"Con%1\", _convoyID], nil, true];\n};\n\n//TODO rebalance that somehow\n/*\n_allUnits = {(local _x) and (alive _x)} count allUnits;\n_allUnitsSide = 0;\n_maxUnitsSide = maxUnits;\n\nif (gameMode <3) then\n{\n\t_allUnitsSide = {(local _x) and (alive _x) and (side group _x == _side)} count allUnits;\n\t_maxUnitsSide = round (maxUnits * 0.7);\n};\nif ((_allUnits + 4 > maxUnits) or (_allUnitsSide + 4 > _maxUnitsSide)) then {_abort = true};\n\nif (_abort) exitWith {diag_log format [\"CreateAIAction[%1]: AI action cancelled because of reaching the maximum of units on attacking %2\", _convoyID, _destination]};\n*/\n\n\n_destinationPos = if(_isMarker) then {getMarkerPos _destination} else {_destination};\n_originPos = [];\n_origin = \"\";\n_units = [];\n_vehicleCount = 0;\n_cargoCount = 0;\nif(_type == \"patrol\") then\n{\n  //TODO rework the origin selection!!\n  _threatEvalLand = [_destinationPos, _side] call A3A_fnc_landThreatEval;\n\t_airportsX = airportsX select {(sidesX getVariable [_x,sideUnknown] == _side) and ([_x,true] call A3A_fnc_airportCanAttack) and (getMarkerPos _x distance2D _destinationPos < distanceForAirAttack)};\n\tif (hasIFA and (_threatEvalLand <= 15)) then {_airportsX = _airportsX select {(getMarkerPos _x distance2D _destinationPos < distanceForLandAttack)}};\n\t_outposts = if (_threatEvalLand <= 15) then {outposts select {(sidesX getVariable [_x,sideUnknown] == _side) and ([_destinationPos, getMarkerPos _x] call A3A_fnc_isTheSameIsland) and (getMarkerPos _x distance _destinationPos < distanceForLandAttack)  and ([_x,true] call A3A_fnc_airportCanAttack)}} else {[]};\n\t_airportsX = _airportsX + _outposts;\n  if (_isMarker) then\n\t{\n\t\tif (_markerX in blackListDest) then\n\t\t{\n\t\t\t_airportsX = _airportsX - outposts;\n\t\t};\n\t\t_airportsX = _airportsX - [_markerX];\n\t\t_airportsX = _airportsX select {({_x == _markerX} count (killZones getVariable [_x,[]])) < 3};\n\t}\n\telse\n\t{\n\t\tif (!_super) then\n\t\t{\n\t\t\t_siteX = [(resourcesX + factories + airportsX + outposts + seaports),_posDestination] call BIS_fnc_nearestPosition;\n\t\t\t_airportsX = _airportsX select {({_x == _siteX} count (killZones getVariable [_x,[]])) < 3};\n\t\t};\n\t};\n\tif (_airportsX isEqualTo []) then\n\t{\n\t\t_exit = true;\n\t}\n\telse\n\t{\n\t\t_origin = [_airportsX,_posDestination] call BIS_fnc_nearestPosition;\n\t\t_originPos = getMarkerPos _origin;\n\t};\n  if (!_exit) then\n  {\n    //This line detects air or land attack\n    _isLand =\n    (\n      (_threatEvalLand <= 15) &&\n      {(_originPos distance _destinationPos < distanceForLandAttack) &&\n      {([_originPos, _destinationPos] call A3A_fnc_isTheSameIsland)}}\n    );\n    if(_isLand) then\n    {\n      if (_origin in outposts) then {[_origin, 10] call A3A_fnc_addTimeForIdle} else {[_origin, 5] call A3A_fnc_addTimeForIdle};\n      _count = 1;\n      _vehPool = [];\n      //Select vehicle count and pool\n      switch (true) do\n      {\n        case (tierWar < 3):\n        {\n          _count = 1;\n          _vehPool = if(_side == Occupants) then {vehNATOLight} else {vehCSATLightArmed};\n        };\n        case (tierWar < 6 && {tierWar > 2}):\n        {\n          _count = 2 + (round (random 1));\n          _vehPool = if(_side == Occupants) then {vehNATOLightArmed + vehNATOAPC} else {vehCSATLightArmed + vehCSATAPC};\n        };\n        case (tierWar > 5):\n        {\n          _count = 3 + (round (random 2));\n          _vehPool = if(_side == Occupants) then {vehNATOAttack} else {vehCSATAttack};\n        };\n      };\n\n      for \"_i\" from 1 to _count do\n      {\n        _veh = [_vehPool, _side] call A3A_fnc_selectAndCreateVehicle;\n        _vehPool = _veh select 1;\n        _units pushBack (_veh select 0);\n        _vehicleCount = _vehicleCount + 1;\n        _cargoCount = _cargoCount + count ((_veh select 0) select 1) + count ((_veh select 0) select 2);\n      };\n    }\n    else\n    {\n      [_origin, 10] call A3A_fnc_addTimeForIdle;\n      _count = if(_isMarker) then {1 + (round (random 1))} else {1};\n      _vehPool = [];\n      switch (true) do\n      {\n        case (tierWar < 3):\n        {\n          _vehPool = if(_side == Occupants) then {vehNATOPatrolHeli} else {vehCSATPatrolHeli};\n        };\n        case (tierWar > 2 && tierWar < 7):\n        {\n          _vehPool = if(_side == Occupants) then {vehNATOTransportHelis} else {vehCSATTransportHelis};\n        };\n        case (tierWar > 6):\n        {\n          _vehPool = if(_side == Occupants) then {vehNATOAttackHelis} else {vehCSATAttackHelis};\n        };\n      };\n      for \"_i\" from 1 to _count do\n      {\n        _veh = [_vehPool, _side, true] call A3A_fnc_selectAndCreateVehicle;\n        _vehPool = _veh select 1;\n        _units pushBack (_veh select 0);\n        _vehicleCount = _vehicleCount + 1;\n        _cargoCount = _cargoCount + count ((_veh select 0) select 1) + count ((_veh select 0) select 2);\n      };\n    };\n  }\n  else\n  {\n    diag_log format [\"CreateAIAction[%1]: Patrol aborted as no base is available!\", _convoyID];\n    _abort = true;\n  };\n};\nif(_type == \"reinforce\") then\n{\n  _arguments params [\"_canReinf\"];\n  _possibleBases = _canReinf select {[_x, _destination] call A3A_fnc_shouldReinforce};\n  if((count _possibleBases) != 0) then\n  {\n\n    _selectedBase = [_possibleBases, _destination] call BIS_fnc_nearestPosition;\n    //Found base to reinforce, selecting units now\n    _units = [_selectedBase, _destination] call A3A_fnc_selectReinfUnits;\n\n    if(_units isEqualTo []) then\n    {\n      diag_log format [\"CreateAIAction[%1]: No units given for reinforcements!\", _convoyID];\n      _abort = true;\n    }\n    else\n    {\n      _origin = _selectedBase;\n      _originPos = getMarkerPos _origin;\n\n      _countUnits = [_units, false] call A3A_fnc_countGarrison;\n\n      _vehicleCount = _vehicleCount + (_countUnits select 0);\n      _cargoCount = _cargoCount + (_countUnits select 1) + (_countUnits select 2);\n\n      //For debug is direct placement\n      //diag_log format [\"Reinforce %1 from %2\", _target, _selectedBase];\n      //[_units, \"Reinf units\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Convoy/fn_despawnConvoy.sqf": [
"[\"_convoyID\", \"_unitObjects\", \"_convoyPos\", \"_target\", \"_markerArray\", \"_convoyType\", \"_convoySide\"];\n\n[2, format [\"Despawning convoy %1\", _convoyID], \"fn_despawnConvoy\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Convoy/fn_spawnConvoy.sqf": [
"[\"_convoyID\", \"_units\", \"_pos\", \"_route\", \"_markers\", \"_convoySide\", \"_convoyType\", \"_maxSpeed\", \"_isAir\"];\n\n\nprivate [\"_targetPos\", \"_dir\", \"_convoyMarker\"];\n\n_targetPos = _route select (count _route - 1);\n\n_convoyMarker = format [\"convoy%1\", _convoyID];\n\nif (!_isAir) then {\n\tprivate _road = roadAt _pos;\n\t// don't reposition if we're already near a road, can cause backwards driving\n\tif(isNull _road) then\n\t{\n\t\tprivate _radius = 3;\n\t\tprivate _possibleRoads = [];\n\t\twhile {isNull _road && {_radius < 50}} do\n\t\t{\n\t\t\t_possibleRoads = _pos nearRoads _radius;\n\t\t\tif(count _possibleRoads > 0) then { _road = _possibleRoads select 0 }\n\t\t\telse { _radius = _radius * 1.5 };\n\t\t};\n\t\tif(!(isNull _road)) then { _pos = (getPos _road) };\n\t};\n};\n\n//Spawn a bit above the ground\n_pos = _pos vectorAdd [0,0,0.1];\n_dir = _pos getDir (_route select 0);\nprivate _targetDir = _pos vectorFromTo _targetPos;\nprivate _airOffset = (_targetDir vectorMultiply 200) vectorAdd [0,0,50];\n\nprivate _createdUnits = [];\nprivate _airVehicles = [];\nprivate _landVehicles = [];\n\n[2, format [\"Spawning in convoy %1\", _convoyID], \"fn_spawnConvoy\"] call A3A_fnc_log",
"[_units, \"Convoy Units\"] call A3A_fnc_log",
"[_units select _i, _convoySide, _pos, _dir] call A3A_fnc_spawnConvoyLine;\n\n\t//Pushback the spawned objects\n\tprivate _unitObjects = _lineData select 0;\n\t_createdUnits pushBack _unitObjects;\n\n\tprivate _vehicle = _unitObjects select 0;\n\tif (_vehicle != objNull) then {\n\n\t\tif(_vehicle isKindOf \"Air\") then\n\t\t{\n\t\t\t_airVehicles pushBack _vehicle;\n\t\t\t_vehicle setVelocity ((vectorDir _vehicle) vectorMultiply (30));\n\t\t\tprivate _fsm = [_vehicle, _airOffset, _markers, _convoyType] execFSM \"FSMs\\ConvoyTravelAir.fsm\";\n\t\t\t_vehicle setVariable [\"fsm\", _fsm];\n\n\t\t\t_airOffset = _airOffset vectorAdd (_targetDir vectorMultiply -200);\n\t\t\tif (!_isAir) then { _vehicle setVariable [\"followpos\", _pos] };\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_landVehicles pushBack _vehicle;\n\t\t\t_vehicle limitSpeed _maxSpeed * 3.6;\n\t\t\tprivate _fsm = [_vehicle, _route, _markers, _convoyType] execFSM \"FSMs\\ConvoyTravel.fsm\";\n\t\t\t_vehicle setVariable [\"fsm\", _fsm];\n\t\t};\n\n\t\t// lastSpawn time check will try anyway if a vehicle gets stuck\n\t\tprivate _lastSpawn = time;\n\t\twaituntil {sleep 1; ((_vehicle distance2d _pos) > 15) or ((time - _lastSpawn) > 20)};\n\t}\n\telse {\n\t\t[3, \"Convoy line has no vehicle, unhandled\", \"fn_spawnConvoy\"] call A3A_fnc_log",
"[\"fsmresult\", 0]};\n\n\t\tif (_result != 0) then {\t\t// completed or abandoned mission, don't track here anymore\n\t\t\tif (_result < 0) then { _failure = _failure + 1 };\t\t// convoy vehicle failed to reach target\n\t\t\t_createdUnits deleteAt _i;\n\t\t\t_airVehicles deleteAt (_airVehicles find _veh);\n\t\t\t_landVehicles deleteAt (_landVehicles find _veh);\n\t\t\t[3, format[\"Vehicle FSM result %1, rem units %2\", _result, count _createdUnits], \"fn_spawnConvoy\"] call A3A_fnc_log",
"[distanceSPWN*1.2, 1, getPos _veh, teamPlayer] call A3A_fnc_distanceUnits) then { _despawn = false };\n\t\t};\n\t};\n\n\t// no tracked vehicles remaining in convoy, terminate\n\tif (count _createdUnits == 0) exitWith {\n\t\tdeleteMarker _convoyMarker;\n\t\tserver setVariable [format [\"Con%1\", _convoyID], nil, true];\n\t\t[2, format [\"%1 Convoy [%2]: Terminated\", _convoyType, _convoyID], \"fn_spawnConvoy\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Garrison/fn_addRequested.sqf": [
"[\"_marker\", \"_unit\", \"_unitIndex\", [\"_stockUp\", false]];\n\n/*  Adds the given units to the list of troups that needs to be reinforced\n*   For _stockUp == false\n*     Params:\n*       _marker: STRING : The name of the marker\n*       _units: STRING: The name of the unit\n*       _unitIndex: NUMBER: A number determining where the unit has to be, format YYX, with YY are the group id and X is the position (0 = vehicle, 1 = crew, 2 = group)\n*   For _stockUp == true\n*     Params:\n*       _marker: STRING : The name of the marker\n*       _units: ARRAY: An array containing [\"vehicleName\", [CrewArray], [GroupArray]]\n*       _unitIndex: IGNORED\n*\n*   Returns:\n*     Nothing\n*/\n\nif (isNil \"_marker\") exitWith {diag_log \"AddRequested: No marker given!\"};\nif (isNil \"_unit\") exitWith {diag_log \"AddRequested: No units given!\"};\n\nprivate [\"_unitType\", \"_groupID\", \"_reinforcements\", \"_reinfCount\", \"_element\", \"_countGarrison\"];\n\nif(!_stockUp) then\n{\n  //A unit has been KIA\n  _unitType = _unitIndex % 10;\n  _groupID = floor (_unitIndex / 10);\n\n  //Get needed data\n  _reinforcements = [_marker] call A3A_fnc_getRequested;\n  _reinfCount = count _reinforcements;\n\n  _garrison = [_marker] call A3A_fnc_getGarrison;\n\n  //Check if element is already there\n  if((_reinfCount - 1) < _groupID) then\n  {\n    //Element and maybe further elements not in it, adding them\n    for \"_i\" from (_reinfCount - 1) to _groupID do\n    {\n      _reinforcements pushBack [\"\", [], []];\n    };\n  };\n\n  //Adding unit to element\n  _element = _reinforcements select _groupID;\n  _garElement = _garrison select _groupID;\n  if(_unitType != 0) then\n  {\n    //Adding unit\n    (_element select _unitType) pushBack _unit;\n    _index = (_garElement select _unitType) findIf {_x == _unit};\n    (_garElement select _unitType) deleteAt _index;\n  }\n  else\n  {\n    //Setting vehicle\n    _element set [0, _unit];\n    _garElement set [0, \"\"];\n  };\n  _reinforcements set [_groupID, _element];\n\n  //diag_log \"Unit killed, reinforcement are now!\";\n  //[_reinforcements, \"Reinf\"] call A3A_fnc_log",
"[_garrison, \"Garrison\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Garrison/fn_createGarrison.sqf": [
"[\"_markerArray\", \"_type\", [\"_lose\", [0, 0, 0]]];\n\n/*  Creates the initial garrison for a set a marker of a specific type\n*   Params:\n*     _markerArray : ARRAY of MARKER : The set of marker\n*     _type : STRING : The type of the marker, one of Airport, Outpost, City or Other\n*     _losses : ARRAY of NUMBERS : The amount of lines that should be requested by the marker instead of already there [LAND, HELI, AIR] (default [0,0,0])\n*\n*   Returns:\n*     Nothing\n*/\n\nprivate [\"_losses\", \"_preferred\", \"_garrison\", \"_requested\", \"_marker\", \"_side\", \"_line\", \"_start\", \"_index\"];\n\n_preferred = garrison getVariable [format [\"%1_preference\", _type], objNull];\nwhile {!(_preferred isEqualType [])} do\n{\n  diag_log format [\"CreateGarrison: Preference %1_preference not set yet, waiting for 1 second\", _type];\n  sleep 1;\n  _preferred = garrison getVariable [format [\"%1_preference\", _type], objNull];\n};\n{\n  _losses = +_lose;\n  _garrison = [];\n  _requested = [];\n  _marker = _x;\n  _side = sidesX getVariable [_marker, sideUnknown];\n  while {_side == sideUnknown} do\n  {\n    diag_log format [\"Side unknown for %1, sleeping 1!\", _marker];\n    sleep 1;\n    _side = sidesX getVariable [_marker, sideUnknown];\n  };\n  for \"_i\" from 0 to ((count _preferred) - 1) do\n  {\n    _line = [_preferred select _i, _side] call A3A_fnc_createGarrisonLine;\n\n    _start = ((_preferred select _i) select 0) select [0,3];\n    _index = [\"LAN\", \"HEL\", \"AIR\"] findIf {_x == _start};\n    //diag_log format [\"Start %1 Index %2 Preference %3\", _start, _index, str (_preferred select _i)];\n    if(_index == -1 || {(_losses select _index) <= 0}) then\n    {\n      //TODO init arrays with specific size to avoid resize operations\n      _garrison pushBack _line;\n      _requested pushBack [\"\", [], []];\n    }\n    else\n    {\n      _losses set [_index, (_losses select _index) - 1];\n      _garrison pushBack [\"\", [], []];\n      _requested pushBack _line;\n    };\n  };\n  garrison setVariable [format [\"%1_garrison\", _marker], _garrison, true];\n  garrison setVariable [format [\"%1_requested\", _marker], _requested, true];\n\n  if(debug) then\n  {\n    diag_log format [\"Garrison on %1 is now set\", _marker];\n    [_garrison, format [\"%1_garrison\", _marker]] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Garrison/fn_selectReinfUnits.sqf": [
"[\"_base\", \"_target\", [\"_isAir\", false], [\"_bypass\", false]];\n\n/*  Selects the units to send, given on the targets reinf needs (and what the base has (not yet))\n*   Params:\n*     _base : STRING : The name of the origin base\n*     _target : STRING : The name of the destination\n*     _isAir : BOOLEAN : UNUSED\n*\n*   Returns:\n*     _unitsSend : ARRAY : The units in the correct format\n*/\n\nprivate _fileName = \"fn_selectReinfUnits\";\n\nprivate _maxUnitSend = garrison getVariable [format [\"%1_recruit\", _base], 0];\nif(_maxUnitSend < 3 && {!_bypass}) exitWith\n{\n    diag_log \"Can't select units with less than 3 slots, would be an vehicle only with crew!\";\n    [];\n};\n\nprivate _unitsSend = [];\n\n//Hard copy, need to work on this\nprivate _reinf = +([_target] call A3A_fnc_getRequested);\nprivate _side = sidesX getVariable [_base, sideUnknown];\n\nprivate _maxRequested = [_reinf, false] call A3A_fnc_countGarrison;\nprivate _maxVehiclesNeeded = _maxRequested select 0;\nprivate _maxCargoSpaceNeeded = _maxRequested select 2;\nprivate _currentUnitCount = 0;\n\n[4, format [\"Gathered data for unit selection, available are %1, %3 cargo units needed\", _maxUnitSend, _maxCargoSpaceNeeded], _fileName] call A3A_fnc_log",
"[4, format [\"Reinforcments requested from %1 for: %2\", _target, _reinf], _fileName] call A3A_fnc_log",
"[_vehicle, true] call BIS_fnc_crewCount;\n            private _curCrewSeats = [_vehicle, false] call BIS_fnc_crewCount;\n\n            //TODO available check on the base, currently it is bypassing the economy\n            //Check we don't overflow the max units we can send, if we get this vehicle and crew it.\n            if\n            (\n                (((_currentUnitCount + _curCrewSeats) + 1) <= _maxUnitSend) &&     //Already send units + crew + 1 for vehicle <= available units\n                {_curSeatCount > _seatCount &&                                      //Can send more then the last select vehicle\n                {!_isAir ||\t{_vehicle isKindOf \"Air\"}}}                         //Ensure air vehicle for air convoys\n            ) then\n            {\n                _currentSelected = _vehicle;\n                _seatCount = _curSeatCount;\n                _crewSeats = _curCrewSeats;\n            };\n        };\n    } forEach _reinf;\n\n    //Delete vehicle if we selected one\n    if(_currentSelected != \"\") then\n    {\n        private _index = _reinf findIf {(_x select 0) == _currentSelected};\n        if(_index != -1) then\n        {\n            (_reinf select _index) set [0, \"\"];\n            _maxVehiclesNeeded = _maxVehiclesNeeded - 1;\n        }\n        else\n        {\n            [1, format [\"Tried to delete reinf vehicle, but couldn't find it after selection, vehicle was %1!\", _currentSelected], _fileName] call A3A_fnc_log",
"[1, \"_neededCargoSpace is 0, something went really wrong!\", _fileName] call A3A_fnc_log",
"[4, format [\"No reinf vehicle found, selecting not needed transport vehicle, needs space for %1 passengers\", _neededCargoSpace], _fileName] call A3A_fnc_log",
"[4, format [\"Selected %1 as an air transport vehicle\", _currentSelected], _fileName] call A3A_fnc_log",
"[4, format [\"Selected %1 as an ground or air transport vehicle\", _currentSelected], _fileName] call A3A_fnc_log",
"[_currentSelected, true] call BIS_fnc_crewCount;\n            _crewSeats = [_currentSelected, false] call BIS_fnc_crewCount;\n        };\n    };\n\n    if(_currentSelected != \"\") then\n    {\n        //Assigning crew\n        private _crewMember = if(_side == Occupants) then {NATOCrew} else {CSATCrew};\n        private _crew = [_currentSelected, _crewMember] call A3A_fnc_getVehicleCrew;\n        _currentUnitCount = _currentUnitCount + 1 + _crewSeats;\n\n        //Assigning cargo\n        private _cargo = [];\n        private _openSpace = _seatCount - _crewSeats;\n        private _abort = false;\n\n        for \"_i\" from 0 to ((count _reinf) - 1) do\n        {\n            private _data = _reinf select _i;\n            private _dataCargo = _data select 2;\n\n            while {count _dataCargo > 0} do\n            {\n                //If space is available and units are available, add them\n                if((_currentUnitCount < _maxUnitSend) && {_openSpace > 0}) then\n                {\n                    _cargo pushBack (_dataCargo deleteAt 0);\n                    _currentUnitCount = _currentUnitCount + 1;\n                    _maxCargoSpaceNeeded = _maxCargoSpaceNeeded - 1;\n                    _openSpace = _openSpace - 1;\n                }\n                else\n                {\n                    //No space or units available, abort\n                    _abort = true;\n                };\n                if(_abort) exitWith {};\n            };\n\n            //No more space, exit\n            if(_abort) exitWith {};\n        };\n        _unitsSend pushBack [_currentSelected, _crew, _cargo];\n        [3, format [\"Units selected, Vehicle is %1, crew is %2, cargo is %3\", _currentSelected, _crew, _cargo], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Garrison/fn_selectVehicleType.sqf": [
"[\"_preference\", \"_side\"];\n\n/*  Selects a fitting vehicle type based on given preference and side\n*   Params:\n*     _preference : STRING : The preferred vehicle type\n*     _side : SIDE : The side of the vehicle\n*\n*   Returns:\n*     _result : STRING : The typename of the selected vehicle\n*/\n\nprivate _fileName = \"SelectVehicleType\";\n\n[4, format [\"SelectVehicleType: Selecting vehicle now, preferred is %1, side is %2\", _preference, _side], _fileName] call A3A_fnc_log",
"[];\nif(_preference in [\"EMPTY\", \"LAND_START\", \"HELI_PATROL\", \"AIR_DRONE\"]) then\n{\n  _possibleVehicles pushBack \"\";\n};\nif(_preference in [\"LAND_START\", \"LAND_LIGHT\", \"LAND_DEFAULT\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles append vehNATOLight;\n  }\n  else\n  {\n    _possibleVehicles append vehCSATLight;\n  };\n};\nif(_preference in [\"LAND_DEFAULT\", \"LAND_APC\", \"LAND_ATTACK\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles append vehNATOAPC;\n  }\n  else\n  {\n    _possibleVehicles append vehCSATAPC;\n  };\n};\nif(_preference in [\"LAND_ATTACK\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles pushBack vehNATOTank;\n  }\n  else\n  {\n    _possibleVehicles pushBack vehCSATTank;\n  };\n};\nif(_preference in [\"HELI_PATROL\", \"HELI_LIGHT\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles pushBack vehNATOPatrolHeli;\n  }\n  else\n  {\n    _possibleVehicles pushBack vehCSATPatrolHeli;\n  };\n};\nif(_preference in [\"HELI_TRANSPORT\", \"HELI_DEFAULT\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles append vehNATOTransportHelis;\n  }\n  else\n  {\n    _possibleVehicles append vehCSATTransportHelis;\n  };\n};\nif(_preference in [\"HELI_DEFAULT\", \"HELI_ATTACK\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles append vehNATOAttackHelis;\n  }\n  else\n  {\n    _possibleVehicles append vehCSATAttackHelis;\n  };\n};\nif(_preference in [\"AIR_DRONE\", \"AIR_GENERIC\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles append [vehNATOUAV, vehNATOUAVSmall];\n  }\n  else\n  {\n    _possibleVehicles append [vehCSATUAV, vehCSATUAVSmall];\n  };\n};\nif(_preference in [\"AIR_GENERIC\", \"AIR_DEFAULT\"]) then\n{\n  if(_side == Occupants) then\n  {\n    _possibleVehicles append [vehNATOPlane, vehNATOPlaneAA];\n  }\n  else\n  {\n    _possibleVehicles append [vehCSATPlane, vehCSATPlaneAA];\n  };\n};\n\nif(count _possibleVehicles == 0) exitWith\n{\n    [1, format [\"No result for %1, assuming bad parameter!\", _preference], _fileName] call A3A_fnc_log",
"[4, format [\"SelectVehicleType: Preselection done, possible vehicles are %1\", str _possibleVehicles], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Garrison/fn_shouldReinforce.sqf": [
"[\"_base\", \"_target\"];\n\nprivate _fileName = \"shouldReinforce\";\n[4, format [\"Checking if %1 should reinforce %2\", _base, _target], _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Garrison/fn_updatePreference.sqf": [
"[\"UpdatePreference: Updating preferences now, tierWar is %1\", tierWar];\n\n//No need to update the preferences\nif(tierPreference >= tierWar) exitWith {diag_log \"Aborting update of preferences!\";};\n\nfor \"_i\" from (tierPreference + 1) to tierWar do\n{\n  if(_i in airportUpdateTiers) then\n  {\n    _preference = garrison getVariable [\"Airport_preference\", []];\n    //Update vehicle types\n    [_preference] call A3A_fnc_updateVehicles;\n\n    //Add new vehicles\n    _index = airportUpdateTiers findIf {_x == _i};\n    if(_index % 2 == 0) then\n    {\n      _preference pushBack [\"LAND_LIGHT\", -1, \"SQUAD\"];\n      _preference pushBack [\"HELI_LIGHT\", -1, \"GROUP\"];\n    }\n    else\n    {\n      _preference pushBack [\"LAND_AIR\", -1, \"AA\"];\n      _preference pushBack [\"AIR_GENERIC\", -1, \"EMPTY\"];\n    };\n\n    if(true || debug) then\n    {\n      diag_log format [\"Airport_preference hit level %1\", tierWar];\n      [_preference, \"Airport_preference\"] call A3A_fnc_log",
"[\"Airport_preference\", _preference, true];\n    garrison setVariable [\"Airport_statics\", (airportStaticsTiers select _index), true];\n  };\n\n  if(_i in outpostUpdateTiers) then\n  {\n    _preference = garrison getVariable [\"Outpost_preference\", []];\n    //Update vehicle types\n    [_preference] call A3A_fnc_updateVehicles;\n\n    //Add new vehicles\n    _index = outpostUpdateTiers findIf {_x == _i};\n    if(_index % 2 == 0) then\n    {\n      _preference pushBack [\"LAND_LIGHT\", -1, \"SQUAD\"];\n    }\n    else\n    {\n      _preference pushBack [\"HELI_LIGHT\", -1, \"GROUP\"];\n    };\n    if(true || debug) then\n    {\n      diag_log format [\"Outpost_preference hit level %1\", tierWar];\n      [_preference, \"Outpost_preference\"] call A3A_fnc_log",
"[\"Outpost_preference\", _preference, true];\n    garrison setVariable [\"Outpost_statics\", (outpostStaticsTiers select _index), true];\n  };\n\n  if(_i in cityUpdateTiers) then\n  {\n    //Update preferences of cities\n    _preference = garrison getVariable [\"City_preference\", []];\n    _preference pushBack [\"LAND_LIGHT\", -1, \"GROUP\"];\n\n    if(true || debug) then\n    {\n      diag_log format [\"City_preference hit level %1\", tierWar];\n      [_preference, \"City_preference\"] call A3A_fnc_log",
"[\"City_preference\", _preference, true];\n\n    //Update statics percentage\n    _index = cityUpdateTiers findIf {_x == _i};\n    garrison setVariable [\"City_statics\", (cityStaticsTiers select _index), true];\n  };\n\n  if(_i in otherUpdateTiers) then\n  {\n    //Update preferences of other sites\n    _preference = garrison getVariable [\"Other_preference\", []];\n    //Update vehicle types\n    [_preference] call A3A_fnc_updateVehicles;\n\n    _preference pushBack [\"EMPTY\", 0, \"SQUAD\"];\n\n    if(true || debug) then\n    {\n      diag_log format [\"Other_preference hit level %1\", tierWar];\n      [_preference, \"Other_preference\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Intel/fn_placeIntel.sqf": [
"[\"_marker\", \"_isLarge\"];\n\n/*  Places the physical intel objects on markers\n*   Params:\n*       _marker : STRING : The name of the marker where the intel should be placed\n*       _isLarge : BOOLEAN : Determines whether the intel is large or medium\n*\n*   Returns:\n*       Nothing\n*/\n\nprivate _intelSize = if (_isLarge) then {\"large\"} else {\"medium\"};\nprivate _fileName = \"placeIntel\";\n[\n    3,\n    format [\"Spawning %2 intel on marker %1\", _marker, _intelSize],\n    _fileName,\n    true\n] call A3A_fnc_log",
"[\n        1,\n        format [\"Marker %1 is not suited to have intel!\", _marker, true],\n        _fileName,\n        true\n    ] call A3A_fnc_log",
"[\"Land_Cargo_Tower_V1_F\",\"Land_Cargo_Tower_V1_No1_F\",\"Land_Cargo_Tower_V1_No2_F\",\"Land_Cargo_Tower_V1_No3_F\",\"Land_Cargo_Tower_V1_No4_F\",\"Land_Cargo_Tower_V1_No5_F\",\"Land_Cargo_Tower_V1_No6_F\",\"Land_Cargo_Tower_V1_No7_F\",\"Land_Cargo_Tower_V2_F\", \"Land_Cargo_Tower_V3_F\"];\nprivate _listStaticHQ = [\"Land_Cargo_HQ_V1_F\", \"Land_Cargo_HQ_V2_F\", \"Land_Cargo_HQ_V3_F\"];\nprivate _listEnochRadar = [\"Land_Radar_01_HQ_F\"];\n\nprivate _allBuildings = nearestObjects [getMarkerPos _marker, _listStaticHQ + _listStaticTower + _listEnochRadar, _radius, true];\n\nif(count _allBuildings == 0) exitWith\n{\n    [\n        2,\n        format [\"No suitable buildings found on marker %1\", _marker],\n        _fileName,\n        true\n    ] call A3A_fnc_log",
"[_building buildingPos 9, -90]};\ncase ((typeof _building) in _listStaticHQ): {[_building buildingPos 1, -180]};\ncase ((typeof _building) in _listEnochRadar): {[_building buildingPos 24, -90]};\n};\n\nprivate _desk = createVehicle [\"Land_CampingTable_F\", [0, 0, 0], [], 0, \"CAN_COLLIDE\"];\n_desk setDir (getDir _building + (_spawnParameters select 1));\n_desk setPosATL (_spawnParameters select 0);\n_desk setVelocity [0, 0, -1];\n\n//Await until desk have hit the group, it tend to stuck in the air otherwise\nsleep 5;\n_desk enableSimulation false;\n\nprivate _intelType = \"\";\nif(_isLarge) then\n{\n    _intelType = \"Land_Laptop_unfolded_F\";\n    _spawnParameters = -25;\n}\nelse\n{\n    _intelType = \"Land_Document_01_F\";\n    _spawnParameters = -155;\n};\n\nprivate _intel = createVehicle [_intelType, [0,0,0], [], 0, \"CAN_COLLIDE\"];\n[_desk, _intel, [0.5, 0, 0.82], _spawnParameters] call BIS_fnc_relPosObject;\n_intel enableSimulation false;\n_intel allowDamage false;\n_intel setVariable [\"side\", _side, true];\n\nif(_isLarge) then\n{\n    //Place light on laptop\n    private _light = \"#lightpoint\" createVehicle (getPos _intel);\n    _light setLightBrightness 1.0;\n    _light setLightAmbient [0.005, 0.05, 0.07];\n    _light setLightColor [0.05, 0.05, 0.07];\n    _light setLightAttenuation [1,90,90,85,0,1];\n    _light lightAttachObject [_intel, [0,0,0]];\n\n    private _isTrap = (random 100 < (20 + (4 * tierWar)));\n    if(_isTrap) then\n    {\n        [3, format [\"Large intel on %1 is selected as trap, spawning explosives\", _marker], _fileName, true] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Intel/fn_selectIntel.sqf": [
"[\"_intelType\", \"_side\"];\n\n/*  Selects, creates and executes the intel of the given type and side\n*   Params:\n*       _intelType : STRING : One of \"Small\", \"Medium\" or \"Large\"\n*       _side : SIDE : The enemy side, which the intel belongs to\n*\n*   Returns:\n*       _text : STRING : The text of the selected intel\n*/\n\nprivate _fileName = \"selectIntel\";\nif(isNil \"_intelType\") exitWith\n{\n    [1, \"No intel type given!\", _fileName] call A3A_fnc_log",
"[1, \"No side given!\", _fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_AS_Traitor.sqf": [
"[date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeLimit];\n_dateLimitNum = dateToNumber _dateLimit;\n_dateLimit = numberToDate [date select 0, _dateLimitNum];//converts datenumber back to date array so that time formats correctly\n_displayTime = [_dateLimit] call A3A_fnc_dateToTimeString;//Converts the time portion of the date array to a string for clarity in hints\n\n_radiusX = [_markerX] call A3A_fnc_sizeMarker;\n_houses = (nearestObjects [_positionX, [\"house\"], _radiusX]) select {!((typeOf _x) in UPSMON_Bld_remove)};\n_posHouse = [];\n_houseX = _houses select 0;\nwhile {count _posHouse < 3} do\n\t{\n\t_houseX = selectRandom _houses;\n\t_posHouse = _houseX buildingPos -1;\n\tif (count _posHouse < 3) then {_houses = _houses - [_houseX]};\n\t};\n\n_max = (count _posHouse) - 1;\n_rnd = floor random _max;\n_posTraitor = _posHouse select _rnd;\n_posSol1 = _posHouse select (_rnd + 1);\n_posSol2 = (_houseX buildingExit 0);\n\n_nameDest = [_markerX] call A3A_fnc_localizar;\n\n_groupTraitor = createGroup Occupants;\n\n_arrayAirports = airportsX select {sidesX getVariable [_x,sideUnknown] == Occupants};\n_base = [_arrayAirports, _positionX] call BIS_Fnc_nearestPosition;\n_posBase = getMarkerPos _base;\n\n_traitor = [_groupTraitor, NATOOfficer2, _posTraitor, [], 0, \"NONE\"] call A3A_fnc_createUnit;\n_traitor allowDamage false;\n_traitor setPos _posTraitor;\n_sol1 = [_groupTraitor, NATOBodyG, _posSol1, [], 0, \"NONE\"] call A3A_fnc_createUnit;\n_sol2 = [_groupTraitor, NATOBodyG, _posSol2, [], 0, \"NONE\"] call A3A_fnc_createUnit;\n_groupTraitor selectLeader _traitor;\n\n_posTsk = (position _houseX) getPos [random 100, random 360];\n\n[[teamPlayer,civilian],\"AS\",[format [\"A traitor has scheduled a meeting with %4 in %1. Kill him before he provides enough intel to give us trouble. Do this before %2. We don't where exactly this meeting will happen. You will recognise the building by the nearby Offroad and %3 presence.\",_nameDest,_displayTime,nameOccupants],\"Kill the Traitor\",_markerX],_posTsk,false,0,true,\"Kill\",true] call BIS_fnc_taskCreate;\n[[Occupants],\"AS1\",[format [\"We arranged a meeting in %1 with a %3 contact who may have vital information about their Headquarters position. Protect him until %2.\",_nameDest,_displayTime,nameTeamPlayer],\"Protect Contact\",_markerX],getPos _houseX,false,0,true,\"Defend\",true] call BIS_fnc_taskCreate;\nmissionsX pushBack [\"AS\",\"CREATED\"]; publicVariable \"missionsX\";\ntraitorIntel = false; publicVariable \"traitorIntel\";\n\n{_nul = [_x,\"\"] call A3A_fnc_NATOinit; _x allowFleeing 0} forEach units _groupTraitor;\n_posVeh = [];\n_dirVeh = 0;\n_roads = [];\n_radius = 20;\nwhile {count _roads == 0} do\n\t{\n\t_roads = (getPos _houseX) nearRoads _radius;\n\t_radius = _radius + 10;\n\t};\n\n_road = _roads select 0;\n_posroad = getPos _road;\n_roadcon = roadsConnectedto _road; if (count _roadCon == 0) then {\n\tdiag_log format [\"%1: [Antistasi] | ERROR | AS_Traitor.sqf | Road has no connection :%2.\",servertime,position _road];\n\t};\nif (count _roadCon > 0) then\n\t{\n\t_posrel = getPos (_roadcon select 0);\n\t_dirveh = [_posroad,_posrel] call BIS_fnc_DirTo;\n\t}\nelse\n\t{\n\t_dirVeh = getDir _road;\n\t};\n_posVeh = [_posroad, 3, _dirveh + 90] call BIS_Fnc_relPos;\n_veh = vehSDKLightUnarmed createVehicle _posVeh;\n_veh allowDamage false;\n_veh setDir _dirVeh;\nsleep 15;\n_veh allowDamage true;\n_traitor allowDamage true;\n[_veh, Occupants] call A3A_fnc_AIVEHinit;\n{_x disableAI \"MOVE\"; _x setUnitPos \"UP\"} forEach units _groupTraitor;\n\n_mrk = createMarkerLocal [format [\"%1patrolarea\", floor random 100], getPos _houseX];\n_mrk setMarkerShapeLocal \"RECTANGLE\";\n_mrk setMarkerSizeLocal [50,50];\n_mrk setMarkerTypeLocal \"hd_warning\";\n_mrk setMarkerColorLocal \"ColorRed\";\n_mrk setMarkerBrushLocal \"DiagGrid\";\n_mrk setMarkerAlphaLocal 0;\n\n_typeGroup = if (random 10 < tierWar) then {NATOSquad} else {[policeOfficer,policeGrunt,policeGrunt,policeGrunt,policeGrunt,policeGrunt,policeGrunt,policeGrunt]};\n_groupX = [_positionX,Occupants, NATOSquad] call A3A_fnc_spawnGroup;\nsleep 1;\nif (random 10 < 2.5) then\n\t{\n\t_dog = [_groupX, \"Fin_random_F\",_positionX,[],0,\"FORM\"] call A3A_fnc_createUnit;\n\t[_dog] spawn A3A_fnc_guardDog;\n\t};\n_nul = [leader _groupX, _mrk, \"SAFE\",\"SPAWNED\", \"NOVEH2\", \"NOFOLLOW\"] execVM \"scripts\\UPSMON.sqf\";\n{[_x,\"\"] call A3A_fnc_NATOinit} forEach units _groupX;\n\nwaitUntil {sleep 1; (traitorIntel) || {(dateToNumber date > _dateLimitNum) or {(not alive _traitor) or {({_traitor knowsAbout _x > 1.4} count ([500,0,_traitor,teamPlayer] call A3A_fnc_distanceUnits) > 0)}}}};\n\nif ({_traitor knowsAbout _x > 1.4} count ([500,0,_traitor,teamPlayer] call A3A_fnc_distanceUnits) > 0) then\n\t{\n\t{_x enableAI \"MOVE\"} forEach units _groupTraitor;\n\t_traitor assignAsDriver _veh;\n\t[_traitor] orderGetin true;\n\t_wp0 = _groupTraitor addWaypoint [_posVeh, 0];\n\t_wp0 setWaypointType \"GETIN\";\n\t_wp1 = _groupTraitor addWaypoint [_posBase,1];\n\t_wp1 setWaypointType \"MOVE\";\n\t_wp1 setWaypointBehaviour \"CARELESS\";\n\t_wp1 setWaypointSpeed \"FULL\";\n\t};\n\nwaitUntil  {sleep 1; (traitorIntel) || {(dateToNumber date > _dateLimitNum) or {(not alive _traitor) or {(_traitor distance _posBase < 20)}}}};\n\nif (not alive _traitor || traitorIntel) then\n{\n\t[\"AS\",[format [\"A traitor has scheduled a meeting with %3 in %1. Kill him before he provides enough intel to give us trouble. Do this before %2. We don't where exactly this meeting will happen. You will recognise the building by the nearby Offroad and %3 presence.\",_nameDest,_displayTime,nameOccupants],\"Kill the Traitor\",_markerX],_traitor,\"SUCCEEDED\"] call A3A_fnc_taskUpdate;\n\t[\"AS1\",[format [\"We arranged a meeting in %1 with a %3 contact who may have vital information about their Headquarters position. Protect him until %2.\",_nameDest,_displayTime,nameTeamPlayer],\"Protect Contact\",_markerX],getPos _houseX,\"FAILED\"] call A3A_fnc_taskUpdate;\n\n\tif(traitorIntel && (alive _traitor)) then\n\t{\n\t\t{[petros,\"hint\",\"Someone found some intel on the traitors family, he will not cause any problems any more!\"] remoteExec [\"A3A_fnc_commsMP\",_x]} forEach ([500,0,_traitor,teamPlayer] call A3A_fnc_distanceUnits);\n\n\t\tmoveOut _traitor;\n\t\t_traitor join grpNull;\n\t\t_traitor setCaptive true;\n\t\t_traitor stop true;\n\t\t_traitor setUnitPos \"UP\";\n\t\t_traitor playMoveNow \"AmovPercMstpSnonWnonDnon_AmovPercMstpSsurWnonDnon\";\n\t\t_traitor setSpeaker \"NoVoice\";\n\n\t\t_wp1 = _groupTraitor addWaypoint [_posBase];\n\t\t_wp1 setWaypointType \"MOVE\";\n\t\t_wp1 setWaypointBehaviour \"CARELESS\";\n\t\t_wp1 setWaypointSpeed \"FULL\";\n\t};\n\n\t_factor = 1;\n\tif(_difficultX) then {_factor = 2;};\n    [\n        3,\n        \"Rebels won a traitor mission\",\n        \"aggroEvent\",\n        true\n    ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_DES_Heli.sqf": [
"[_missionOrigin,sideUnknown] == Occupants) then {Occupants} else {Invaders};\n[3, format [\"Origin: %1, Hardmode: %2, Controlling Side: %3\", _missionOrigin, _difficult, _sideX], _filename] call A3A_fnc_log",
"[];\nwhile {true} do {\n\t_posCrashOrigin = _missionOriginPos getPos [_dist,_ang];\n\tif ((!surfaceIsWater _posCrashOrigin) and (_posCrashOrigin distance (getMarkerPos respawnTeamPlayer) < 4000) and (_posCrashOrigin distance (getMarkerPos respawnTeamPlayer) > 1000)) exitWith {};\n\t_ang = _ang + 1;\n\t_countX = _countX + 1;\n\tif (_countX > 360) then\n\t\t{\n\t\t_countX = 0;\n\t\t_dist = _dist - 500;\n\t\t};\n};\n\n// selecting Aircraft\nprivate _heliPool =if (_sideX == Occupants) then {vehNATOTransportHelis + vehNATOAttackHelis} else {vehCSATAttackHelis + vehCSATTransportHelis};\nprivate _typeVehH = selectRandom (_heliPool select {_x isKindOf \"Helicopter\"});\nif (isNil \"_typeVehH\") exitWith {\n\t[\"DES\"] remoteExecCall [\"A3A_fnc_missionRequest\",2];\n\t[1, format [\"No aircrafts in arrays VehNatoTransportHelis, VehNatoAttackHelis or VehCSATTransportHelis, VehCSATAttackHelis. Reselecting DES mission\"], _filename] call A3A_fnc_log",
"[_posCrashOrigin, 0, 1000, 0, 0, 0.1] call BIS_fnc_findSafePos;\nprivate _posCrash = _flatPos findEmptyPosition [0,100,_typeVehH];\nif (count _posCrash == 0) then {_posCrash = _posCrashOrigin};//if no pos use _posCrashOrigin\nif (!isMultiplayer) then {{ _x hideObject true } foreach (nearestTerrainObjects [_posCrash,[\"tree\",\"bush\", \"ROCKS\"],50])} else {{[_x,true] remoteExec [\"hideObjectGlobal\",2]} foreach (nearestTerrainObjects [_posCrash,[\"tree\",\"bush\", \"ROCKS\"],50])};//clears area of trees and bushes\n[3, format [\"Crash Location: %1, Aircraft: %2\", _posCrash, _typeVehH], _filename] call A3A_fnc_log",
"[];\nprivate _groups = [];\n\n//createing crashed helicopter\nprivate _crater = \"CraterLong\" createVehicle _posCrash;\nprivate _heli = createVehicle [_typeVehH, [_posCrash select 0, _posCrash select 1, 0.9], [], 0, \"CAN_COLLIDE\"];\nprivate _smoke = \"test_EmptyObjectForSmoke\" createVehicle _posCrash; _smoke attachTo [_heli,[0,1.5,-1]];\n_heli setDamage 0.8;\n_vehicles append [_heli,_crater];\n\n//creating cover\nprivate _typeVeh = \"Land_BagFence_01_long_green_F\";\nprivate _counterLimit = round (random[2,3,4]*_bonus);\nprivate _counter = 0;\nprivate _angle = random 360;\nwhile {_counter != _counterLimit} do {\n\t_counter = _counter + 1;\n\t_angle = _angle + 45 + round random 90;\n\tprivate _pos = _posCrash getPos [10,_angle];\n\tif !(isOnRoad _pos) then {\n\tprivate _cov = _typeVeh createVehicle _pos;\n\tprivate _dir = _posCrash getDir _pos;\n\t_cov setDir _dir;\n\t_vehicles pushBack _cov;\n\t} else {_counter = _counter -1};\n};\n\n//creating mission marker near crash site\nprivate _posCrashMrk = _heli getRelPos [random 500,random 360];\nprivate _taskMrk = createMarker [format [\"DES%1\", random 100],_posCrashMrk];\n_taskMrk setMarkerShape \"ICON\";\n\n//finding timelimit for mission\nprivate _timeLimit = 120;\nprivate _dateLimit = [date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeLimit];\nprivate _dateLimitNum = dateToNumber _dateLimit;\n\n//creating mission\n[2, format [\"Creating Helicopter Down mission\"], _filename] call A3A_fnc_log",
"[_missionOrigin] call A3A_fnc_localizar;\nprivate _text = format [\"We have downed a helicopter. There is a good chance to destroy it before it is recovered. Do it before a recovery team from %1 reaches the crash site. MOVE QUICKLY\",_location];\n[[teamPlayer,civilian],\"DES\",[_text,\"Downed Heli\",_taskMrk],_posCrashMrk,false,0,true,\"Destroy\",true] call BIS_fnc_taskCreate;\nmissionsX pushBack [\"DES\",\"CREATED\"]; publicVariable \"missionsX\";\n\n////////////////\n//convoy spawn//\n////////////////\n\n//finding road\nprivate _radiusX = 100;\nprivate _roads = [];\nwhile {true} do {\n\t_roads = _missionOriginPos nearRoads _radiusX;\n\tif (count _roads > 1) exitWith {};\n\t_radiusX = _radiusX + 50;\n};\nprivate _roadE = _roads select 1;\nprivate _roadR = _roads select 0;\nsleep 1;\n\n//Spawning escort\n _typeVeh = if (_sideX == Occupants) then {selectRandom vehNATOLightUnarmed} else {selectRandom vehCSATLightUnarmed};\nprivate _vehicleDataE = [position _roadE, 0,_typeVeh, _sideX] call bis_fnc_spawnvehicle;\nprivate _vehE = _vehicleDataE select 0;\n_vehE limitSpeed 50;\n[_vehE,\"Escort\"] spawn A3A_fnc_inmuneConvoy;\nprivate _vehCrew = crew _vehE;\n{[_x] call A3A_fnc_NATOinit} forEach _vehCrew;\n[_vehE, _sideX] call A3A_fnc_AIVEHinit;\nprivate _groupVeh = _vehicleDataE select 2;\n_groups pushBack _groupVeh;\n_vehicles pushBack _vehE;\n\n[3, format [\"Crash Location: %1, Lite Vehicle: %2\", _posCrash, _typeVeh], _filename] call A3A_fnc_log",
"[_missionOriginPos, _sideX, _typeGroup] call A3A_fnc_spawnGroup;\n{_x assignAsCargo _vehE; _x moveInCargo _vehE; [_x] join _groupVeh; [_x] call A3A_fnc_NATOinit} forEach units _groupX;\ndeleteGroup _groupX;\n\n//moving to crash site\nprivate _escortWP = _groupVeh addWaypoint [_posCrash, 0];\n_escortWP setWaypointType \"GETOUT\";\n_escortWP setWaypointBehaviour \"SAFE\";\n[3, format [\"Placed Group: %1 in Lite Vehicle and set waypoint %2\", _typeGroup, _posCrash], _filename] call A3A_fnc_log",
"[position _roadR, 0,_typeVeh, _sideX] call bis_fnc_spawnvehicle;\nprivate _vehR = _vehicleDataR select 0;\n_vehR limitSpeed 50;\n[_vehR, _sideX] call A3A_fnc_AIVEHinit;\nsleep 1;\n[_vehR,\"Repair Truck\"] spawn A3A_fnc_inmuneConvoy;\nprivate _groupVehR = _vehicleDataR select 2;\nprivate _vehCrewR = units _groupVehR;\n{[_x] call A3A_fnc_NATOinit} forEach _vehCrewR;\n_groups pushBack _groupVehR;\n_vehicles pushBack _vehR;\n\n//moving to crash site\n_reapirTruckWP = _groupVehR addWaypoint [_posCrash, 0];\n_reapirTruckWP setWaypointType \"MOVE\";\n_reapirTruckWP setWaypointBehaviour \"SAFE\";\n[3, format [\"Transport Vehicle: %1, Crew: %2, Waypoint: %3\", _typeVeh, _vehCrewR, _posCrash], _filename] call A3A_fnc_log",
"[3, format [\"Waiting until %1 is destroyed or %2 has reached %1, or mission expires at: %3\", _heli, _vehR, _dateLimit], _filename] call A3A_fnc_log",
"[format [\"%1patrolarea\", floor random 100], _posCrash];\n_mrkCrash setMarkerShapeLocal \"RECTANGLE\";\n_mrkCrash setMarkerSizeLocal [20,20];\n_mrkCrash setMarkerTypeLocal \"hd_warning\";\n_mrkCrash setMarkerColorLocal \"ColorRed\";\n_mrkCrash setMarkerBrushLocal \"DiagGrid\";\nif (!debug) then {_mrkCrash setMarkerAlphaLocal 0};\n\n//creating guard\nprivate [\"_guard\", \"_guardWP\", \"_vehGuard\"];\n_typeGroup = if (_sideX == Occupants) then {NATOSquad} else {CSATSquad};\n//if not patrol heli\nif !(_typeVehH == vehNATOPatrolHeli) then {\n\t//spawning guard inf\n\t_guard = [_posCrash, _sideX, _typeGroup] call A3A_fnc_spawnGroup;\n\t{[_x] call A3A_fnc_NATOinit} forEach units _guard;\n\t_groups pushBack _guard;\n\n\t//tell guard group to guard heli\n\t_guardWP = [_guard, _posCrash, 10] call BIS_fnc_taskPatrol;\n\n\t[3, format [\"Location: %1, Guard Squad spawned\", _posCrash], _filename] call A3A_fnc_log",
"[15, 30 ,_typeVeh];\n\t\tif (_posVehHT isEqualTo []) then {_posVehHT = _posCrash findEmptyPosition [15, 100 ,_typeVeh]}; //if it fails to find a pos expand and try again\n\t\t_vehGuard = _typeVeh createVehicle _posVehHT;\n\t\t[_vehGuard, _sideX] call A3A_fnc_AIVEHinit;\n\t\t_vehicles pushBack _vehGuard;\n\t};\n};\n\n//spawning pilots\n_typeGroup = if (_sideX == Occupants) then {[NATOPilot, NATOPilot]} else {[CSATPilot, CSATPilot]};\n_pilots = [_posCrash,_sideX,_typeGroup] call A3A_fnc_spawnGroup;\n{[_x,\"\"] call A3A_fnc_NATOinit} forEach units _pilots;\n_groups pushBack _pilots;\n[_heli, _sideX] call A3A_fnc_AIVEHinit;\n\n//tell pilots to hide at heli\nprivate _pilotsWP = _pilots addWaypoint [_posCrash, 0];\n_pilotsWP setWaypointType \"HOLD\";\n_pilotsWP setWaypointBehaviour \"STEALTH\";\n\n[3, format [\"Waiting until %1 reaches origin or rebel base, gets destroyed, timer expires at %3 or %2 reaches %1\", _heli, _vehR, _dateLimit], _filename] call A3A_fnc_log",
"[3, format [\"Repair %1 has reached %2, starting repair...\", _vehR, _heli], _filename] call A3A_fnc_log",
"[3, format [\"%1 has repaired %2, %3 is heading back to %4\", _sideX,_heli,_vehR,_missionOriginPos], _filename] call A3A_fnc_log",
"[_guard, _i];\n\t\t};\n\t\tfor \"_i\" from (count (waypoints _pilots)) to 0 step -1 do {\n\t\t\tdeleteWaypoint [_pilots, _i];\n\t\t};\n\n\t\t//Repair truck & escort RTB\n\t\t_reapirTruckWP = _groupVehR addWaypoint [_missionOriginPos, 1];\n\t\t_reapirTruckWP setWaypointType \"MOVE\";\n\t\t_reapirTruckWP setWaypointBehaviour \"SAFE\";\n\n\t\t_escortWP = _groupVeh addWaypoint [_posCrash, 0];\n\t\t_escortWP setWaypointType \"GETIN\";\n\t\t_escortWP setWaypointBehaviour \"SAFE\";\n\n\t\t_escortWP = _groupVeh addWaypoint [_missionOriginPos, 2];\n\t\t_escortWP setWaypointType \"MOVE\";\n\t\t_escortWP setWaypointBehaviour \"SAFE\";\n\n\t\t[3, format [\"Pilots and Guard are RTB\"], _filename] call A3A_fnc_log",
"[_x] call A3A_fnc_canFight) exitWith {_notAlivePilots = false}}forEach units _pilots;\n\n\n\t\tif ((_typeVehH in vehNATOTransportHelis)||(_typeVehH in vehCSATTransportHelis)) then {\n\t\t\tif !(_typeVehH == vehNATOPatrolHeli) then {\n\t\t\t\t//guard move in back of heli, pilots wait for them to load\n\t\t\t\tif (_notAlivePilots) then {_guard addVehicle _heli} else {{_x assignAsCargo _heli}forEach units _guard};\n\t\t\t\t(units _guard) orderGetIn true;\n\t\t\t\tsleep 1;\n\t\t\t};\n\t\t\tif (_notAlivePilots && !(_typeVehH == vehNATOPatrolHeli)) then {\n\t\t\t\t_pilotsWP = _guard addWaypoint [_missionOriginPos, 3];\n\t\t\t\t_pilotsWP setWaypointType \"MOVE\";\n\t\t\t\t_pilotsWP setWaypointBehaviour \"AWARE\";\n\t\t\t\t_pilotsWP setWaypointSpeed \"FULL\";\n\t\t\t} else {\n\t\t\t\t_pilotsWP = _pilots addWaypoint [_missionOriginPos, 3];\n\t\t\t\t_pilotsWP setWaypointType \"MOVE\";\n\t\t\t\t_pilotsWP setWaypointBehaviour \"AWARE\";\n\t\t\t\t_pilotsWP setWaypointSpeed \"FULL\";\n\t\t\t};\n\t\t} else {\n\t\t\t//guard mount in own vehicle and RTB\n\t\t\t_guard addVehicle _vehGuard;\n\t\t\tif (_notAlivePilots) then {_guard addVehicle _heli};\n\t\t\t(units _guard) orderGetIn true;\n\t\t\tsleep 1;\n\t\t\t_guardWP = _guard addWaypoint [_missionOriginPos, 1];\n\t\t\t_guardWP setWaypointType \"MOVE\";\n\t\t\t_guardWP setWaypointBehaviour \"AWARE\";\n\t\t\t_guardWP setWaypointSpeed \"FULL\";\n\t\t\t_guard setCurrentWaypoint [_guard, 1];\n\t\t\t_pilotsWP = _pilots addWaypoint [_missionOriginPos, 3];\n\t\t\t_pilotsWP setWaypointType \"MOVE\";\n\t\t\t_pilotsWP setWaypointBehaviour \"AWARE\";\n\t\t\t_pilotsWP setWaypointSpeed \"FULL\";\n\t\t};\n\t};\n};\n\n////////////////\n//Mission done//\n////////////////\n[3, format [\"Waiting until %1 reaches origin or rebel base, gets destroyed or timer expires at %2\", _heli, _dateLimit], _filename] call A3A_fnc_log",
"[3, format [\"%1 was captured\", _heli], _filename] call A3A_fnc_log",
"[3, format [\"%1 was destroyed\", _heli], _filename] call A3A_fnc_log",
"[\"DES\",[_text,\"Downed Heli\",_taskMrk],_posCrashMrk,\"SUCCEEDED\",\"Destroy\"] call A3A_fnc_taskUpdate;\n\t[0,300*_bonus] remoteExec [\"A3A_fnc_resourcesFIA\",2];\n\t[1800*_bonus, _sideX] remoteExec [\"A3A_fnc_timingCA\",2];\n\t{if (_x distance _heli < 500) then {[10*_bonus,_x] call A3A_fnc_playerScoreAdd}} forEach (allPlayers - (entities \"HeadlessClient_F\"));\n\t[5*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\tif (_typeVehH in (vehNATOAttackHelis + vehCSATAttackHelis)) then {[600*_bonus, _sideX] remoteExec [\"A3A_fnc_timingCA\",2]};\n} else {\n\t[3, format [\"%1 was successfully recovered by %2, mission failed\", _heli, _sideX], _filename] call A3A_fnc_log",
"[\"DES\",[_text,\"Downed Heli\",_taskMrk],_posCrashMrk,\"FAILED\",\"Destroy\"] call A3A_fnc_taskUpdate;\n\t[-600*_bonus, _sideX] remoteExec [\"A3A_fnc_timingCA\",2];\n\t[-10*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\tif (_typeVehH in (vehNATOAttackHelis + vehCSATAttackHelis)) then {[-600*_bonus, _sideX] remoteExec [\"A3A_fnc_timingCA\",2]};\n};\n[2, format [\"Downed Heli mission completed\"], _filename] call A3A_fnc_log",
"[1200,\"DES\"] spawn A3A_fnc_deleteTask;\ndeleteMarker _taskMrk;\ndeleteMarker _mrkCrash;\n\n//delete units, vehicles and groups\n{[_x] spawn A3A_fnc_vehDespawner} forEach _vehicles;\n{[_x] spawn A3A_fnc_groupDespawner} forEach _groups;\n[3, format [\"Downed Heli clean up complete\"], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_LOG_Bank.sqf": [
"[\"_banco\",\"_markerX\",\"_difficultX\",\"_leave\",\"_contactX\",\"_groupContact\",\"_tsk\",\"_posHQ\",\"_citiesX\",\"_city\",\"_radiusX\",\"_positionX\",\"_posHouse\",\"_nameDest\",\"_timeLimit\",\"_dateLimit\",\"_dateLimitNum\",\"_posBase\",\"_pos\",\"_truckX\",\"_countX\",\"_mrkFinal\",\"_mrk\",\"_soldiers\"];\n_banco = _this select 0;\n_markerX = [citiesX,_banco] call BIS_fnc_nearestPosition;\n\n_difficultX = if (random 10 < tierWar) then {true} else {false};\n_leave = false;\n_contactX = objNull;\n_groupContact = grpNull;\n_tsk = \"\";\n_positionX = getPosASL _banco;\n\n_posbase = getMarkerPos respawnTeamPlayer;\n\n_timeLimit = if (_difficultX) then {60} else {120};\nif (hasIFA) then {_timeLimit = _timeLimit * 2};\n_dateLimit = [date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeLimit];\n_dateLimitNum = dateToNumber _dateLimit;\n_dateLimit = numberToDate [date select 0, _dateLimitNum];//converts datenumber back to date array so that time formats correctly\n_displayTime = [_dateLimit] call A3A_fnc_dateToTimeString;//Converts the time portion of the date array to a string for clarity in hints\n\n_city = [citiesX, _positionX] call BIS_fnc_nearestPosition;\n_mrkFinal = createMarker [format [\"LOG%1\", random 100], _positionX];\n_nameDest = [_city] call A3A_fnc_localizar;\n_mrkFinal setMarkerShape \"ICON\";\n//_mrkFinal setMarkerType \"hd_destroy\";\n//_mrkFinal setMarkerColor \"ColorBlue\";\n//_mrkFinal setMarkerText \"Bank\";\n\n_pos = (getMarkerPos respawnTeamPlayer) findEmptyPosition [1,50,\"C_Van_01_box_F\"];\n\n_truckX = \"C_Van_01_box_F\" createVehicle _pos;\n{_x reveal _truckX} forEach (allPlayers - (entities \"HeadlessClient_F\"));\n[_truckX, teamPlayer] call A3A_fnc_AIVEHinit;\n_truckX setVariable [\"destinationX\",_nameDest,true];\n_truckX addEventHandler [\"GetIn\",\n\t{\n\tif (_this select 1 == \"driver\") then\n\t\t{\n\t\t_textX = format [\"Bring this truck to %1 Bank and park it in the main entrance\",(_this select 0) getVariable \"destinationX\"];\n\t\t[\"Bank Mission\", _textX] remoteExecCall [\"A3A_fnc_customHint\", _this select 2];\n\t\t};\n\t}];\n\n[_truckX,\"Mission Vehicle\"] spawn A3A_fnc_inmuneConvoy;\n\n[[teamPlayer,civilian],\"LOG\",[format [\"We know Gendarmes are guarding a large amount of money in the bank of %1. Take this truck and go there before %2, hold the truck close to tha bank's main entrance for 2 minutes and the money will be transferred to the truck. Bring it back to HQ and the money will be ours.\",_nameDest,_displayTime],\"Bank Robbery\",_mrkFinal],_positionX,false,0,true,\"Interact\",true] call BIS_fnc_taskCreate;\nmissionsX pushBack [\"LOG\",\"CREATED\"]; publicVariable \"missionsX\";\n_mrk = createMarkerLocal [format [\"%1patrolarea\", floor random 100], _positionX];\n_mrk setMarkerShapeLocal \"RECTANGLE\";\n_mrk setMarkerSizeLocal [30,30];\n_mrk setMarkerTypeLocal \"hd_warning\";\n_mrk setMarkerColorLocal \"ColorRed\";\n_mrk setMarkerBrushLocal \"DiagGrid\";\n_mrk setMarkerAlphaLocal 0;\n\n_groups = [];\n_soldiers = [];\nfor \"_i\" from 1 to 4 do\n\t{\n\t_groupX = if (_difficultX) then {[_positionX,Occupants, groupsNATOSentry] call A3A_fnc_spawnGroup} else {[_positionX,Occupants, groupsNATOGen] call A3A_fnc_spawnGroup};\n\tsleep 1;\n\t_nul = [leader _groupX, _mrk, \"SAFE\",\"SPAWNED\", \"NOVEH2\", \"FORTIFY\"] execVM \"scripts\\UPSMON.sqf\";\n\t{[_x,\"\"] call A3A_fnc_NATOinit; _soldiers pushBack _x} forEach units _groupX;\n\t_groups pushBack _groupX;\n\t};\n\n_positionX = _banco buildingPos 1;\n\nwaitUntil {sleep 1; (dateToNumber date > _dateLimitNum) or (!alive _truckX) or (_truckX distance _positionX < 7)};\n_bonus = if (_difficultX) then {2} else {1};\nif ((dateToNumber date > _dateLimitNum) or (!alive _truckX)) then\n\t{\n\t[\"LOG\",[format [\"We know Gendarmes is guarding a large amount of money in the bank of %1. Take this truck and go there before %2, hold the truck close to tha bank's main entrance for 2 minutes and the money will be transferred to the truck. Bring it back to HQ and the money will be ours.\",_nameDest,_displayTime],\"Bank Robbery\",_mrkFinal],_positionX,\"FAILED\",\"Interact\"] call A3A_fnc_taskUpdate;\n\t[-1800*_bonus, Occupants] remoteExec [\"A3A_fnc_timingCA\",2];\n\t[-10*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\t}\nelse\n\t{\n\t_countX = 120*_bonus;//120\n\t[[_positionX,Occupants,\"\",true],\"A3A_fnc_patrolCA\"] remoteExec [\"A3A_fnc_scheduler\",2];\n\t[10*_bonus,-20*_bonus,_markerX] remoteExec [\"A3A_fnc_citySupportChange\",2];\n\t[\"TaskFailed\", [\"\", format [\"Bank of %1 being assaulted\",_nameDest]]] remoteExec [\"BIS_fnc_showNotification\",Occupants];\n\t{_friendX = _x;\n\tif (_friendX distance _truckX < 300) then\n\t\t{\n\t\tif ((captive _friendX) and (isPlayer _friendX)) then {[_friendX,false] remoteExec [\"setCaptive\",0,_friendX]; _friendX setCaptive false};\n\t\t{if (side _x == Occupants) then {_x reveal [_friendX,4]};\n\t\t} forEach allUnits;\n\t\t};\n\t} forEach ([distanceSPWN,0,_positionX,teamPlayer] call A3A_fnc_distanceUnits);\n\t_exit = false;\n\twhile {(_countX > 0) or (_truckX distance _positionX < 7) and (alive _truckX) and (dateToNumber date < _dateLimitNum)} do\n\t\t{\n\t\twhile {(_countX > 0) and (_truckX distance _positionX < 7) and (alive _truckX)} do\n\t\t\t{\n\t\t\t_formatX = format [\"%1\", _countX];\n\t\t\t{if (isPlayer _x) then {[petros,\"countdown\",_formatX] remoteExec [\"A3A_fnc_commsMP\",_x]}} forEach ([80,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits);\n\t\t\tsleep 1;\n\t\t\t_countX = _countX - 1;\n\t\t\t};\n\t\tif (_countX > 0) then\n\t\t\t{\n\t\t\t_countX = 120*_bonus;//120\n\t\t\tif (_truckX distance _positionX > 6) then {{[petros,\"hint\",\"Don't get the truck far from the bank or count will restart\", \"Bank Mission\"] remoteExec [\"A3A_fnc_commsMP\",_x]} forEach ([200,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits)};\n\t\t\twaitUntil {sleep 1; (!alive _truckX) or (_truckX distance _positionX < 7) or (dateToNumber date < _dateLimitNum)};\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\tif (alive _truckX) then\n\t\t\t\t{\n\t\t\t\t{if (isPlayer _x) then {[petros,\"hint\",\"Drive the Truck back to base to finish this mission\", \"Bank Mission\"] remoteExec [\"A3A_fnc_commsMP\",_x]}} forEach ([80,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits);\n\t\t\t\t_exit = true;\n\t\t\t\t};\n\t\t\t//waitUntil {sleep 1; (!alive _truckX) or (_truckX distance _positionX > 7) or (dateToNumber date < _dateLimitNum)};\n\t\t\t};\n\t\tif (_exit) exitWith {};\n\t\t};\n\t};\n\n\nwaitUntil {sleep 1; (dateToNumber date > _dateLimitNum) or (!alive _truckX) or (_truckX distance _posbase < 50)};\nif ((_truckX distance _posbase < 50) and (dateToNumber date < _dateLimitNum)) then\n\t{\n\t[\"LOG\",[format [\"We know Gendarmes is guarding a large amount of money in the bank of %1. Take this truck and go there before %2, hold the truck close to tha bank's main entrance for 2 minutes and the money will be transferred to the truck. Bring it back to HQ and the money will be ours.\",_nameDest,_displayTime],\"Bank Robbery\",_mrkFinal],_positionX,\"SUCCEEDED\",\"Interact\"] call A3A_fnc_taskUpdate;\n\t[0,5000*_bonus] remoteExec [\"A3A_fnc_resourcesFIA\",2];\n    [\n        3,\n        \"Rebels won a bank mission\",\n        \"aggroEvent\",\n        true\n    ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_LOG_Salvage.sqf": [
"[\"_markerX\"];\n\n[2, format [\"Creating Salvage mission\"], _filename] call A3A_fnc_log",
"[_positionX, _firstPos,\"waterDepth\", 5, 20]) select 0) + [0];\nprivate _mrk2Pos = (selectRandom (selectBestPlaces [_mrk1Pos, 300,\"waterDepth\", 5, 20]) select 0) + [0];\nprivate _mrk3Pos = (selectRandom (selectBestPlaces [_mrk2Pos, 300,\"waterDepth\", 5, 20]) select 0) + [0];\n\n//Create markers for treasure locations!\nprivate _mrk1 = createMarker [\"salvageLocation1\", _mrk1Pos];\n_mrk1 setMarkerShape \"ELLIPSE\";\n_mrk1 setMarkerSize [25, 25];\nprivate _mrk2 = createMarker [\"salvageLocation2\", _mrk2Pos];\n_mrk2 setMarkerShape \"ELLIPSE\";\n_mrk2 setMarkerSize [25, 25];\nprivate _mrk3 = createMarker [\"salvageLocation3\", _mrk3Pos];\n_mrk3 setMarkerShape \"ELLIPSE\";\n_mrk3 setMarkerSize [25, 25];\n\n[3, format [\"Salvage Mission Positions: %1, %2, %3\", _mrk1Pos, _mrk2Pos, _mrk3Pos], _filename] call A3A_fnc_log",
"[_markerX,sideUnknown] == Occupants) then {Occupants} else {Invaders};\n\n//Set time limit on mission\nprivate _timeLimit = if (_difficultX) then {30} else {60};\nprivate _dateLimit = [date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeLimit];\nprivate _dateLimitNum = dateToNumber _dateLimit;\n_dateLimit = numberToDate [date select 0, _dateLimitNum];//converts datenumber back to date array so that time formats correctly\nprivate _displayTime = [_dateLimit] call A3A_fnc_dateToTimeString;//Converts the time portion of the date array to a string for clarity in hints\n\n//Name of seaport marker\nprivate _nameDest = [_markerX] call A3A_fnc_localizar;\nprivate _title = \"Salvage supplies\";\nprivate _text = format [\"A supply shipment was sunk outside of %1. Go there and recover the supplies before %2. You will need to get a hold of a boat with a winch to recover the shipment, check beaches for civilian boats you can commandeer.\", _nameDest, _displayTime];\n[[teamPlayer, civilian], \"LOG\",[ _text, _title, [_mrk1, _mrk2, _mrk3]], _positionX, false, 0, true, \"rearm\", true] call BIS_fnc_taskCreate;\n\nmissionsX pushBack [\"LOG\",\"CREATED\"]; publicVariable \"missionsX\";\n\n//salvageRope action\n[] remoteExec [\"A3A_fnc_SalvageRope\", 0, true];\n\n[3, format [\"Mission created, waiting for players to get near\"], _filename] call A3A_fnc_log",
"[_markerX,sideUnknown] == teamPlayer))};\n[3, format [\"players in spawning range, starting spawning\"], _filename] call A3A_fnc_log",
"[_mrk1Pos, _mrk2Pos, _mrk3Pos];\nprivate _shipPos = _boxPos vectorAdd [4, -5, 2];\n\nprivate _ship = _shipType createVehicle _shipPos;\nprivate _box = _boxType createVehicle _boxPos;\n\n//Used in salvage rope\n_box setVariable [\"SalvageCrate\", true, true];\nprivate _crateContents = selectRandom [\n\t[_box, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 5, 10, 0, 0], \n\t[_box, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0], \n\t[_box, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n];\n_crateContents call A3A_fnc_fillLootCrate;\n[3, format [\"Box spawned\"], _filename] call A3A_fnc_log",
"[3, format [\"Spawning patrol boat and crew\"], _filename] call A3A_fnc_log",
"[_mrk1Pos, _mrk2Pos, _mrk3Pos];\n\nprivate _veh = createVehicle [_typeVeh, _boatSpawnLocation, [], 0, \"NONE\"];\n[_veh, _sideX] call A3A_fnc_AIVEHinit;\nprivate _vehCrewGroup = [_positionX,_sideX, _typeGroup] call A3A_fnc_spawnGroup;\nprivate _vehCrew = units _vehCrewGroup;\n{_x moveInAny _veh} forEach (_vehCrew);\n_vehCrewGroup addVehicle _veh;\n{[_x,\"\"] call A3A_fnc_NATOinit} forEach _vehCrew;\n\n//While the boat is alive, we remove undercover from nearby players\n[_veh, [_mrk1Pos, _mrk2Pos, _mrk3Pos]] spawn {\n\tparams [\"_veh\", \"_positions\"];\n\twhile {alive _veh} do {\n\t\tsleep 2;\n\t\tprivate _nearbyPlayers = allPlayers inAreaArray [getPos _veh, 150, 150];\n\t\t{ [_x, false] remoteExec [\"setCaptive\", _x] } forEach _nearbyPlayers;\n\n\t\tprivate _vehGroup = group _veh;\n\t\tif (_vehGroup != grpNull && {currentWaypoint _vehGroup == count waypoints _vehGroup}) then {\n\t\t\tprivate _newWaypoint = _vehGroup addWaypoint [selectRandom _positions, 30];\n\t\t\t_newWaypoint setWaypointType \"MOVE\";\n\t\t\t_vehGroup setCurrentWaypoint _newWaypoint;\n\t\t};\n\t};\n};\n\n//Disable simulation if we *really* want to\n\n[3, format [\"Waiting for salvage mission end\"], _filename] call A3A_fnc_log",
"[getPos _box, 50, 50] isEqualTo [] || isNull _box};\n};\n\nprivate _bonus = if (_difficultX) then {2} else {1};\n\nif (_timeout && alive _box) then {\n\t[\"LOG\",[ _text, _title,[_mrk1, _mrk2, _mrk3]],_positionX,\"FAILED\",\"rearm\"] call A3A_fnc_taskUpdate;\n\t[-10*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\t[2, format [\"Mission Failed\"], _filename] call A3A_fnc_log",
"[\"LOG\",[ _text, _title,[_mrk1, _mrk2, _mrk3]],_positionX,\"SUCCEEDED\",\"rearm\"] call A3A_fnc_taskUpdate;\n\t[0,300*_bonus] remoteExec [\"A3A_fnc_resourcesFIA\",2];\n\t{if (_x distance _box < 500) then {[10*_bonus,_x] call A3A_fnc_playerScoreAdd}} forEach (allPlayers - (entities \"HeadlessClient_F\"));\n\t[5*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\t[2, format [\"Mission Succeeded\"], _filename] call A3A_fnc_log",
"[1200,\"LOG\"] spawn A3A_fnc_deleteTask;\n[3, format [\"set delete task timer\"], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_LOG_Supplies.sqf": [
"[\"_markerX\",\"_difficultX\",\"_leave\",\"_contactX\",\"_groupContact\",\"_tsk\",\"_posHQ\",\"_citiesX\",\"_city\",\"_radiusX\",\"_positionX\",\"_posHouse\",\"_nameDest\",\"_timeLimit\",\"_dateLimit\",\"_dateLimitNum\",\"_pos\",\"_truckX\",\"_countX\", \"_holdTime\"];\n\n_markerX = _this select 0;\n\n_difficultX = if (random 10 < tierWar) then {true} else {false};\n_leave = false;\n_contactX = objNull;\n_groupContact = grpNull;\n_tsk = \"\";\n_positionX = getMarkerPos _markerX;\n\n_timeLimit = if (_difficultX) then {30} else {60};\nif (hasIFA) then {_timeLimit = _timeLimit * 2};\n_dateLimit = [date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeLimit];\n_dateLimitNum = dateToNumber _dateLimit;\n_dateLimit = numberToDate [date select 0, _dateLimitNum];//converts datenumber back to date array so that time formats correctly\n_displayTime = [_dateLimit] call A3A_fnc_dateToTimeString;//Converts the time portion of the date array to a string for clarity in hints\n\n_nameDest = [_markerX] call A3A_fnc_localizar;\n_holdTime = if(_difficultX) then {4} else {2};\n_taskDescription = format [\"%1 population is in need of supplies. We may improve our relationship with that city if we are the ones who provide them. I have placed a crate with supplies near our HQ. Deliver the crate to %1 city center, hold it there for %3 minutes and it's done. Do this before %2.\",_nameDest,_displayTime, _holdTime];\n\n[[teamPlayer,civilian],\"LOG\",[_taskDescription,\"City Supplies\",_markerX],_positionX,false,0,true,\"Heal\",true] call BIS_fnc_taskCreate;\nmissionsX pushBack [\"LOG\",\"CREATED\"]; publicVariable \"missionsX\";\n_pos = (getMarkerPos respawnTeamPlayer) findEmptyPosition [1,50,\"C_Van_01_box_F\"];\n\n//Creating the box\n_truckX = \"Land_FoodSacks_01_cargo_brown_F\" createVehicle _pos;\n_truckX enableRopeAttach true;\n_truckX allowDamage false;\n_truckX call jn_fnc_logistics_addAction;\n_truckX addAction [\"Delivery infos\",\n\t{\n\t\t_text = format [\"Deliver this box to %1, unload it to start distributing to people\",(_this select 0) getVariable \"destinationX\"]; //This need a rework\n\t\t[\"Logistics Mission\", _text] remoteExecCall [\"A3A_fnc_customHint\",_this select 2];\t//This need a rework\n\t},\n\tnil,\n\t0,\n\tfalse,\n\ttrue,\n\t\"\",\n\t\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull])\"\n];\n[_truckX, teamPlayer] call A3A_fnc_AIVEHinit;\n//{_x reveal _truckX} forEach (allPlayers - (entities \"HeadlessClient_F\"));\n_truckX setVariable [\"destinationX\",_nameDest,true];\n\n[_truckX,\"Supply Box\"] spawn A3A_fnc_inmuneConvoy;\n\nwaitUntil {sleep 1; (dateToNumber date > _dateLimitNum) or ((_truckX distance _positionX < 40) and (isNull attachedTo _truckX) and (isNull ropeAttachedTo _truckX)) or (isNull _truckX)};\n_bonus = if (_difficultX) then {2} else {1};\nif ((dateToNumber date > _dateLimitNum) or (isNull _truckX)) then\n\t{\n\t[\"LOG\",[_taskDescription,\"City Supplies\",_markerX],_positionX,\"FAILED\",\"Heal\"] call A3A_fnc_taskUpdate;\n\t[5*_bonus,-5*_bonus,_positionX] remoteExec [\"A3A_fnc_citySupportChange\",2];\n\t[-10*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\t}\nelse\n\t{\n\t_countX = 120*_bonus;//120\n\t[[_positionX,Occupants,\"\",false],\"A3A_fnc_patrolCA\"] remoteExec [\"A3A_fnc_scheduler\",2];\n\t[\"TaskFailed\", [\"\", format [\"%2 deploying supplies in %1\",_nameDest,nameTeamPlayer]]] remoteExec [\"BIS_fnc_showNotification\",Occupants];\n\t{_friendX = _x;\n\tif (captive _friendX) then\n\t\t{\n\t\t[_friendX,false] remoteExec [\"setCaptive\",0,_friendX];\n\t\t_friendX setCaptive false;\n\t\t};\n\t{\n\tif ((side _x == Occupants) and (_x distance _positionX < distanceSPWN)) then\n\t\t{\n\t\tif (_x distance _positionX < 300) then {_x doMove _positionX} else {_x reveal [_friendX,4]};\n\t\t};\n\tif ((side _x == civilian) and (_x distance _positionX < 300) and (vehicle _x == _x)) then {_x doMove position _truckX};\n\t} forEach allUnits;\n\t} forEach ([300,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits);\n\twhile {(_countX > 0)/* or (_truckX distance _positionX < 40)*/ and (dateToNumber date < _dateLimitNum) and !(isNull _truckX)} do\n\t\t{\n\t\twhile {(_countX > 0) and (_truckX distance _positionX < 40) and ({[_x] call A3A_fnc_canFight} count ([80,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits) == count ([80,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits)) and ({(side _x == Occupants) and (_x distance _truckX < 50)} count allUnits == 0) and (dateToNumber date < _dateLimitNum) and (isNull attachedTo _truckX)} do\n\t\t\t{\n\t\t\t_formatX = format [\"Keep the area clear of hostiles for %1 more seconds\", _countX];\n\t\t\t{if (isPlayer _x) then {[petros,\"hint\",_formatX,\"Logistics Mission\"] remoteExec [\"A3A_fnc_commsMP\",_x]}} forEach ([80,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits);\n\t\t\tsleep 1;\n\t\t\t_countX = _countX - 1;\n\t\t\t};\n\t\tif (_countX > 0) then\n\t\t\t{\n\t\t\t_countX = 120*_bonus;//120\n\t\t\tif (((_truckX distance _positionX > 40) or (not([80,1,_truckX,teamPlayer] call A3A_fnc_distanceUnits)) or ({(side _x == Occupants) and (_x distance _truckX < 50)} count allUnits != 0)) and (alive _truckX)) then {{[petros,\"hint\",\"Stay close to the crate, and clean all BLUFOR presence in the surroundings or count will restart\", \"Logistics Mission\"] remoteExec [\"A3A_fnc_commsMP\",_x]} forEach ([100,0,_truckX,teamPlayer] call A3A_fnc_distanceUnits)};\n\t\t\twaitUntil {sleep 1; ((_truckX distance _positionX < 40) and ([80,1,_truckX,teamPlayer] call A3A_fnc_distanceUnits) and ({(side _x == Occupants) and (_x distance _truckX < 50)} count allUnits == 0)) or (dateToNumber date > _dateLimitNum) or (isNull _truckX)};\n\t\t\t};\n\t\tif (_countX < 1) exitWith {};\n\t\t};\n\t\tif ((dateToNumber date < _dateLimitNum) and !(isNull _truckX)) then\n\t\t\t{\n\t\t\t[petros,\"hint\",\"Supplies Delivered\", \"Logistics Mission\"] remoteExec [\"A3A_fnc_commsMP\",[teamPlayer,civilian]];\n\t\t\t[\"LOG\",[_taskDescription,\"City Supplies\",_markerX],_positionX,\"SUCCEEDED\",\"Heal\"] call A3A_fnc_taskUpdate;\n\t\t\t{if (_x distance _positionX < 500) then {[10*_bonus,_x] call A3A_fnc_playerScoreAdd}} forEach (allPlayers - (entities \"HeadlessClient_F\"));\n\t\t\t[5*_bonus,theBoss] call A3A_fnc_playerScoreAdd;\n\t\t\tif (!isMultiplayer) then {_bonus = _bonus + ((20-skillFIA)*0.1)};\n\t\t\t[-1*(20-skillFIA),15*_bonus,_markerX] remoteExec [\"A3A_fnc_citySupportChange\",2];\n            [\n                3,\n                \"Rebels won a supply mission\",\n                \"aggroEvent\",\n                true\n            ] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_convoy.sqf": [
"[\"_mrkDest\", \"_mrkOrigin\", [\"_convoyType\", \"\"]];\n\nprivate _difficult = if (random 10 < tierWar) then {true} else {false};\nprivate _sideX = if (sidesX getVariable [_mrkOrigin,sideUnknown] == Occupants) then {Occupants} else {Invaders};\n_isMilitia = false;\nif (_sideX == Occupants and (random 10 >= tierWar) and !(_difficult)) then { _isMilitia = true };\n\nprivate _posOrigin = getMarkerPos _mrkOrigin;\nprivate _posDest = getMarkerPos _mrkDest;\nprivate _posHQ = getMarkerPos respawnTeamPlayer;\n\nprivate _soldiers = [];\nprivate _vehiclesX = [];\nprivate _POWS = [];\nprivate _reinforcementsX = [];\n\n\n// Setup start/end times and convoy type\n\nprivate _timeXfin = 120;\nprivate _dateFinal = [date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeXfin];\nprivate _enddateNum = dateToNumber _dateFinal;\n\nprivate _convoyTypes = [];\nif ((_mrkDest in airportsX) or (_mrkDest in outposts)) then\n{\n\t_convoyTypes = [\"Ammunition\",\"Armor\"];\n\tif (_mrkDest in outposts) then {if (((count (garrison getVariable [_mrkDest, []]))/2) >= [_mrkDest] call A3A_fnc_garrisonSize) then {_convoyTypes pushBack \"Reinforcements\"}};\n}\nelse\n{\n\tif (_mrkDest in citiesX) then\n\t{\n\t\tif (sidesX getVariable [_mrkDest,sideUnknown] == Occupants) then {_convoyTypes = [\"Supplies\"]} else {_convoyTypes = [\"Supplies\"]}\n\t}\n\telse\n\t{\n\t\tif ((_mrkDest in resourcesX) or (_mrkDest in factories)) then {_convoyTypes = [\"Money\"]} else {_convoyTypes = [\"Prisoners\"]};\n\t\tif (((count (garrison getVariable [_mrkDest, []]))/2) >= [_mrkDest] call A3A_fnc_garrisonSize) then {_convoyTypes pushBack \"Reinforcements\"};\n\t};\n};\n\nif (_convoyType == \"\") then { _convoyType = selectRandom _convoyTypes };\n\nprivate _timeLimit = if (_difficult) then {0} else { (round random 5)+5 }; // 0 or 5-10 minute limit - there's already good a chance for 0 seconds, why have a double chance (0-10)?\nprivate _dateLimit = [date select 0, date select 1, date select 2, date select 3, (date select 4) + _timeLimit];\nprivate _dateLimitNum = dateToNumber _dateLimit;\n_dateLimit = numberToDate [date select 0, _dateLimitNum];//converts datenumber back to date array so that time formats correctly when put through the function\nprivate _displayTime = [_dateLimit] call A3A_fnc_dateToTimeString;//Converts the time portion of the date array to a string for clarity in hints\n\nprivate _nameDest = [_mrkDest] call A3A_fnc_localizar;\nprivate _nameOrigin = [_mrkOrigin] call A3A_fnc_localizar;\n[_mrkOrigin,30] call A3A_fnc_addTimeForIdle;\n\nprivate _textX = \"\";\nprivate _taskState = \"CREATED\";\nprivate _taskTitle = \"\";\nprivate _taskIcon = \"\";\nprivate _taskState1 = \"CREATED\";\nprivate _typeVehObj = \"\";\n\nswitch (_convoyType) do\n{\n\tcase \"Ammunition\":\n\t{\n\t\t_textX = format [\"A convoy from %1 is about to depart at %2. It will provide ammunition to %3. Try to intercept it. Steal or destroy that truck before it reaches it's destination.\",_nameOrigin,_displayTime,_nameDest];\n\t\t_taskTitle = \"Ammo Convoy\";\n\t\t_taskIcon = \"rearm\";\n\t\t_typeVehObj = if (_sideX == Occupants) then {vehNATOAmmoTruck} else {vehCSATAmmoTruck};\n\t};\n\tcase \"Armor\":\n\t{\n\t\t_textX = format [\"A convoy from %1 is about to depart at %2. It will reinforce %3 with armored vehicles. Try to intercept it. Steal or destroy that thing before it reaches it's destination.\",_nameOrigin,_displayTime,_nameDest];\n\t\t_taskTitle = \"Armored Convoy\";\n\t\t_taskIcon = \"Destroy\";\n\t\t_typeVehObj = if (_sideX == Occupants) then {vehNATOAA} else {vehCSATAA};\n\t};\n\tcase \"Prisoners\":\n\t{\n\t\t_textX = format [\"A group of POWs is being transported from %1 to %3, and it's about to depart at %2. Try to intercept it. Kill or capture the truck driver to make them join you and bring them to HQ. Alive if possible.\",_nameOrigin,_displayTime,_nameDest];\n\t\t_taskTitle = \"Prisoner Convoy\";\n\t\t_taskIcon = \"run\";\n\t\t_typeVehObj = if (_sideX == Occupants) then {selectRandom vehNATOTrucks} else {selectRandom vehCSATTrucks};\n\t};\n\tcase \"Reinforcements\":\n\t{\n\t\t_textX = format [\"Reinforcements are being sent from %1 to %3 in a convoy, and it's about to depart at %2. Try to intercept and kill all the troops and vehicle objective.\",_nameOrigin,_displayTime,_nameDest];\n\t\t_taskTitle = \"Reinforcements Convoy\";\n\t\t_taskIcon = \"run\";\n\t\t_typeVehObj = if (_sideX == Occupants) then {selectRandom vehNATOTrucks} else {selectRandom vehCSATTrucks};\n\t};\n\tcase \"Money\":\n\t{\n\t\t_textX = format [\"A truck with plenty of money is being moved from %1 to %3, and it's about to depart at %2. Steal that truck and bring it to HQ. Those funds will be very welcome.\",_nameOrigin,_displayTime,_nameDest];\n\t\t_taskTitle = \"Money Convoy\";\n\t\t_taskIcon = \"move\";\n\t\t_typeVehObj = \"C_Van_01_box_F\";\n\t};\n\tcase \"Supplies\":\n\t{\n\t\t_textX = format [\"A truck with medical supplies destination %3 it's about to depart at %2 from %1. Steal that truck bring it to %3 and let people in there know it is %4 who's giving those supplies.\",_nameOrigin,_displayTime,_nameDest,nameTeamPlayer];\n\t\t_taskTitle = \"Supply Convoy\";\n\t\t_taskIcon = \"heal\";\n\t\t_typeVehObj = \"C_Van_01_box_F\";\n\t};\n};\n\n[[teamPlayer,civilian],\"CONVOY\",[_textX,_taskTitle,_mrkDest],_posDest,false,0,true,_taskIcon,true] call BIS_fnc_taskCreate;\n[[_sideX],\"CONVOY1\",[format [\"A convoy from %1 to %3, it's about to depart at %2. Protect it from any possible attack.\",_nameOrigin,_displayTime,_nameDest],\"Protect Convoy\",_mrkDest],_posDest,false,0,true,\"run\",true] call BIS_fnc_taskCreate;\nmissionsX pushBack [\"CONVOY\",\"CREATED\"]; publicVariable \"missionsX\";\nsleep (_timeLimit * 60);\n\n\n// Setup spawn data\n\nprivate _posOrig = [];\nif (_mrkOrigin in airportsX) then\n{\n\t// use the map-defined spawnpoint as a starting point for airfields\n\tprivate _spawnPoint = server getVariable (format [\"spawn_%1\", _mrkOrigin]);\n\t_posOrig = getMarkerPos _spawnPoint;\n}\nelse\n{\n\tprivate _spawnRoad = [getMarkerPos _mrkOrigin] call A3A_fnc_findNearestGoodRoad;\n\t_posOrig = position _spawnRoad;\n};\n\n// Shift to nearest nav point so that we don't drive backwards\n_posOrig = [[_posOrig] call A3A_fnc_findNearestNavPoint] call A3A_fnc_getNavPos;\n\nprivate _route = [_posOrig, _posDest] call A3A_fnc_findPath;\nif (_route isEqualTo []) then {\n\t_route = [_posOrig, _posDest]\n} else {\n\t_route deleteAt 0;\t\t// origin will be doubled\n};\n\nprivate _vecdir = (_route select 0) vectorFromTo (_route select 1);\nprivate _dir = (_route select 0) getDir (_route select 1);\nprivate _distOffset = 30;\t\t\t\t\t// how far down the road to place next vehicle\nprivate _speedLimit = 40;\n\nprivate _vehPool = [_sideX, [\"Air\"]] call A3A_fnc_getVehiclePoolForQRFs;\n\n\n// Spawning worker functions\n\nprivate _fnc_spawnConvoyVehicle = {\n\tparams [\"_vehType\", \"_markName\"];\n\n\tprivate _pos = _posOrig vectorAdd (_vecdir vectorMultiply _distOffset);\n\tprivate _veh = createVehicle [_vehType, _pos, [], 5];\n\t_veh setDir _dir;\n\t_veh allowDamage false;\n\t_veh limitSpeed _speedLimit;\n\n\tprivate _group = createVehicleCrew _veh;\n\t_group addVehicle _veh;\n\t{\n\t\t// probably don't want civilian drivers here, but it's a pain atm\n\t\tif (side _group != civilian) then { [_x] call A3A_fnc_NATOinit };\n\t\t_x allowDamage false;\n\t} forEach (units _group);\n\t_soldiers append (units _group);\n\n\t[_veh, _sideX] call A3A_fnc_AIVEHinit;\n\t[_veh, _markName] spawn A3A_fnc_inmuneConvoy;\t\t\t// NOTE: should not be called unless moving within 60s\n\t_vehiclesX pushBack _veh;\n\t_distOffset = _distOffset - 15;\n\t_veh;\n};\n\nprivate _fnc_spawnEscortVehicle = {\n\n\tprivate _typeVehEsc = selectRandomWeighted _vehPool;\n\tprivate _veh = [_typeVehEsc, \"Convoy Escort\"] call _fnc_spawnConvoyVehicle;\n\n\tif (!_isMilitia) then\n\t{\n\t\tif (not(_typeVehEsc in vehTanks)) then\n\t\t{\n\t\t\tprivate _typeGroup = [_typeVehEsc,_sideX] call A3A_fnc_cargoSeats;\n\t\t\tprivate _groupEsc = [_posOrigin,_sideX, _typeGroup] call A3A_fnc_spawnGroup;\n\t\t\t{[_x] call A3A_fnc_NATOinit;_x assignAsCargo _veh;_x moveInCargo _veh;} forEach units _groupEsc;\n\t\t\t_soldiers append (units _groupEsc);\n\t\t};\n\t}\n\telse\n\t{\n\t\tif (not(_typeVehEsc == vehFIAArmedCar)) then\n\t\t{\n\t\t\tprivate _typeGroup = selectRandom groupsFIASquad;\n\t\t\tif (_typeVehEsc == vehFIACar) then\n\t\t\t{\n\t\t\t\t_typeGroup = selectRandom groupsFIAMid;\n\t\t\t};\n\t\t\tprivate _groupEsc = [_posOrigin,_sideX, _typeGroup] call A3A_fnc_spawnGroup;\n\t\t\t{[_x] call A3A_fnc_NATOinit;_x assignAsCargo _veh;_x moveInCargo _veh;} forEach units _groupEsc;\n\t\t\t_soldiers append (units _groupEsc);\n\t\t};\n\t};\n};\n\n\n// Convoy vehicle spawning\n\n// Lead vehicle\nprivate _typeVehX = if (_sideX == Occupants) then {if (!_isMilitia) then {selectRandom vehNATOLightArmed} else {vehPoliceCar}} else {selectRandom vehCSATLightArmed};\nprivate _vehLead = [_typeVehX, \"Convoy Lead\"] call _fnc_spawnConvoyVehicle;\n\n\n// Initial escort vehicles\nprivate _countX = if (_difficult) then {2} else {1};\nfor \"_i\" from 1 to _countX do\n{\n\tsleep 2;\n\t[] call _fnc_spawnEscortVehicle;\n};\n\n//Objective creation starts here ----------------------------------------------\nsleep 2;\nprivate _objText = if (_difficult) then {\" Convoy Objective\"} else {\"Convoy Objective\"};\nprivate _vehObj = [_typeVehObj, _objText] call _fnc_spawnConvoyVehicle;\n\nif (_convoyType == \"Armor\") then {_vehObj lock 3};// else {_vehObj forceFollowRoad true};\nif (_convoyType == \"Prisoners\") then\n{\n\tprivate _grpPOW = createGroup teamPlayer;\n\tfor \"_i\" from 1 to (1+ round (random 11)) do\n\t{\n\t\tprivate _unit = [_grpPOW, SDKUnarmed, _posOrigin, [], 0, \"NONE\"] call A3A_fnc_createUnit;\n\t\t_unit setCaptive true;\n\t\t_unit disableAI \"MOVE\";\n\t\t_unit setBehaviour \"CARELESS\";\n\t\t_unit allowFleeing 0;\n\t\t_unit assignAsCargo _vehObj;\n\t\t_unit moveInCargo [_vehObj, _i + 3];\n\t\tremoveAllWeapons _unit;\n\t\tremoveAllAssignedItems _unit;\n\t\t[_unit,\"refugee\"] remoteExec [\"A3A_fnc_flagaction\",[teamPlayer,civilian],_unit];\n\t\t_POWS pushBack _unit;\n\t\t[_unit] call A3A_fnc_reDress;\n\t};\n};\nif (_convoyType == \"Reinforcements\") then\n{\n\tprivate _typeGroup = [_typeVehObj,_sideX] call A3A_fnc_cargoSeats;\n\tprivate _groupEsc = [_posOrigin,_sideX,_typeGroup] call A3A_fnc_spawnGroup;\n\t{[_x] call A3A_fnc_NATOinit;_x assignAsCargo _veh;_x moveInCargo _veh;} forEach units _groupEsc;\n\t_soldiers append (units _groupEsc);\n\t_reinforcementsX append (units _groupEsc);\n};\nif ((_convoyType == \"Money\") or (_convoyType == \"Supplies\")) then\n{\n\treportedVehs pushBack _vehObj;\n\tpublicVariable \"reportedVehs\";\n\t_vehObj addEventHandler [\"HandleDamage\",{if (((_this select 1) find \"wheel\" != -1) and ((_this select 4==\"\") or (side (_this select 3) != teamPlayer)) and (!isPlayer driver (_this select 0))) then {0} else {(_this select 2)}}];\n};\n\n// Tail escort\nsleep 2;\n[] call _fnc_spawnEscortVehicle;\n\n\n// Send vehicles on their way\n\nprivate _fsmHandles = [];\n_route deleteAt 0;\n{\n\t_fsmHandles pushBack ([_x, _route] execFSM \"FSMs\\DriveAlongPath.fsm\");\n\tsleep 3;\n} forEach _vehiclesX;\n\n// Remove spawn-suicide protection\n{_x allowDamage true} forEach _vehiclesX;\n{_x allowDamage true; if (vehicle _x == _x) then {deleteVehicle _x}} forEach _soldiers;\n\n\n// Termination condition handling\n\nprivate _bonus = if (_difficult) then {2} else {1};\nprivate _distanceFromTargetForArrival = 200;\n\nprivate _fnc_applyResults = \n{\n\tparams [\"_success\", \"_success1\", \"_adjustCA\", \"_adjustBoss\", \"_aggroMod\", \"_aggroTime\", \"_type\"];\n\t\n\t_taskState = if (_success) then { \"SUCCEEDED\" } else { \"FAILED\" };\n\t_taskState1 = if (_success1) then { \"SUCCEEDED\" } else { \"FAILED\" };\n\n\t[_adjustCA, _sideX] remoteExec [\"A3A_fnc_timingCA\", 2];\n\t[_adjustBoss, theBoss] call A3A_fnc_playerScoreAdd;\n\t\n\tif (_sideX == Occupants) then {\n\t\t[[_aggroMod, _aggroTime], [0, 0]] remoteExec [\"A3A_fnc_prestige\", 2]\n\t} else {\n\t\t[[0, 0], [_aggroMod, _aggroTime]] remoteExec [\"A3A_fnc_prestige\", 2]\n\t};\n\n\tif !(_success1) then {\n\t\t_killZones = killZones getVariable [_mrkOrigin,[]];\n\t\t_killZones = _killZones + [_mrkDest,_mrkDest];\n\t\tkillZones setVariable [_mrkOrigin,_killZones,true];\n\t};\n\n\tprivate _eventText = format [\"Rebels %1 a %2 convoy mission\", [\"lost\", \"won\"] select _success, _type];\n\t[3, _eventText, \"aggroEvent\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Missions/fn_missionRequest.sqf": [
"[\"_type\", [\"_requester\", clientOwner], [\"_autoSelect\", false]];\nif(isNil \"_type\") then {\n\tif (leader group Petros != Petros) then {breakOut \"Main\"};\n\tprivate _types = [\"CON\",\"DES\",\"LOG\",\"RES\",\"CONVOY\"];\n\t_type = selectRandom (_types select {!([_x] call BIS_fnc_taskExists)});\n\tif (isNil \"_type\") then {breakOut \"Main\"}; //you have all the mission types\n\t_autoSelect = true;\n};\nif ([_type] call BIS_fnc_taskExists) exitWith {if (!_autoSelect) then {[petros,\"globalChat\",\"I already gave you a mission of this type\"] remoteExec [\"A3A_fnc_commsMP\",_requester]}};\n\nprivate _findIfNearAndHostile = {\n\t/*\n\tInput : single array of markers, do 'array + array' for multiple.\n\tReturns: array of markers within max mission distance and is not rebel.\n\t*/\n\tparams [\"_Markers\"];\n\t_Markers = _Markers select {(getMarkerPos _x distance2D getMarkerPos respawnTeamPlayer < distanceMission) && (sidesX getVariable [_x,sideUnknown] != teamPlayer)};\n\t_Markers\n};\n\nprivate _possibleMarkers = [];\nswitch (_type) do {\n\tcase \"AS\": {\n\t\t//find apropriate sites\n\t\t_possibleMarkers = [airportsX + citiesX] call _findIfNearAndHostile;\n\t\t_possibleMarkers = _possibleMarkers select {spawner getVariable _x == 2};\n\t\t//add controlsX not on roads and on the 'frontier'\n\t\tprivate _controlsX = [controlsX] call _findIfNearAndHostile;\n\t\tprivate _nearbyFriendlyMarkers = markersX select {\n\t\t\t(getMarkerPos _x inArea [getMarkerPos respawnTeamPlayer, distanceMission+distanceSPWN, distanceMission+distanceSPWN, 0, false])\n\t\t\tand (sidesX getVariable [_x,sideUnknown] isEqualTo teamPlayer)\n\t\t};\n\t\t_nearbyFriendlyMarkers deleteAt (_nearbyFriendlyMarkers find \"Synd_HQ\");\n\t\t{\n\t\t\tprivate _pos = getmarkerPos _x;\n\t\t\tif !(isOnRoad _pos) then {\n\t\t\t\tif (_nearbyFriendlyMarkers findIf {getMarkerPos _x distance _pos < distanceSPWN} != -1) then {_possibleMarkers pushBack _x};\n\t\t\t};\n\t\t}forEach _controlsX;\n\n\t\tif (count _possibleMarkers == 0) then {\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"I have no assasination missions for you. Move our HQ closer to the enemy\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Assasination Missions require cities, Patrolled Jungles or Airports closer than 4Km from your HQ.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t} else {\n\t\t\tprivate _site = selectRandom _possibleMarkers;\n\t\t\tif (_site in airportsX) then {[[_site],\"A3A_fnc_AS_Official\"] remoteExec [\"A3A_fnc_scheduler\",2]} \n\t\t\telse {if (_site in citiesX) then {[[_site],\"A3A_fnc_AS_Traitor\"] remoteExec [\"A3A_fnc_scheduler\",2]} \n\t\t\telse {[[_site],\"A3A_fnc_AS_SpecOP\"] remoteExec [\"A3A_fnc_scheduler\",2]}};\n\t\t};\n\t};\n\n\tcase \"CON\": {\n\t\t//find apropriate sites\n\t\t_possibleMarkers = [outposts + resourcesX + (controlsX select {isOnRoad (getMarkerPos _x)})] call _findIfNearAndHostile;\n\t\t\n\t\tif (count _possibleMarkers == 0) then {\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"I have no Conquest missions for you. Move our HQ closer to the enemy.\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Conquest Missions require roadblocks or outposts closer than 4Km from your HQ.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t} else {\n\t\t\tprivate _site = selectRandom _possibleMarkers;\n\t\t\t[[_site],\"A3A_fnc_CON_Outpost\"] remoteExec [\"A3A_fnc_scheduler\",2];\n\t\t};\n\t};\n\n\tcase \"DES\": {\n\t\t//find apropriate sites\n\t\t_possibleMarkers = [airportsX] call _findIfNearAndHostile;\n\t\t_possibleMarkers = _possibleMarkers select {spawner getVariable _x == 2};\n\t\t//append occupants antennas to list\t\t\n\t\t{\n\t\t\tprivate _nearbyMarker = [markersX, getPos _x] call BIS_fnc_nearestPosition;\n\t\t\tif (\n\t\t\t\t(sidesX getVariable [_nearbyMarker,sideUnknown] == Occupants)\n\t\t\t\t&& (getPos _x distance getMarkerPos respawnTeamPlayer < distanceMission) \n\t\t\t\t) then {_possibleMarkers pushBack _x};\n\t\t}forEach antennas;\n\n\t\tif (count _possibleMarkers == 0) then {\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"I have no destroy missions for you. Move our HQ closer to the enemy\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Destroy Missions require Airbases or Radio Towers closer than 4Km from your HQ.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t} else {\n\t\t\tprivate _site = selectRandom _possibleMarkers;\n\t\t\tif (_site in airportsX) then {if (random 10 < 8) then {[[_site],\"A3A_fnc_DES_Vehicle\"] remoteExec [\"A3A_fnc_scheduler\",2]} else {[[_site],\"A3A_fnc_DES_Heli\"] remoteExec [\"A3A_fnc_scheduler\",2]}};\n\t\t\tif (_site in antennas) then {[[_site],\"A3A_fnc_DES_antenna\"] remoteExec [\"A3A_fnc_scheduler\",2]}\n\t\t};\n\t};\n\n\tcase \"LOG\": {\n\t\t//find apropriate sites\n\t\t_possibleMarkers = [Seaports + outposts] call _findIfNearAndHostile;\n\t\t{\n\t\t\tprivate _prestige = server getVariable _x;\n\t\t\tif (((_prestige select 2) + (_prestige select 3)) < 90) then {_possibleMarkers pushBack _x};\n\t\t}forEach ([citiesX - destroyedSites] call _findIfNearAndHostile);\n\t\t\n\t\t//append banks in hostile cities\n\t\tif (random 100 < 20) then {\n\t\t\t{\n\t\t\t\tprivate _nearbyMarker = [markersX, getPos _x] call BIS_fnc_nearestPosition;\n\t\t\t\tif (\n\t\t\t\t\t(sidesX getVariable [_nearbyMarker,sideUnknown] != teamPlayer)\n\t\t\t\t\t&& (getPos _x distance getMarkerPos respawnTeamPlayer < distanceMission) \n\t\t\t\t\t) then {_possibleMarkers pushBack _x};\n\t\t\t}forEach banks;\n\t\t};\n\n\t\tif (count _possibleMarkers == 0) then {\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"I have no logistics missions for you. Move our HQ closer to the enemy\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Logistics Missions require Outposts, Cities or Banks closer than 4Km from your HQ.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t} else {\n\t\t\tprivate _site = selectRandom _possibleMarkers;\n\t\t\tif (_site in citiesX) then {[[_site],\"A3A_fnc_LOG_Supplies\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t\tif (_site in outposts) then {[[_site],\"A3A_fnc_LOG_Ammo\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t\tif (_site in banks) then {[[_site],\"A3A_fnc_LOG_Bank\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t\tif (_site in Seaports) then {[[_site],\"A3A_fnc_LOG_Salvage\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t};\n\t};\n\n\tcase \"RES\": {\n\t\t_possibleMarkers = [citiesX] call _findIfNearAndHostile;\n\t\t{\n\t\t\tprivate _spawner = spawner getVariable _x;\n\t\t\tif (_spawner == 2) then {_possibleMarkers pushBack _x};\n\t\t} forEach ([airportsX + outposts] call _findIfNearAndHostile);\n\n\t\tif (count _possibleMarkers == 0) then {\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"I have no rescue missions for you. Move our HQ closer to the enemy\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Rescue Missions require Cities or Airports closer than 4Km from your HQ.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t} else {\n\t\t\tprivate _site = selectRandom _possibleMarkers;\n\t\t\tif (_site in citiesX) then {[[_site],\"A3A_fnc_RES_Refugees\"] remoteExec [\"A3A_fnc_scheduler\",2]} else {[[_site],\"A3A_fnc_RES_Prisoners\"] remoteExec [\"A3A_fnc_scheduler\",2]};\n\t\t};\n\t};\n\n\tcase \"CONVOY\": {\n\t\tif (bigAttackInProgress) exitWith {\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"There is a big battle around, I don't think the enemy will send any convoy\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Convoy Missions require a calmed status around the island, and now it is not the proper time.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t};\n\t\t//prety mutch untuched, not mutch in common with the others\n\t\tprivate _Markers = (airportsX + resourcesX + factories + seaports + outposts - blackListDest);\n\t\t_Markers = _Markers select {sidesX getVariable [_x,sideUnknown] != teamPlayer};\n\t\tif (count _Markers > 0) then {\n\t\t\tfor \"_i\" from 0 to ((count _Markers) - 1) do {\n\t\t\t\tprivate _site = _Markers select _i;\n\t\t\t\tprivate _pos = getMarkerPos _site;\n\t\t\t\tprivate _base = [_site] call A3A_fnc_findBasesForConvoy;\n\t\t\t\tif ((_pos distance (getMarkerPos respawnTeamPlayer) < (distanceMission*2)) and (_base !=\"\")) then {\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t((sidesX getVariable [_site,sideUnknown] == Occupants) and (sidesX getVariable [_base,sideUnknown] == Occupants)) \n\t\t\t\t\t\tor ((sidesX getVariable [_site,sideUnknown] == Invaders) and (sidesX getVariable [_base,sideUnknown] == Invaders))\n\t\t\t\t\t) then {_possibleMarkers pushBack _site};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\n\t\tif (count _possibleMarkers == 0) then\n\t\t{\n\t\t\tif (!_autoSelect) then {\n\t\t\t\t[petros,\"globalChat\",\"I have no Convoy missions for you. Move our HQ closer to the enemy\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t\t[petros,\"hint\",\"Convoy Missions require Airports or Cities closer than 5Km from your HQ, and they must have an idle friendly base in their surroundings.\", \"Missions\"] remoteExec [\"A3A_fnc_commsMP\",_requester];\n\t\t\t};\n\t\t} else {\n\t\t\tprivate _site = selectRandom _possibleMarkers;\n\t\t\tprivate _base = [_site] call A3A_fnc_findBasesForConvoy;\n\t\t\t[[_site,_base],\"A3A_fnc_convoy\"] remoteExec [\"A3A_fnc_scheduler\",2];\n\t\t};\n\t};\n\n\tdefault {\n\t\t[1, format [\"%1 is not an accepted task type\", _type], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/ModsAndDLC/fn_initDisabledMods.sqf": [
"[];\n\nif (\"Kart\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"kart\";\n};\n\nif (\"Mark\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"mark\";\n};\n\nif (\"Heli\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"heli\";\n};\n\nif (\"Expansion\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"expansion\";\n};\n\nif (\"Jets\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"jets\";\n};\n\nif (\"Orange\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"orange\";\n};\n\nif (\"Tanks\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"tank\";\n};\n\nif (\"GlobMob\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"globmob\";\n};\n\nif (\"Enoch\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"enoch\";\n};\n\nif (\"OfficialMod\" call BIS_fnc_getParamValue isEqualTo 0) then\n{\n\t_disabledMods pushBack \"officialmod\";\n};\n[2,format [\"Disabled DLC: %1\",_disabledMods],_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/OrgPlayers/fn_assignBossIfNone.sqf": [
"[\"eligible\", false])}) exitWith {\n\t[3, format [\"Not attempting to assign new boss - player %1 is the boss\", theBoss],_filename] call A3A_fnc_log",
"[_x] call A3A_fnc_isMember };\n[3, format [\"Attempting to assign new boss, checking %1 members for next Boss.\", count _members],_filename] call A3A_fnc_log",
"[\"eligible\", false]) && (side group _x == teamPlayer)) then {\n\t\t[3, format [\"Player %1 is eligible\", _x],_filename] call A3A_fnc_log",
"[_x] call A3A_fnc_numericRank;\n\t\tprivate _playerRank = _dataX select 0;\n\t\t[3, format [\"Current boss rank: %1, player rank: %2\", _bossRank, _playerRank],_filename] call A3A_fnc_log",
"[3, format [\"Player %1 is not eligible\", _x],_filename] call A3A_fnc_log",
"[2, format [\"Player chosen for Boss: %1\", _nextBoss],_filename] call A3A_fnc_log",
"[_nextBoss] call A3A_fnc_theBossTransfer;\n}\nelse\n{\n\t[2, \"Couldn't select a new boss - no eligible candidates.\",_filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/OrgPlayers/fn_makePlayerBossIfEligible.sqf": [
"[\"_player\"];\n\n[3, format [\"Attempting to make %1 the boss\", _player], _filename] call A3A_fnc_log",
"[\"eligible\",false] && (side (group _player) == teamPlayer) && [_player] call A3A_fnc_isMember) exitWith {\n\t[3, \"Player is eligible, making them the boss\", _filename] call A3A_fnc_log",
"[_player] call A3A_fnc_theBossTransfer;\n\ttrue;\n};\n\n[3, \"Player is not eligible, unable to make them the boss\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/OrgPlayers/fn_promotePlayer.sqf": [
"[3, format [\"Working on player ranks\"],_filename] call A3A_fnc_log",
"[\"_puntMax\",\"_textX\",\"_multiplier\",\"_newRank\",\"_selectable\",\"_disconnected\",\"_owner\",\"_pointsX\",\"_dataX\"];\n_puntMax = 0;\n_multiplier = 1;\n\nprivate _textX = \"Promoted Players:<br/><br/>\";\n\n_promoted = false;\n{\n\tprivate _player = _x getVariable [\"owner\", _x];\n\tprivate _pointsX = _player getVariable [\"score\",0];\n\tprivate _dataX = [_player] call A3A_fnc_numericRank;\n\tprivate _multiplier = _dataX select 0;\n\tprivate _newRank = _dataX select 1;\n\tprivate _rank = _x getVariable [\"rankX\",\"PRIVATE\"];\n\t\n\tif (_rank != \"COLONEL\") then\n\t{\n\t\tif (_pointsX >= 50*_multiplier) then\n\t\t{\n\t\t\t_promoted = true;\n\t\t\t[_player,_newRank] remoteExec [\"A3A_fnc_ranksMP\"];\n\t\t\t_player setVariable [\"rankX\",_newRank,true];\n\t\t\t_textX = format [\"%1%2: %3.<br/>\",_textX, name _player, _newRank];\n\t\t\t[-1*(50*_multiplier),_player] call A3A_fnc_playerScoreAdd;\n\t\t\t_multiplier = _multiplier + 1;\n\t\t\tsleep 5;\n\t\t};\n\t};\n} forEach ((call A3A_fnc_playableUnits) select {(side (group _x) == teamPlayer)});\n\n[3, _textX, _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/OrgPlayers/fn_theBossTransfer.sqf": [
"[[\"_newBoss\", objNull], [\"_silent\", false]];\n\nif (!isNil \"theBoss\" and {!isNull theBoss}) then\n{\n\t[3, format [\"Removing %1 from Boss roles.\", theBoss], _filename] call A3A_fnc_log",
"[HC_commanderX];\n\tHC_commanderX synchronizeObjectsRemove [theBoss];\n};\n\ntheBoss = _newBoss;\npublicVariable \"theBoss\";\n\nif (isNull _newBoss) exitWith { \n\t[_silent] spawn {\n\t\tparams [\"_silent\"];\n\t\tsleep 5;\n\t\tprivate _textX = format [\"The commander has resigned. There is no eligible commander.\"];\n\t\tif (!_silent) then {[petros,\"hint\",_textX, \"New Commander\"] remoteExec [\"A3A_fnc_commsMP\", 0]};\n\t\t[] remoteExec [\"A3A_fnc_statistics\",[teamPlayer,civilian]];\n\t};\n};\n\n[group theBoss, theBoss] remoteExec [\"selectLeader\", groupOwner group theBoss];\n\ntheBoss synchronizeObjectsAdd [HC_commanderX];\nHC_commanderX synchronizeObjectsAdd [theBoss];\n\nif (!isNil \"bossHCGroupsTransfer\") then\n{\n\t[3, \"Found previous HC groups, transferring.\", _filename] call A3A_fnc_log",
"[_x] } forEach bossHCGroupsTransfer;\n\tbossHCGroupsTransfer = nil;\n}\nelse {\n\t// Boss got lost somewhere, try to find HC groups by scanning\n\t[3, \"No previous HC groups found, scanning all groups.\",_filename] call A3A_fnc_log",
"[\"spawner\",false]) and (!isPlayer leader _x) and (side _x == teamPlayer)) then\n\t\t{\n\t\t\ttheBoss hcSetGroup [_x];\n\t\t};\n\t} forEach allGroups;\n};\n\n[3, format [\"New boss %1 set.\", theBoss], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Pathfinding/fn_loadNavGrid.sqf": [
"[2, \"Started loading nav grid\", _filename] call A3A_fnc_log",
"[0,1]);\nprivate _remaining = toLower (worldName select [1]);\nprivate _path = format [\"Navigation\\navGrid%1%2.sqf\", _firstLetter, _remaining];\n\nprivate _abort = false;\ntry\n{\n\t//Load in the nav grid array\n\t[] call compile preprocessFileLineNumbers _path;\n}\ncatch\n{\n\t[1, format [\"Road database at %1 could not be loaded\", _path], _filename] call A3A_fnc_log",
"[_position] call A3A_fnc_getMainMarkers;\n\t{\n\t\t[_index, _x] call A3A_fnc_setNavOnMarker;\n\t} forEach _mainMarkers;\n} forEach navGrid;\n\nroadDataDone = true;\n\n[2, \"Finished loading nav grid\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Punishment/fn_punishment.sqf": [
"[OPTIONAL] The victim of the player's FF.\n\nReturns:\n\t<STRING> Either an exemption type or a return from fn_punishment.sqf.\n\nExamples:\n\t[_instigator,_timeAdded,_offenceAdded,_victim] remoteExec [\"A3A_fnc_punishment\",2,false]; // How it should be called from another A3A_fnc_punishment_FF.\n\t// Unit Tests:\n\t[cursorObject, 0, 0] remoteExec [\"A3A_fnc_punishment\",2];                                 // Ping with FF Warning\n\t[cursorObject,120, 1] remoteExec [\"A3A_fnc_punishment\",2];                                // Punish, 120 additional seconds\n\t[player,10, 1] remoteExec [\"A3A_fnc_punishment\",2];                                       // Test Self Punish, 10 additional seconds\n\t// Function that goes hand-in-hand\n\t[cursorObject,\"forgive\"] remoteExec [A3A_fnc_punishment_release,2]; // Forgive all sins\n\nAuthor: Caleb Serafin\nLicense: MIT License, Copyright (c) 2019 Barbolani & The Official AntiStasi Community\n*/\nparams [\"_instigator\",\"_timeAdded\",\"_offenceAdded\",[\"_victim\",objNull],[\"_customMessage\",\"\"]];\nprivate _filename = \"fn_punishment.sqf\";\n\nif (!isServer) exitWith {\n\t[1, \"NOT SERVER\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Punishment/fn_punishment_checkStatus.sqf": [
"[_UID] remoteExec [\"A3A_fnc_punishment_checkStatus\",2,false];\n\n\t// Unit Test\n\tprivate _UID = getPlayerUID player;\n\tprivate _keyPairs = [[\"timeTotal\",10],[\"offenceTotal\",1]];\n\tprivate _data_instigator = [_UID,_keyPairs] call A3A_fnc_punishment_dataSet;\n\t[_UID] remoteExec [\"A3A_fnc_punishment_checkStatus\",2,false];\n\t[_UID] call A3A_fnc_punishment_dataGet;\n\nAuthor: Caleb Serafin\nLicense: MIT License, Copyright (c) 2019 Barbolani & The Official AntiStasi Community\n*/\nparams [[\"_UID\",\"\",[\"\"]]];\nprivate _fileName = \"fn_punishment_checkStatus.sqf\";\n\nif (!tkPunish) exitWith {false;};\n\nif (!isServer) exitWith {\n\t[1, \"NOT SERVER\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Punishment/fn_punishment_oceanGulag.sqf": [
"[_UID,\"add\"] call [\"A3A_fnc_punishment_oceanGulag\",2,false];\n\t[_UID,\"remove\"] call [\"A3A_fnc_punishment_oceanGulag\",2,false];\n\nAuthor: Caleb Serafin\nLicense: MIT License, Copyright (c) 2019 Barbolani & The Official AntiStasi Community\n*/\nparams [\"_UID\",[\"_operation\",\"add\",[\"\"]]];\nprivate _filename = \"fn_punishment_oceanGulag.sqf\";\n\nif (!isServer) exitWith {\n\t[1, \"NOT SERVER\", _filename] call A3A_fnc_log",
"[ [\"punishment_platform\",objNull], [\"initialPosASL\",[0,0,0]]];\n([_UID,_keyPairs] call A3A_fnc_punishment_dataGet) params [\"_punishment_platform\",\"_initialPosASL\"];\nprivate _detainee = _UID call BIS_fnc_getUnitByUid;\nprivate _playerPos = [0,0,0];\n\nif (!isPlayer _detainee) then { // Prevents punishing AI\n\t[2, format [\"DETAINEE MIA | UID:%1 matches no in-game player. Cleaning up.\", _UID], _filename] call A3A_fnc_log",
"[ [50,50], 50, 50 ,0, true, -1]) exitWith {};\n\t\tif (_initialPosASL isEqualTo [0,0,0]) then {\n\t\t\t_keyPairs = [ [\"initialPosASL\",_playerPos] ];\n\t\t\t[_UID,_keyPairs] call A3A_fnc_punishment_dataSet;\n\t\t};\n\t\tif (!isNull _punishment_platform) then {\n\t\t\tdeleteVehicle _punishment_platform;\n\t\t};\n\n\t\tprivate _pos2D = [random 100,random 100];\n\n\t\t_punishment_platform = createVehicle [\"Land_Sun_chair_green_F\", [_pos2D #0, _pos2D #1, -0.25], [], 0, \"CAN_COLLIDE\"];\n\t\t_punishment_platform enableSimulation false;\n\t\t_punishment_platform allowDamage false;\n\n\t\t_keyPairs = [ [\"punishment_platform\",_punishment_platform] ];\n\t\t[_UID,_keyPairs] call A3A_fnc_punishment_dataSet;\n\n\t\t_punishment_platform setPos [_pos2D #0, _pos2D #1, -0.25];\n\n\t\tif (isPlayer _detainee) then {\n\t\t\tif !(isNull objectParent _detainee) then { moveOut _detainee };\n\t\t\t_detainee switchMove \"\";\n\t\t\t_detainee attachTo [_punishment_platform,[0, 0, 0.5]];\n\t\t};\n\t\ttrue;\n\t};\n\tcase (\"remove\"): {\n\t\tif (isPlayer _detainee && {_playerPos inArea [ [50,50], 100, 100 ,0, true, -1]}) then { // Slightly bigger, player can't swim 50m in 5 sec.\n\t\t\tprivate _keyPairs = [ [\"initialPosASL\",[0,0,0]] ];\n\t\t\t([_UID,_keyPairs] call A3A_fnc_punishment_dataGet) params [\"_initialPosASL\"];\n\t\t\tif !(isNull objectParent _detainee) then { moveOut _detainee };\n\t\t\tdetach _detainee;\n\t\t\t_detainee switchMove \"\";\n\t\t\tprivate _emptyPos = ([_initialPosASL,posHQ] select (_initialPosASL isEqualTo [0,0,0]) findEmptyPosition [1,50,typeOf _detainee]); // *empty*\n\t\t\t_detainee setVehiclePosition [_emptyPos, [], 0, \"NONE\"];\n\t\t\t_detainee setVelocity [0, 0, 1];\n\t\t};\n\t\tif (!isNull _punishment_platform) then {\n\t\t\tdeleteVehicle _punishment_platform;\n\t\t};\n\t\t[_UID,[\"punishment_platform\",\"initialPosASL\"]] call A3A_fnc_punishment_dataRem;\n\t\ttrue\n\t};\n\tdefault {\n\t\t[1, format [\"INVALID PARAMS | _operation=\"\"%1\"\"\", _operation], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Punishment/fn_punishment_release.sqf": [
"[_UID,\"forgive\"] remoteExec [\"A3A_fnc_punishment_release\",2]; // Forgive all sins and release from Ocean Gulag.\n\nAuthor: Caleb Serafin\nLicense: MIT License, Copyright (c) 2019 Barbolani & The Official AntiStasi Community\n*/\nparams [\"_UID\",[\"_source\",\"\"]];\nprivate _filename = \"fn_punishment_release.sqf\";\n\nif (!isServer) exitWith {\n\t[1, \"NOT SERVER\", _filename] call A3A_fnc_log",
"[ [\"_punishmentPlatform\",objNull],[\"name\",\"NO NAME\"] ];\nprivate _data_instigator = [_UID,_keyPairs] call A3A_fnc_punishment_dataGet;\n_data_instigator params [\"_punishmentPlatform\",\"_name\"];\n\nprivate _detainee = [_UID] call BIS_fnc_getUnitByUid;\nprivate _playerStats = format[\"Player: %1 [%2]\", _name, _UID];\n\nprivate _releaseFromSentence = {\n\t[_UID] remoteExec [\"A3A_fnc_punishment_removeActionForgive\",0,false];\n\t[_UID,\"remove\"] call A3A_fnc_punishment_oceanGulag;\n};\nprivate _forgiveStats = {\n\tprivate _keys = [\"timeTotal\",\"offenceTotal\",\"overhead\",\"sentenceEndTime\"];\n\t[_UID,_keys] call A3A_fnc_punishment_dataRem;\n};\n\nswitch (_source) do {\n\tcase \"punishment_warden\": {\n\t\tcall _forgiveStats;\n\t\tcall _releaseFromSentence;\n\t\t[2, format [\"RELEASE | %1\", _playerStats], _filename] call A3A_fnc_log",
"[\"FF Notification\", \"Enough then.\"] remoteExec [\"A3A_fnc_customHint\", _detainee, false];\n\t\t};\n\t\ttrue;\n\t};\n\tcase \"punishment_warden_manual\": {\n\t\tcall _forgiveStats;\n\t\tcall _releaseFromSentence;\n\t\t[2, format [\"FORGIVE | %1\", _playerStats], _filename] call A3A_fnc_log",
"[\"FF Notification\", \"An admin looks with pity upon your soul.<br/>You have been forgiven.\"] remoteExec [\"A3A_fnc_customHint\", _detainee, false];\n\t\t};\n\t\ttrue;\n\t};\n\tcase \"forgive\": {\n\t\tprivate _keyPairs = [ [\"sentenceEndTime\",0] ];\n\t\t[_UID,_keyPairs] call A3A_fnc_punishment_dataSet;\n\t\ttrue;\n\t};\n\tdefault {\n\t\t[1, format [\"INVALID PARAMS | _source=\"\"%1\"\"\", _source], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Punishment/fn_punishment_sentence_server.sqf": [
"[_UID,_timeTotal] remoteExec [\"A3A_fnc_punishment_sentence_server\",2,false];\n\nAuthor: Caleb Serafin\nLicense: MIT License, Copyright (c) 2019 Barbolani & The Official AntiStasi Community\n*/\nparams [\"_UID\",\"_timeTotal\"];\nprivate _filename = \"fn_punishment_sentence_server.sqf\";\nscriptName \"fn_punishment_sentence_server.sqf\";\n\nif (!isServer) exitWith {\n\t[1, \"NOT SERVER\", _filename] call A3A_fnc_log",
"[[\"sentenceEndTime\",_sentenceEndTime],[\"timeTotal\",_timeTotal],[\"offenceTotal\",1]]; //,[\"name\",\"NO NAME\"]\n[_UID,_keyPairs] call A3A_fnc_punishment_dataSet;\n\n\nprivate _keyPairs = [[\"name\",\"NO NAME\"]];\nprivate _data_instigator = [_UID,_keyPairs] call A3A_fnc_punishment_dataGet;\n_data_instigator params [\"_name\"];\n\nprivate _disconnected = false;\nprivate _disconnectedCleanUp = {\n\t_playerStats = format[\"Player: %1 [%2], _timeTotal: %3\", _name, _UID, str _timeTotal];\n\t[2, format [\"DISCONNECTED/DIED WHILE PUNISHED | %1\", _playerStats], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/REINF/fn_equipRebel.sqf": [
"[\"_unit\", \"_recruitType\"];\nprivate _filename = \"fn_equipRebel\";\n\n// Mostly exists because BIS_fnc_addWeapon won't use backpack space properly with AT launchers\nprivate _addWeaponAndMags = {\n\tparams[\"_unit\", \"_weapon\", \"_magCount\"];\n\n\tif !(isClass (configFile / \"CfgWeapons\" / _weapon)) exitwith {\n\t\t[1, format [\"Bad weapon class: %1\", _weapon], _filename, true] call A3A_log;\n\t};\n\n\t_unit addWeapon _weapon;\n\tprivate _magazine = getArray (configFile / \"CfgWeapons\" / _weapon / \"magazines\") select 0;\n\t_unit addSecondaryWeaponItem _magazine;\n\t_unit addMagazines [_magazine, _magCount-1];\n};\n\n\n// Clear everything except standard items and empty uniform\n// Actually fast, unlike a setUnitLoadout with a full loadout\n_unit setUnitLoadout [ [], [], [],    [uniform _unit, []], [], [],    \"\", \"\", [],\n\t[\"ItemMap\",\"\",\"\",\"ItemCompass\",\"ItemWatch\",\"\"] ];\t\t// no GPS, radio, NVG\nif (haveRadio) then {_unit linkItem \"ItemRadio\"};\n\n// Removed for the moment because I'm not sure what the intentions are for rebel uniforms\n// forceadd required for greenfor vanilla because allRebelUniforms has the blufor guerilla uniforms\n//_unit forceAddUniform (if (!activeGREF) then { selectRandom allRebelUniforms } else { uniform _unit });\n\n\n// Chance of picking armored rather than random vests and headgear, rising with unlocked gear counts\nif !(unlockedHeadgear isEqualTo []) then {\n\tif (count unlockedArmoredHeadgear * 20 < random(100)) then { _unit addHeadgear (selectRandom unlockedHeadgear) }\n\telse { _unit addHeadgear (selectRandom unlockedArmoredHeadgear) };\n};\nif !(unlockedVests isEqualTo []) then {\n\tif (count unlockedArmoredVests * 20 < random(100)) then { _unit addVest (selectRandom unlockedVests) }\n\telse { _unit addVest (selectRandom unlockedArmoredVests); };\n};\nif !(unlockedBackpacksCargo isEqualTo []) then { _unit addBackpack (selectRandom unlockedBackpacksCargo) };\n\n_unit addItemToUniform \"FirstAidKit\";\n_unit addItemToUniform \"FirstAidKit\";\n\n// this should be improved by categorising grenades properly\nprivate _unlockedSmokes = allSmokeGrenades arrayIntersect unlockedMagazines;\nif !(_unlockedSmokes isEqualTo []) then { _unit addMagazines [selectRandom _unlockedSmokes, 2] };\n\n\nprivate _unitClass = typeOf _unit;\n\nswitch (true) do {\n\tcase (_unitClass in SDKSniper): {\n\t\tif (count unlockedSniperRifles > 0) then {\n\t\t\t[_unit, selectRandom unlockedSniperRifles, 8] call _addWeaponAndMags;\n\t\t\tif (count unlockedOptics > 0) then {\n\t\t\t\tprivate _compatibleX = [primaryWeapon _unit] call BIS_fnc_compatibleItems;\n\t\t\t\tprivate _potentials = unlockedOptics select {_x in _compatibleX};\n\t\t\t\tif (count _potentials > 0) then {_unit addPrimaryWeaponItem (_potentials select 0)};\n\t\t\t};\n\t\t} else {\n\t\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\t};\n\t};\n\tcase (_unitClass in SDKMil): {\n\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\t// Adding AA launchers to garrison riflemen because explosives guys can't currently be purchased there\n\t\tif (_recruitType == 2 && {count unlockedAA > 0}) then {\n\t\t\t[_unit, selectRandom unlockedAA, 1] call _addWeaponAndMags;\n\t\t};\n\t};\n\tcase (_unitClass in SDKMG): {\n\t\t[_unit,unlockedMachineGuns] call A3A_fnc_randomRifle;\n\t};\n\tcase (_unitClass in SDKGL): {\n\t\t[_unit,unlockedGrenadeLaunchers] call A3A_fnc_randomRifle;\n\t};\n\tcase (_unitClass in SDKExp): {\n\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\t_unit setUnitTrait [\"explosiveSpecialist\",true];\n\t\t_unit addItemToBackpack \"Toolkit\";\n\t\tif (count unlockedAA > 0) then {\n\t\t\t[_unit, selectRandom unlockedAA, 1] call _addWeaponAndMags;\n\t\t};\n\t\t// TODO: explosives. Not that they know what to do with them.\n\t};\n\tcase (_unitClass in SDKEng): {\n\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\t_unit setUnitTrait [\"engineer\",true];\n\t\t_unit addItemToBackpack \"Toolkit\";\n\t};\n\tcase (_unitClass in SDKMedic): {\n\t\t[_unit,unlockedSMGs] call A3A_fnc_randomRifle;\n\t\t_unit setUnitTrait [\"medic\",true];\n\t\t_unit addItemToBackpack \"Medikit\";\n\t\tfor \"_i\" from 1 to 10 do {_unit addItemToBackpack \"FirstAidKit\"};\n\t};\n\tcase (_unitClass in SDKATman): {\n\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\tif !(unlockedAT isEqualTo []) then {\n\t\t\t[_unit, selectRandom unlockedAT, 4] call _addWeaponAndMags;\n\t\t} else {\n\t\t\tif (hasIFA) then {\n\t\t\t\t[_unit, \"LIB_PTRD\", 10] call _addWeaponAndMags;\n\t\t\t};\n\t\t};\n\t};\n\t// squad leaders and\n\tcase (_unitClass in squadLeaders): {\n\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\tif (_recruitType == 1) then {_unit linkItem \"ItemRadio\"};\n\t};\n \tcase (_unitClass isEqualTo staticCrewTeamPlayer): {\n\t\t[_unit,unlockedRifles] call A3A_fnc_randomRifle;\n\t\tif (_recruitType == 1) then {_unit linkItem \"ItemRadio\"};\n\t};\n\tdefault {\n\t\t[_unit,unlockedSMGs] call A3A_fnc_randomRifle;\n\t\t[1, format[\"Unknown unit class: %1\", _unitClass], _filename] call A3A_fnc_log",
"[]) then {\n\t\t\t_flashlights = _flashlights arrayIntersect ((primaryWeapon _unit) call BIS_fnc_compatibleItems);\n\t\t\tif !(_flashlights isEqualTo []) then {\n\t\t\t\tprivate _flashlight = selectRandom _flashlights;\n\t\t\t\t_unit addPrimaryWeaponItem _flashlight;\n\t\t\t\t_unit assignItem _flashlight;\n\t\t\t\t_unit enableGunLights _flashlight;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// inclined to hand these out even in daytime, but whatever\n\t\t_unit linkItem (selectRandom unlockedNVGs);\n\n/* Removed because it's pretty daft to use IR pointers when all your enemies have NV\n\t\tprivate _pointers = allLaserAttachments arrayIntersect unlockedItems;\n\t\tif !(_pointers isEqualTo []) then {\n\t\t\t_pointers = _pointers arrayIntersect ((primaryWeapon _unit) call BIS_fnc_compatibleItems);\n\t\t\tif !(_pointers isEqualTo []) then {\n\t\t\t\t_pointer = selectRandom _pointers;\n\t\t\t\t_unit addPrimaryWeaponItem _pointer;\n\t\t\t\t_unit assignItem _pointer;\n\t\t\t\t_unit enableIRLasers true;\n\t\t\t};\n\t\t};\n*/\n\t};\n};\n\n// remove backpack if empty, otherwise squad troops will throw it on the ground\nif (backpackItems _unit isEqualTo []) then { removeBackpack _unit };\n\n[4, format[\"Class %1, type %2, loadout %3\", _unitClass, _recruitType, str (getUnitLoadout _unit)], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/REINF/fn_postmortem.sqf": [
"[\"_victim\"];\nprivate _filename = \"fn_postmortem\";\nprivate _group = group _victim;\n\n[3,\"PostMortem Called\",_filename] call A3A_fnc_log",
"[1,\"Function failed called with null param.\",_filename] call A3A_fnc_log",
"[3,format[\"Group for victim :: %1, no group found! Removing from Statics list.\",_victim],_filename] call A3A_fnc_log",
"[_victim];\n        publicVariable \"staticsToSave\";\n    };\n};\n\ncleanSTR = format [\"Pausing for %1 minutes before cleaning victim: %2 and group: %3\", round cleantime/60, _victim, _group];\n[3,cleanSTR, _filename] call A3A_fnc_log",
"[3,format[\"Cleanup complete for %1 victim.\", _victim],_filename] call A3A_fnc_log",
"[3,format[\"Cleanup complete for %1 group.\", _group],_filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/SalvageRope/fn_salvageRope.sqf": [
"[3, format [\"Salvage Rope Action added on JIP client: %1\", player], _filename, true] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Save/fn_loadPlayer.sqf": [
"[1, \"Miscalled server-only function\", _filename] call A3A_fnc_log",
"[\"_playerId\", \"_unit\"];\n\nif !([_playerId] call A3A_fnc_playerHasSave) exitWith {\n\t[2, format [\"No save found for player ID %1\", _playerId], _filename] call A3A_fnc_log",
"[_playerId, _unit] call A3A_fnc_resetPlayer;\n};\n\n[2, format [\"Loading player data for ID %1 into unit %2\", _playerId, _unit], _filename] call A3A_fnc_log",
"[_playerId, \"loadoutPlayer\"] call A3A_fnc_retrievePlayerStat;\nif (!isNil \"_loadout\") then { _unit setUnitLoadout _loadout };\n\nprivate _score = 0;\nprivate _rank = \"PRIVATE\";\n\nif ([_unit] call A3A_fnc_isMember) then\n{\n\tprivate _saveScore = [_playerId, \"scorePlayer\"] call A3A_fnc_retrievePlayerStat;\n\tif (!isNil \"_saveScore\" && { _saveScore isEqualType 0 }) then {_score = _saveScore};\n\t\n\tprivate _saveRank = [_playerId, \"rankPlayer\"] call A3A_fnc_retrievePlayerStat;\n\tif (!isNil \"_saveRank\" && { _saveRank isEqualType \"\" }) then {_rank = _saveRank};\n};\n\nprivate _money = [_playerId, \"moneyX\"] call A3A_fnc_retrievePlayerStat;\nif (isNil \"_money\" || {!(_money isEqualType 0)}) then {_money = playerStartingMoney};\n\nprivate _garage = [_playerId, \"personalGarage\"] call A3A_fnc_retrievePlayerStat;\nif (isNil \"_garage\" || {!(_garage isEqualType [])}) then {_garage = []};\n\n_unit setVariable [\"score\", _score, true];\n_unit setUnitRank _rank;\n_unit setVariable [\"rankX\", _rank, true];\n_unit setVariable [\"moneyX\", _money, true];\n[_unit, _garage] call A3A_fnc_setPersonalGarage;\n\n[] remoteExec [\"A3A_fnc_statistics\", _unit];\n_unit setVariable [\"canSave\", true, true];\n\n[2, format [\"Player %1: Score %2, rank %3, money %4, garage count %5\", _playerId, _score, _rank, _money, count _garage], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Save/fn_resetPlayer.sqf": [
"[1, \"Miscalled server-only function\", _filename] call A3A_fnc_log",
"[\"_playerId\", \"_unit\"];\n\n[2, format [\"Resetting player data for ID %1, unit %2\", _playerId, _unit], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Save/fn_saveLoop.sqf": [
"[1, \"Miscalled server-only function\", _filename] call A3A_fnc_log",
"[\"Save Game\", \"Server data save is still in progress\"] remoteExecCall [\"A3A_fnc_customHint\",theBoss]};\nsavingServer = true;\n[2, \"Starting persistent save\", _filename] call A3A_fnc_log",
"[\"Persistent Save Starting\",\"Starting persistent save...\"] remoteExec [\"A3A_fnc_customHint\",0,false];\n// Save each player with global flag\n{\n\t[getPlayerUID _x, _x, true] call A3A_fnc_savePlayer;\n} forEach (call A3A_fnc_playableUnits);\n\n// Check if this campaign is already in the save list\nprivate _saveList = [profileNamespace getVariable \"antistasiSavedGames\"] param [0, [], [[]]];\nprivate _saveIndex = -1;\n{\n\tif (_x select 0 == campaignID) exitWith { _saveIndex = forEachIndex };\n} forEach _saveList;\n\n// If not, append a new entry\nif (_saveIndex == -1) then {\n\tprivate _gametype = if (teamPlayer isEqualTo independent) then {\"Greenfor\"} else {\"Blufor\"};\n\t_saveList pushBack [campaignID, worldName, _gametype];\n\tprofileNamespace setVariable [\"antistasiSavedGames\", _saveList];\n};\n\n// Update the legacy campaign ID store\nprofileNamespace setVariable [\"ss_campaignID\", campaignID];\n\nprivate [\"_garrison\"];\n[\"attackCountdownOccupants\", attackCountdownOccupants] call A3A_fnc_setStatVariable;\n[\"attackCountdownInvaders\", attackCountdownInvaders] call A3A_fnc_setStatVariable;\n[\"gameMode\", gameMode] call A3A_fnc_setStatVariable;\n[\"difficultyX\", skillMult] call A3A_fnc_setStatVariable;\n[\"bombRuns\", bombRuns] call A3A_fnc_setStatVariable;\n[\"smallCAmrk\", smallCAmrk] call A3A_fnc_setStatVariable;\n[\"membersX\", membersX] call A3A_fnc_setStatVariable;\nprivate _antennasDeadPositions = [];\n{ _antennasDeadPositions pushBack getPos _x; } forEach antennasDead;\n[\"antennas\", _antennasDeadPositions] call A3A_fnc_setStatVariable;\n//[\"mrkNATO\", (markersX - controlsX) select {sidesX getVariable [_x,sideUnknown] == Occupants}] call A3A_fnc_setStatVariable;\n[\"mrkSDK\", (markersX - controlsX - outpostsFIA) select {sidesX getVariable [_x,sideUnknown] == teamPlayer}] call A3A_fnc_setStatVariable;\n[\"mrkCSAT\", (markersX - controlsX) select {sidesX getVariable [_x,sideUnknown] == Invaders}] call A3A_fnc_setStatVariable;\n[\"posHQ\", [getMarkerPos respawnTeamPlayer,getPos fireX,[getDir boxX,getPos boxX],[getDir mapX,getPos mapX],getPos flagX,[getDir vehicleBox,getPos vehicleBox]]] call A3A_fnc_setStatVariable;\n[\"dateX\", date] call A3A_fnc_setStatVariable;\n[\"skillFIA\", skillFIA] call A3A_fnc_setStatVariable;\n[\"destroyedSites\", destroyedSites] call A3A_fnc_setStatVariable;\n[\"distanceSPWN\", distanceSPWN] call A3A_fnc_setStatVariable;\n[\"civPerc\", civPerc] call A3A_fnc_setStatVariable;\n[\"chopForest\", chopForest] call A3A_fnc_setStatVariable;\n[\"maxUnits\", maxUnits] call A3A_fnc_setStatVariable;\n[\"nextTick\", nextTick - time] call A3A_fnc_setStatVariable;\n[\"weather\",[fogParams,rain]] call A3A_fnc_setStatVariable;\nprivate _destroyedPositions = destroyedBuildings apply { getPosATL _x };\n[\"destroyedBuildings\",_destroyedPositions] call A3A_fnc_setStatVariable;\n\n//Save aggression values\n[\"aggressionOccupants\", [aggressionLevelOccupants, aggressionStackOccupants]] call A3A_fnc_setStatVariable;\n[\"aggressionInvaders\", [aggressionLevelInvaders, aggressionStackInvaders]] call A3A_fnc_setStatVariable;\n\nprivate [\"_hrBackground\",\"_resourcesBackground\",\"_veh\",\"_typeVehX\",\"_weaponsX\",\"_ammunition\",\"_items\",\"_backpcks\",\"_containers\",\"_arrayEst\",\"_posVeh\",\"_dierVeh\",\"_prestigeOPFOR\",\"_prestigeBLUFOR\",\"_city\",\"_dataX\",\"_markersX\",\"_garrison\",\"_arrayMrkMF\",\"_arrayOutpostsFIA\",\"_positionOutpost\",\"_typeMine\",\"_posMine\",\"_detected\",\"_typesX\",\"_exists\",\"_friendX\"];\n\n_hrBackground = (server getVariable \"hr\") + ({(alive _x) and (not isPlayer _x) and (_x getVariable [\"spawner\",false]) and ((group _x in (hcAllGroups theBoss) or (isPlayer (leader _x))) and (side group _x == teamPlayer))} count allUnits);\n_resourcesBackground = server getVariable \"resourcesFIA\";\n_vehInGarage = [];\n_vehInGarage = _vehInGarage + vehInGarage;\n{\n\t_friendX = _x;\n\tif ((_friendX getVariable [\"spawner\",false]) and (side group _friendX == teamPlayer))then {\n\t\tif ((alive _friendX) and (!isPlayer _friendX)) then {\n\t\t\tif (((isPlayer leader _friendX) and (!isMultiplayer)) or (group _friendX in (hcAllGroups theBoss)) and (not((group _friendX) getVariable [\"esNATO\",false]))) then {\n\t\t\t\t_resourcesBackground = _resourcesBackground + (server getVariable [(typeOf _friendX),0]);\n\t\t\t\t_backpck = backpack _friendX;\n\t\t\t\tif (_backpck != \"\") then {\n\t\t\t\t\tswitch (_backpck) do {\n\t\t\t\t\t\tcase MortStaticSDKB: {_resourcesBackground = _resourcesBackground + ([SDKMortar] call A3A_fnc_vehiclePrice)};\n\t\t\t\t\t\tcase AAStaticSDKB: {_resourcesBackground = _resourcesBackground + ([staticAAteamPlayer] call A3A_fnc_vehiclePrice)};\n\t\t\t\t\t\tcase MGStaticSDKB: {_resourcesBackground = _resourcesBackground + ([SDKMGStatic] call A3A_fnc_vehiclePrice)};\n\t\t\t\t\t\tcase ATStaticSDKB: {_resourcesBackground = _resourcesBackground + ([staticATteamPlayer] call A3A_fnc_vehiclePrice)};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tif (vehicle _friendX != _friendX) then {\n\t\t\t\t\t_veh = vehicle _friendX;\n\t\t\t\t\t_typeVehX = typeOf _veh;\n\t\t\t\t\tif (not(_veh in staticsToSave)) then {\n\t\t\t\t\t\tif ((_veh isKindOf \"StaticWeapon\") or (driver _veh == _friendX)) then {\n\t\t\t\t\t\t\tif ((group _friendX in (hcAllGroups theBoss)) or (!isMultiplayer)) then {\n\t\t\t\t\t\t\t\t_resourcesBackground = _resourcesBackground + ([_typeVehX] call A3A_fnc_vehiclePrice);\n\t\t\t\t\t\t\t\tif (count attachedObjects _veh != 0) then {{_resourcesBackground = _resourcesBackground + ([typeOf _x] call A3A_fnc_vehiclePrice)} forEach attachedObjects _veh};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n} forEach allUnits;\n\n\n[\"resourcesFIA\", _resourcesBackground] call A3A_fnc_setStatVariable;\n[\"hr\", _hrBackground] call A3A_fnc_setStatVariable;\n[\"vehInGarage\", _vehInGarage] call A3A_fnc_setStatVariable;\n\n_arrayEst = [];\n{\n\t_veh = _x;\n\t_typeVehX = typeOf _veh;\n\tif ((_veh distance getMarkerPos respawnTeamPlayer < 50) and !(_veh in staticsToSave) and !(_typeVehX in [\"ACE_SandbagObject\",\"Land_PaperBox_01_open_boxes_F\",\"Land_PaperBox_01_open_empty_F\"])) then {\n\t\tif (((not (_veh isKindOf \"StaticWeapon\")) and (not (_veh isKindOf \"ReammoBox\")) and (not (_veh isKindOf \"ReammoBox_F\")) and (not (_veh isKindOf \"FlagCarrier\")) and (not(_veh isKindOf \"Building\"))) and (not (_typeVehX == \"C_Van_01_box_F\")) and (count attachedObjects _veh == 0) and (alive _veh) and ({(alive _x) and (!isPlayer _x)} count crew _veh == 0) and (not(_typeVehX == \"WeaponHolderSimulated\"))) then {\n\t\t\t_posVeh = getPos _veh;\n\t\t\t_xVectorUp = vectorUp _veh;\n\t\t\t_xVectorDir = vectorDir _veh;\n\t\t\t_arrayEst pushBack [_typeVehX,_posVeh,_xVectorUp,_xVectorDir];\n\t\t};\n\t};\n} forEach vehicles - [boxX,flagX,fireX,vehicleBox,mapX];\n\n_sites = markersX select {sidesX getVariable [_x,sideUnknown] == teamPlayer};\n{\n\t_positionX = position _x;\n\tif ((alive _x) and !(surfaceIsWater _positionX) and !(isNull _x)) then {\n\t\t_arrayEst pushBack [typeOf _x,getPosATL _x,getDir _x];\n\t};\n} forEach staticsToSave;\n\n[\"staticsX\", _arrayEst] call A3A_fnc_setStatVariable;\n[] call A3A_fnc_arsenalManage;\n\n_jna_dataList = [];\n_jna_dataList = _jna_dataList + jna_dataList;\n[\"jna_dataList\", _jna_dataList] call A3A_fnc_setStatVariable;\n\n_prestigeOPFOR = [];\n_prestigeBLUFOR = [];\n\n{\n\t_city = _x;\n\t_dataX = server getVariable _city;\n\t_prestigeOPFOR = _prestigeOPFOR + [_dataX select 2];\n\t_prestigeBLUFOR = _prestigeBLUFOR + [_dataX select 3];\n} forEach citiesX;\n\n[\"prestigeOPFOR\", _prestigeOPFOR] call A3A_fnc_setStatVariable;\n[\"prestigeBLUFOR\", _prestigeBLUFOR] call A3A_fnc_setStatVariable;\n\n_markersX = markersX - outpostsFIA - controlsX;\n_garrison = [];\n_wurzelGarrison = [];\n\n{\n\t_garrison pushBack [_x,garrison getVariable [_x,[]]];\n\t_wurzelGarrison pushBack [\n\t\t_x,\n\t\tgarrison getVariable [format [\"%1_garrison\",_x], []],\n\t \tgarrison getVariable [format [\"%1_requested\",_x], []],\n\t\tgarrison getVariable [format [\"%1_over\", _x], []]\n\t];\n} forEach _markersX;\n\n[\"garrison\",_garrison] call A3A_fnc_setStatVariable;\n[\"wurzelGarrison\", _wurzelGarrison] call A3A_fnc_setStatVariable;\n[\"usesWurzelGarrison\", true] call A3A_fnc_setStatVariable;\n\n_arrayMines = [];\n{\n\t_typeMine = typeOf _x;\n\t_posMine = getPos _x;\n\t_dirMine = getDir _x;\n\t_detected = [];\n\tif (_x mineDetectedBy teamPlayer) then {\n\t\t_detected pushBack teamPlayer\n\t};\n\tif (_x mineDetectedBy Occupants) then {\n\t\t_detected pushBack Occupants\n\t};\n\tif (_x mineDetectedBy Invaders) then {\n\t\t_detected pushBack Invaders\n\t};\n\t_arrayMines = _arrayMines + [[_typeMine,_posMine,_detected,_dirMine]];\n} forEach allMines;\n\n[\"minesX\", _arrayMines] call A3A_fnc_setStatVariable;\n\n_arrayOutpostsFIA = [];\n\n{\n\t_positionOutpost = getMarkerPos _x;\n\t_arrayOutpostsFIA pushBack [_positionOutpost,garrison getVariable [_x,[]]];\n} forEach outpostsFIA;\n\n[\"outpostsFIA\", _arrayOutpostsFIA] call A3A_fnc_setStatVariable;\n\nif (!isDedicated) then {\n\t_typesX = [];\n\t{\n\t\tif ([_x] call BIS_fnc_taskExists) then {\n\t\t\t_state = [_x] call BIS_fnc_taskState;\n\t\t\tif (_state == \"CREATED\") then {\n\t\t\t\t_typesX pushBackUnique _x;\n\t\t\t};\n\t\t};\n\t} forEach [\"AS\",\"CON\",\"DES\",\"LOG\",\"RES\",\"CONVOY\",\"DEF_HQ\",\"rebelAttack\",\"invaderPunish\"];\n\n\t[\"tasks\",_typesX] call A3A_fnc_setStatVariable;\n};\n\n_dataX = [];\n{\n\t_dataX pushBack [_x,server getVariable _x];\n} forEach airportsX + outposts;\n\n[\"idlebases\",_dataX] call A3A_fnc_setStatVariable;\n\n_dataX = [];\n{\n\t_dataX pushBack [_x,timer getVariable _x];\n} forEach (vehAttack + vehNATOAttackHelis + vehPlanes + vehCSATAttackHelis);\n\n[\"idleassets\",_dataX] call A3A_fnc_setStatVariable;\n\n_dataX = [];\n{\n\t_dataX pushBack [_x,killZones getVariable [_x,[]]];\n} forEach airportsX + outposts;\n\n[\"killZones\",_dataX] call A3A_fnc_setStatVariable;\n\n_controlsX = controlsX select {(sidesX getVariable [_x,sideUnknown] == teamPlayer) and (controlsX find _x < defaultControlIndex)};\n[\"controlsSDK\",_controlsX] call A3A_fnc_setStatVariable;\n\n//Saving the state of the testing timer\n[\"testingTimerIsActive\", testingTimerIsActive] call A3A_fnc_setStatVariable;\n\nsaveProfileNamespace;\nsavingServer = false;\n_saveHintText = [\"<t size='1.5'>\",nameTeamPlayer,\" Assets:<br/><t color='#f0d498'>HR: \",str _hrBackground,\"<br/>Money: \",str _resourcesBackground,\" \u20ac</t></t><br/><br/>Further infomation is provided in <t color='#f0d498'>Map Screen > Game Options > Persistent Save-game</t>.\"] joinString \"\";\n[\"Persistent Save Completed\",_saveHintText] remoteExec [\"A3A_fnc_customHint\",0,false];\n[2, \"Persistent Save Completed\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Save/fn_savePlayer.sqf": [
"[1, \"Miscalled server-only function\", _filename] call A3A_fnc_log",
"[\"_playerId\", \"_playerUnit\", [\"_globalSave\", false]];\n\n_playerUnit = _playerUnit getVariable [\"owner\", _playerUnit];\t\t// save the real player, not remote controlled AIs\n\nif (isNil \"_playerId\" || {_playerId == \"\"}) exitWith {\n\t[1, format [\"Not saving player of unit %1 due to missing UID\", _playerUnit], _filename] call A3A_fnc_log",
"[1, format [\"Not saving player %1 due to missing unit\", _playerId], _filename] call A3A_fnc_log",
"[1, format [\"Not saving player %1 due to missing variables. What happened here?\", _playerId], _filename] call A3A_fnc_log",
"[2, format [\"Not saving player %1 due to them being on the wrong team.\", _playerId], _filename] call A3A_fnc_log",
"['canSave', false]) exitWith {\n\t[2, format [\"Not saving player %1 due to canSave being false.\", _playerId], _filename] call A3A_fnc_log",
"[2, format [\"Saving player %1 on side %2\", _playerId, side group _playerUnit], _filename] call A3A_fnc_log",
"[\"savedPlayers\", savedPlayers] call A3A_fnc_setStatVariable;\n};\n\nprivate _shouldStripLoadout = false;\nif (!(alive _playerUnit) || (_playerUnit getVariable [\"incapacitated\", false])) then \n{\n\t_shouldStripLoadout = true;\n\t[2, format [\"Stripping saved loadout of player %1 due to saving while dead or unconcious\", _playerId], _filename] call A3A_fnc_log",
"[_playerId, \"loadoutPlayer\", (getUnitLoadout _playerUnit) call A3A_fnc_stripGearFromLoadout] call A3A_fnc_savePlayerStat;\n} else {\n\t[_playerId, \"loadoutPlayer\", getUnitLoadout _playerUnit] call A3A_fnc_savePlayerStat;\n};\n\nif (isMultiplayer) then\n{\n\tprivate _garage = [_playerUnit] call A3A_fnc_getPersonalGarage;\n\t[_playerId, \"scorePlayer\", _playerUnit getVariable \"score\"] call A3A_fnc_savePlayerStat;\n\t[_playerId, \"rankPlayer\", rank _playerUnit] call A3A_fnc_savePlayerStat;\n\t[_playerId, \"personalGarage\", [_playerUnit] call A3A_fnc_getPersonalGarage] call A3A_fnc_savePlayerStat;\n\n\t_totalMoney = _playerUnit getVariable [\"moneyX\", 0];\n\tif (_shouldStripLoadout) then { _totalMoney = round (_totalMoney * 0.85) };\n\n\tif (_globalSave) then \n\t{\n\t\t// Add value of live AIs owned by player\n\t\t// plus cost of vehicles driven by player-owned units, including self\n\t\t// plus cost of unsaved static weapons aimed by player-owned units, including self\n\t\t{\n\t\t\tif (alive _x && (_x getVariable [\"owner\", objNull] == _playerUnit)) then\n\t\t\t{\n\t\t\t\tif (_x != _playerUnit) then {\n\t\t\t\t\tprivate _unitPrice = server getVariable [typeOf _x, 0];\n\t\t\t\t\t_totalMoney = _totalMoney + _unitPrice;\n\t\t\t\t};\n\t\t\t\tprivate _veh = vehicle _x;\n\t\t\t\tif (_veh == _x || {_veh in staticsToSave}) exitWith {};\n\t\t\t\tif (_x == driver _veh || {_x == gunner _veh && _veh isKindOf \"StaticWeapon\"}) then {\n\t\t\t\t\tprivate _vehPrice = [typeof _veh] call A3A_fnc_vehiclePrice;\n\t\t\t\t\t_totalMoney = _totalMoney + _vehPrice;\n\t\t\t\t};\n\t\t\t};\n\n\t\t} forEach (units group _playerUnit);\n\t};\n\t[_playerId, \"moneyX\", _totalMoney] call A3A_fnc_savePlayerStat;\n\n\t[2, format [\"Saved player %1: %2 rank, %3 money, %4 vehicles\", _playerId, rank _playerUnit, _totalMoney, count _garage], _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/Utility/fn_log.sqf": [
"[1, \"Message\", _filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initACEUnconsciousHandler.sqf": [
"[2,\"initACEUnconsciousHandler started\",_fileName] call A3A_fnc_log",
"[\"ace_unconscious\", {\n\tparams[\"_unit\", \"_knockout\"];\n\tprivate _realSide = side group _unit;\t\t// setUnconscious in ACE often breaks this otherwise\n\tif (_knockout) exitWith {\n//\t\t[3, format [\"Unit type %1, side %2, realside %3, captive %4, lifestate %5 knocked out\", typeof _unit, side _unit, _realSide, str (captive _unit), lifestate _unit], ace_unconscious handler] call A3A_fnc_log",
"[\"incapacitated\", true, true];\t// for canFight tests\n\n        //Make sure to pass group lead if unit is the leader\n        if (_unit == leader (group _unit)) then\n        {\n            private _index = (units (group _unit)) findIf {[_x] call A3A_fnc_canFight};\n            if(_index != -1) then\n            {\n                (group _unit) selectLeader ((units (group _unit)) select _index);\n            };\n        };\n\t};\n\n//\t[3, format [\"Unit type %1, side %2, realside %3, captive %4, lifestate %5 waking up\", typeof _unit, side _unit, _realSide, str (captive _unit), lifestate _unit], ace_unconscious handler] call A3A_fnc_log",
"[\"incapacitated\", false, true];\n\t[_unit, false] remoteExec [\"setCaptive\", _unit];\t\t\t// match vanilla behaviour\n\n\tif (isPlayer _unit) exitWith {};\t\t\t\t\t// don't force surrender with players\n\tif (_realSide != Occupants && _realSide != Invaders) exitWith {};\n\tif (unit getVariable [\"surrendered\", false]) exitWith {};\t\t// don't surrender twice\n\n\t// surrender if we don't have a primary weapon\n\tif (primaryWeapon _unit == \"\") exitWith {\n\t\t[_unit] remoteExec [\"A3A_fnc_surrenderAction\", _unit];\t\t// execute where unit is local\n\t};\n\n\t// find closest fighting unit within 50m\n\tprivate _nearestUnit = objNull;\n\tprivate _minDist = 999;\n\t{\n\t\tprivate _dist = _x distance _unit;\n\t\tif (side _x != civilian && _x != _unit && _dist < _minDist && {[_x] call A3A_fnc_canFight}) then {\n\t\t\t_minDist = _dist;\n\t\t\t_nearestUnit = _x;\n\t\t};\n\t} forEach (_unit nearEntities [\"Man\", 50]);\n\n//\t[3, format [\"Nearest unit side = %1\", str (side _nearestUnit)], \"ace_unconscious handler\"] call A3A_fnc_log",
"[_unit] remoteExec [\"A3A_fnc_surrenderAction\", _unit];\n\t};\n\n}] call CBA_fnc_addEventHandler;\n\n\n[2,\"initACEUnconsciousHandler completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initClient.sqf": [
"[2,\"initClient started\",_fileName] call A3A_fnc_log",
"[] spawn {\n\t\twaitUntil {(!isNil \"serverInitDone\")};\n\t\t[clientOwner, \"destroyedBuildings\"] remoteExecCall [\"publicVariableClient\", 2];\n\t};\n};\n\n// Headless clients install some support functions, register with the server and bail out\nif (!hasInterface) exitWith {\n\tcall A3A_fnc_initFuncs;\n\tcall A3A_fnc_initVar;\n\tcall A3A_fnc_loadNavGrid;\n\t[2,format [\"Headless client version: %1\",localize \"STR_antistasi_credits_generic_version_text\"],_fileName] call A3A_fnc_log",
"[clientOwner] remoteExec [\"A3A_fnc_addHC\",2];\n};\n\n\nwaitUntil {!isNull player};\nwaitUntil {player == player};\n//Disable player saving until they're fully ready, and have chosen whether to load their save.\nplayer setVariable [\"canSave\", false, true];\n\nif (!isServer) then {\n\tcall A3A_fnc_initFuncs;\n\tcall A3A_fnc_initVar;\n\t[2,format [\"MP client version: %1\",localize \"STR_antistasi_credits_generic_version_text\"],_fileName] call A3A_fnc_log",
"[] execVM \"briefing.sqf\";\n\n_isJip = _this select 1;\nif (isMultiplayer) then {\n\tif (side player == teamPlayer) then {\n\t\tplayer setVariable [\"eligible\",true,true];\n\t};\n\tmusicON = false;\n\t//waitUntil {scriptdone _introshot};\n\tdisableUserInput true;\n\tcutText [\"Waiting for Players and Server Init\",\"BLACK\",0];\n\t[2,\"Waiting for server...\",_fileName] call A3A_fnc_log",
"[\"Starting Mission\",\"BLACK IN\",0];\n\t[2,\"Server loaded!\",_fileName] call A3A_fnc_log",
"[2,format [\"JIP client: %1\",_isJIP],_fileName] call A3A_fnc_log",
"[] execVM \"orgPlayers\\radioJam.sqf\";\n\t};\n\ttkPunish = if (\"tkPunish\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\tif (!isNil \"placementDone\") then {_isJip = true};//workaround for BIS fail on JIP detection\n}\nelse {\n\tplayer setVariable [\"eligible\",true];\n\ttheBoss = player;\n\tgroupX = group player;\n\tif (worldName == \"Tanoa\") then {groupX setGroupId [\"Pulu\",\"GroupColor4\"]} else {groupX setGroupId [\"Stavros\",\"GroupColor4\"]};\n\tplayer setIdentity \"protagonista\";\n\tplayer setUnitRank \"COLONEL\";\n\tplayer hcSetGroup [group player];\t\t// why?\n\tplayer setUnitTrait [\"medic\", true];\n\tplayer setUnitTrait [\"engineer\", true];\n\twaitUntil {/*(scriptdone _introshot) and */(!isNil \"serverInitDone\")};\n};\n\n[] spawn A3A_fnc_ambientCivs;\nprivate [\"_colourTeamPlayer\", \"_colorInvaders\"];\n_colourTeamPlayer = teamPlayer call BIS_fnc_sideColor;\n_colorInvaders = Invaders call BIS_fnc_sideColor;\n_positionX = if (side player isEqualTo teamPlayer) then {position petros} else {getMarkerPos \"respawn_west\"};\n\n{\n\t_x set [3, 0.33]\n} forEach [_colourTeamPlayer, _colorInvaders];\n\n_introShot = [\n\t_positionX, // Target position\n\tformat [\"%1\",worldName], // SITREP text\n\t50, //  altitude\n\t50, //  radius\n\t90, //  degrees viewing angle\n\t0, // clockwise movement\n\t[\n\t\t[\"\\a3\\ui_f\\data\\map\\markers\\Nato\\o_inf.paa\", _colourTeamPlayer, markerPos \"insertMrk\", 1, 1, 0, \"Insertion Point\", 0],\n\t\t[\"\\a3\\ui_f\\data\\map\\markers\\Nato\\o_inf.paa\", _colorInvaders, markerPos \"towerBaseMrk\", 1, 1, 0, \"Radio Towers\", 0]\n\t]\n] spawn BIS_fnc_establishingShot;\n\n//Initialise membershipEnabled so we can do isMember checks.\nmembershipEnabled = if (isMultiplayer && \"membership\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\ndisableUserInput false;\nplayer setVariable [\"spawner\",true,true];\n\nif (isMultiplayer && {playerMarkersEnabled}) then {\n\t[] spawn A3A_fnc_playerMarkers;\n};\n\n[player] spawn A3A_fnc_initRevive;\t\t// with ACE medical, only used for helmet popping & TK checks\n[] spawn A3A_fnc_outOfBounds;\n\nif (!hasACE) then {\n\t[] spawn A3A_fnc_tags;\n};\n\nif (player getVariable [\"pvp\",false]) exitWith {\n\tlastVehicleSpawned = objNull;\n\t[player] call A3A_fnc_pvpCheck;\n\t[player] call A3A_fnc_dress;\n\tif (hasACE) then {[] call A3A_fnc_ACEpvpReDress};\n\trespawnTeamPlayer setMarkerAlphaLocal 0;\n\n\tplayer addEventHandler [\"GetInMan\", {_this call A3A_fnc_ejectPvPPlayerIfInvalidVehicle}];\n\tplayer addEventHandler [\"SeatSwitchedMan\", {[_this select 0, assignedVehicleRole (_this select 0) select 0, _this select 2] call A3A_fnc_ejectPvPPlayerIfInvalidVehicle}];\n\tplayer addEventHandler [\"InventoryOpened\", {\n\t\t_override = false;\n\t\t_boxX = typeOf (_this select 1);\n\t\tif ((_boxX == NATOAmmoBox) or (_boxX == CSATAmmoBox)) then {_override = true};\n\t\t_override\n\t}];\n\t_nameX = if (side player == Occupants) then {nameOccupants} else {nameInvaders};\n\twaituntil {!isnull (finddisplay 46)};\n\tgameMenu = (findDisplay 46) displayAddEventHandler [\"KeyDown\", {\n\t\t_handled = FALSE;\n\t\tif (_this select 1 == 207) then {\n\t\t\tif (!hasACEhearing) then {\n\t\t\t\tif (soundVolume <= 0.5) then {\n\t\t\t\t\t0.5 fadeSound 1;\n\t\t\t\t\t[\"Ear Plugs\", \"You've taken out your ear plugs.\", true] call A3A_fnc_customHint;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t0.5 fadeSound 0.1;\n\t\t\t\t\t[\"Ear Plugs\", \"You've inserted your ear plugs.\", true] call A3A_fnc_customHint;\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tif (_this select 1 == 21) then {\n\t\t\t\tclosedialog 0;\n\t\t\t\t_nul = createDialog \"NATO_player\";\n\t\t\t};\n\t\t};\n\t\t_handled\n\t}];\n};\n\n// Placeholders, should get replaced globally by the server\nplayer setVariable [\"score\",0];\nplayer setVariable [\"moneyX\",0];\nplayer setVariable [\"rankX\",rank player];\n\nplayer setVariable [\"owner\",player,true];\nplayer setVariable [\"punish\",0,true];\n\nstragglers = creategroup teamPlayer;\n(group player) enableAttack false;\nplayer setUnitTrait [\"camouflageCoef\",0.8];\nplayer setUnitTrait [\"audibleCoef\",0.8];\n\n//Give the player the base loadout.\n[player] call A3A_fnc_dress;\n\nplayer setvariable [\"compromised\",0];\nplayer addEventHandler [\"FiredMan\", {\n\t_player = _this select 0;\n\tif (captive _player) then {\n\t\t//if ({((side _x== Invaders) or (side _x== Occupants)) and (_x knowsAbout player > 1.4)} count allUnits > 0) then\n\t\tif ({if (((side _x == Occupants) or (side _x == Invaders)) and (_x distance player < 300)) exitWith {1}} count allUnits > 0) then {\n\t\t\t[_player,false] remoteExec [\"setCaptive\",0,_player];\n\t\t\t_player setCaptive false;\n\t\t}\n\t\telse {\n\t\t\t_city = [citiesX,_player] call BIS_fnc_nearestPosition;\n\t\t\t_size = [_city] call A3A_fnc_sizeMarker;\n\t\t\t_dataX = server getVariable _city;\n\t\t\tif (random 100 < _dataX select 2) then {\n\t\t\t\tif (_player distance getMarkerPos _city < _size * 1.5) then {\n\t\t\t\t\t[_player,false] remoteExec [\"setCaptive\",0,_player];\n\t\t\t\t\t_player setCaptive false;\n\t\t\t\t\tif (vehicle _player != _player) then {\n\t\t\t\t\t\t{if (isPlayer _x) then {[_x,false] remoteExec [\"setCaptive\",0,_x]; _x setCaptive false}} forEach ((assignedCargo (vehicle _player)) + (crew (vehicle _player)) - [player]);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n}];\nplayer addEventHandler [\"InventoryOpened\", {\n\tprivate [\"_playerX\",\"_containerX\",\"_typeX\"];\n\t_control = false;\n\t_playerX = _this select 0;\n\tif (captive _playerX) then {\n\t\t_containerX = _this select 1;\n\t\t_typeX = typeOf _containerX;\n\t\tif (((_containerX isKindOf \"Man\") and (!alive _containerX)) or (_typeX == NATOAmmoBox) or (_typeX == CSATAmmoBox)) then {\n\t\t\tif ({if (((side _x== Invaders) or (side _x== Occupants)) and (_x knowsAbout _playerX > 1.4)) exitWith {1}} count allUnits > 0) then{\n\t\t\t\t[_playerX,false] remoteExec [\"setCaptive\",0,_playerX];\n\t\t\t\t_playerX setCaptive false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_city = [citiesX,_playerX] call BIS_fnc_nearestPosition;\n\t\t\t\t_size = [_city] call A3A_fnc_sizeMarker;\n\t\t\t\t_dataX = server getVariable _city;\n\t\t\t\tif (random 100 < _dataX select 2) then {\n\t\t\t\t\tif (_playerX distance getMarkerPos _city < _size * 1.5) then {\n\t\t\t\t\t\t[_playerX,false] remoteExec [\"setCaptive\",0,_playerX];\n\t\t\t\t\t\t_playerX setCaptive false;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n\t_control\n}];\n/*\nplayer addEventHandler [\"InventoryClosed\", {\n\t_control = false;\n\t_uniform = uniform player;\n\t_typeSoldier = getText (configfile >> \"CfgWeapons\" >> _uniform >> \"ItemInfo\" >> \"uniformClass\");\n\t_sideType = getNumber (configfile >> \"CfgVehicles\" >> _typeSoldier >> \"side\");\n\tif ((_sideType == 1) or (_sideType == 0) and (_uniform != \"\")) then {\n\t\tif !(player getVariable [\"disguised\",false]) then {\n\t\t\thint \"You are wearing an enemy uniform, this will make the AI attack you. Beware!\";\n\t\t\tplayer setVariable [\"disguised\",true];\n\t\t\tplayer addRating (-1*(2001 + rating player));\n\t\t};\n\t}\n\telse {\n\t\tif (player getVariable [\"disguised\",false]) then {\n\t\t\thint \"You removed your enemy uniform\";\n\t\t\tplayer addRating (rating player * -1);\n\t\t};\n\t};\n\t_control\n}];\n*/\nplayer addEventHandler [\"HandleHeal\", {\n\t_player = _this select 0;\n\tif (captive _player) then {\n\t\tif ({((side _x== Invaders) or (side _x== Occupants)) and (_x knowsAbout player > 1.4)} count allUnits > 0) then {\n\t\t\t[_player,false] remoteExec [\"setCaptive\",0,_player];\n\t\t\t_player setCaptive false;\n\t\t}\n\t\telse {\n\t\t\t_city = [citiesX,_player] call BIS_fnc_nearestPosition;\n\t\t\t_size = [_city] call A3A_fnc_sizeMarker;\n\t\t\t_dataX = server getVariable _city;\n\t\t\tif (random 100 < _dataX select 2) then {\n\t\t\t\tif (_player distance getMarkerPos _city < _size * 1.5) then {\n\t\t\t\t\t[_player,false] remoteExec [\"setCaptive\",0,_player];\n\t\t\t\t\t_player setCaptive false;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n}];\n\n// notes:\n// Static weapon objects are persistent through assembly/disassembly\n// The bags are not persistent, object IDs change each time\n// Static weapon position seems to follow bag1, but it's not an attached object\n// Can use objectParent to identify backpack of static weapon\n\nplayer addEventHandler [\"WeaponAssembled\", {\n\tprivate _veh = _this select 1;\n\t[_veh, teamPlayer] call A3A_fnc_AIVEHinit;\t\t// will flip/capture if already initialized\n\tif (_veh isKindOf \"StaticWeapon\") then {\n\t\tif (not(_veh in staticsToSave)) then {\n\t\t\tstaticsToSave pushBack _veh;\n\t\t\tpublicVariable \"staticsToSave\";\n\t\t};\n\t\t_markersX = markersX select {sidesX getVariable [_x,sideUnknown] == teamPlayer};\n\t\t_pos = position _veh;\n\t\tif (_markersX findIf {_pos inArea _x} != -1) then {[\"Static Deployed\", \"Static weapon has been deployed for use in a nearby zone, and will be used by garrison militia if you leave it here the next time the zone spawns\"] call A3A_fnc_customHint;};\n\t};\n}];\nplayer addEventHandler [\"WeaponDisassembled\", {\n\tprivate _bag1 = _this select 1;\n\tprivate _bag2 = _this select 2;\n\t//_bag1 = objectParent (_this select 1);\n\t//_bag2 = objectParent (_this select 2);\n\t[_bag1] remoteExec [\"A3A_fnc_postmortem\", 2];\n\t[_bag2] remoteExec [\"A3A_fnc_postmortem\", 2];\n}];\n\nplayer addEventHandler [\"GetInMan\", {\n\tprivate [\"_unit\",\"_veh\"];\n\t_unit = _this select 0;\n\t_veh = _this select 2;\n\t_exit = false;\n\tif (isMultiplayer) then {\n\t\tif !([player] call A3A_fnc_isMember) then {\n\t\t\t_owner = _veh getVariable \"ownerX\";\n\t\t\tif (!isNil \"_owner\") then {\n\t\t\t\tif (_owner isEqualType \"\") then {\n\t\t\t\t\tif ({getPlayerUID _x == _owner} count (units group player) == 0) then {\n\t\t\t\t\t\t[\"Warning\", \"You cannot board other player vehicle if you are not in the same group\"] call A3A_fnc_customHint;\n\t\t\t\t\t\tmoveOut _unit;\n\t\t\t\t\t\t_exit = true;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n\tif (!_exit) then {\n\t\tif ((typeOf _veh) in undercoverVehicles) then {\n\t\t\tif (!(_veh in reportedVehs)) then {\n\t\t\t\t[] spawn A3A_fnc_goUndercover;\n\t\t\t};\n\t\t};\n\t};\n}];\n\ncall A3A_fnc_initUndercover;\n\nif (isMultiplayer) then {\n\t[\"InitializePlayer\", [player]] call BIS_fnc_dynamicGroups;//Exec on client\n\tif (membershipEnabled) then {\n\t\tif !([player] call A3A_fnc_isMember) then {\n\t\t\tprivate _isMember = false;\n\t\t\tif (isServer) then {\n\t\t\t\t_isMember = true;\n\t\t\t};\n\t\t\tif (serverCommandAvailable \"#logout\") then {\n\t\t\t\t_isMember = true;\n\t\t\t\t[\"General Info\", \"You are not in the member's list, but as you are Server Admin, you have been added. Welcome!\"] call A3A_fnc_customHint;\n\t\t\t};\n\n\t\t\tif (_isMember) then {\n\t\t\t\tmembersX pushBack (getPlayerUID player);\n\t\t\t\tpublicVariable \"membersX\";\n\t\t\t} else {\n\t\t\t\t_nonMembers = {(side group _x == teamPlayer) and !([_x] call A3A_fnc_isMember)} count (call A3A_fnc_playableUnits);\n\t\t\t\tif (_nonMembers >= (playableSlotsNumber teamPlayer) - bookedSlots) then {[\"memberSlots\",false,1,false,false] call BIS_fnc_endMission};\n\t\t\t\tif (memberDistance != 16000) then {[] execVM \"orgPlayers\\nonMemberDistance.sqf\"};\n\n\t\t\t\t[\"General Info\", \"Welcome Guest<br/><br/>You have joined this server as guest\"] call A3A_fnc_customHint;\n\t\t\t};\n\t\t};\n\t};\n};\n\n// Make player group leader, because if they disconnected with AI squadmates, they may not be\n// In this case, the group will also no longer be local, so we need the remoteExec\nif !(isPlayer leader group player) then {\n\t[group player, player] remoteExec [\"selectLeader\", groupOwner group player];\n};\n\n[] remoteExec [\"A3A_fnc_assignBossIfNone\", 2];\n\nwaitUntil { scriptDone _introshot };\n\nif (_isJip) then {\n\t[2,\"Joining In Progress (JIP)\",_filename] call A3A_fnc_log",
"[_tsk] call BIS_fnc_taskExists) then {\n\t\t\t\t_state = _x select 1;\n\t\t\t\tif ((_tsk call BIS_fnc_taskState) != _state) then {\n\t\t\t\t\t/*\n\t\t\t\t\t_tskVar = _tsk call BIS_fnc_taskVar;\n\t\t\t\t\t_tskVar setTaskState _state;\n\t\t\t\t\t*/\n\t\t\t\t\t[_tsk,_state] call bis_fnc_taskSetState;\n\t\t\t\t};\n\t\t\t};\n\t\t} forEach missionsX;\n\t};\n}\nelse\n{\n\t[2,\"Not Joining in Progress (JIP)\",_filename] call A3A_fnc_log",
"[] spawn A3A_fnc_modBlacklist;\n\n//Move this\n//HC_commanderX synchronizeObjectsAdd [player];\n//player synchronizeObjectsAdd [HC_commanderX];\n\n_textX = [];\n\nif ((hasTFAR) or (hasACRE)) then {\n\t_textX = [\"TFAR or ACRE Detected\\n\\nAntistasi detects TFAR or ACRE in the server config.\\nAll players will start with addon default radios.\\nDefault revive system will shut down radios while players are unconscious.\\n\\n\"];\n};\nif (hasACE) then {\n\t_textX = _textX + [\"ACE 3 Detected\\n\\nAntistasi detects ACE modules in the server config.\\nACE items added to arsenal and ammoboxes. Default AI control is disabled\\nIf ACE Medical is used, default revive system will be disabled.\\nIf ACE Hearing is used, default earplugs will be disabled.\"];\n};\nif (hasRHS) then {\n\t_textX = _textX + [\"RHS Detected\\n\\nAntistasi detects RHS in the server config.\\nDepending on the modules will have the following effects.\\n\\nAFRF: Replaces CSAT by a mix of russian units\\n\\nUSAF: Replaces NATO by a mix of US units\\n\\nGREF: Recruited AI will count with RHS as basic weapons, replaces FIA with Chdk units. Adds some civilian trucks\"];\n};\nif (hasFFAA) then {\n\t_textX = _textX + [\"FFAA Detected\\n\\nAntistasi detects FFAA in the server config.\\nFIA Faction will be replaced by Spanish Armed Forces\"];\n};\n\nif (hasTFAR or hasACE or hasRHS or hasACRE or hasFFAA) then {\n\t[_textX] spawn {\n\t\tsleep 0.5;\n\t\t_textX = _this select 0;\n\t\t\"Integrated Mods Detected\" hintC _textX;\n\t\thintC_arr_EH = findDisplay 72 displayAddEventHandler [\"unload\", {\n\t\t\t0 = _this spawn {\n\t\t\t\t_this select 0 displayRemoveEventHandler [\"unload\", hintC_arr_EH];\n\t\t\t\thintSilent \"\";\n\t\t\t};\n\t\t}];\n\t};\n};\nwaituntil {!isnull (finddisplay 46)};\ngameMenu = (findDisplay 46) displayAddEventHandler [\"KeyDown\",A3A_fnc_keys];\n//removeAllActions boxX;\n\n//if ((!isServer) and (isMultiplayer)) then {boxX call jn_fnc_arsenal_init};\n\n\nif (hasACE) then\n{\n\tif (isNil \"ace_interact_menu_fnc_compileMenu\" || isNil \"ace_interact_menu_fnc_compileMenuSelfAction\") exitWith {\n\t\t[1, \"ACE non-public functions have changed, rebel group join/leave actions will not be removed\", _filename] call A3A_fnc_log",
"[\"I_G_soldier_F\", \"I_G_Soldier_TL_F\", \"I_G_Soldier_AR_F\", \"I_G_medic_F\", \"I_G_engineer_F\", \"I_G_Soldier_GL_F\" /*greenfor*/,\n\t\t\"B_G_soldier_F\", \"B_G_Soldier_TL_F\", \"B_G_Soldier_AR_F\", \"B_G_medic_F\", \"B_G_engineer_F\", \"B_G_Soldier_GL_F\" /*bluefor*/];\n\t{\n\t\t[_x] call ace_interact_menu_fnc_compileMenu;\n\t\t[_x] call ace_interact_menu_fnc_compileMenuSelfAction;\n\t\t[_x, 1,[\"ACE_SelfActions\", \"ACE_TeamManagement\", \"ACE_LeaveGroup\"]] call ace_interact_menu_fnc_removeActionFromClass;\n\t\t[_x, 0,[\"ACE_MainActions\", \"ACE_JoinGroup\"]] call ace_interact_menu_fnc_removeActionFromClass;\n\t} forEach (_playerUnits + [typePetros, staticCrewTeamPlayer, SDKUnarmed] + SDKSniper + SDKATman + SDKMedic + SDKMG + SDKExp + SDKGL + SDKMil + SDKSL + SDKEng);\n};\n\nboxX allowDamage false;\nboxX addAction [\"Transfer Vehicle cargo to Ammobox\", {[] spawn A3A_fnc_empty;}, 4];\nboxX addAction [\"Move this asset\", A3A_fnc_moveHQObject,nil,0,false,true,\"\",\"(_this == theBoss)\", 4];\nflagX allowDamage false;\nflagX addAction [\"Unit Recruitment\", {if ([player,300] call A3A_fnc_enemyNearCheck) then {[\"Recruit Unit\", \"You cannot recruit units while there are enemies near you\"] call A3A_fnc_customHint;} else { [] spawn A3A_fnc_unit_recruit; }},nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\"];\nflagX addAction [\"Move this asset\", A3A_fnc_moveHQObject,nil,0,false,true,\"\",\"(_this == theBoss)\", 4];\n\n//Adds a light to the flag\nprivate _flagLight = \"#lightpoint\" createVehicle (getPos flagX);\n_flagLight setLightDayLight true;\n_flagLight setLightColor [1, 1, 0.9];\n_flagLight setLightBrightness 0.2;\n_flagLight setLightAmbient [1, 1, 0.9];\n_flagLight lightAttachObject [flagX, [0, 0, 4]];\n_flagLight setLightAttenuation [7, 0, 0.5, 0.5];\n\nvehicleBox allowDamage false;\nvehicleBox addAction [\"Heal, Repair and Rearm\", A3A_fnc_healAndRepair,nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\", 4];\nvehicleBox addAction [\"Vehicle Arsenal\", JN_fnc_arsenal_handleAction, [], 0, true, false, \"\", \"alive _target && vehicle _this != _this\", 10];\nif (hasACE) then { [vehicleBox, VehicleBox] call ace_common_fnc_claim;};\t//Disables ALL Ace Interactions\nif (isMultiplayer) then {\n\tvehicleBox addAction [\"Personal Garage\", { [GARAGE_PERSONAL] spawn A3A_fnc_garage },nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\", 4];\n};\nvehicleBox addAction [\"Faction Garage\", { [GARAGE_FACTION] spawn A3A_fnc_garage; },nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\", 4];\nvehicleBox addAction [\"Buy Vehicle\", {if ([player,300] call A3A_fnc_enemyNearCheck) then {[\"Purchase Vehicle\", \"You cannot buy vehicles while there are enemies near you\"] call A3A_fnc_customHint;} else {nul = createDialog \"vehicle_option\"}},nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\", 4];\nvehicleBox addAction [\"Move this asset\", A3A_fnc_moveHQObject,nil,0,false,true,\"\",\"(_this == theBoss)\", 4];\n\nfireX allowDamage false;\n[fireX, \"fireX\"] call A3A_fnc_flagaction;\n\nmapX allowDamage false;\nmapX addAction [\"Game Options\", {[\"Game Options\", format [\"Antistasi - %2<br/><br/>Version: %1<br/><br/>Difficulty: %3<br/>Unlock Weapon Number: %4<br/>Limited Fast Travel: %5\",antistasiVersion,worldName,if (skillMult == 2) then {\"Normal\"} else {if (skillMult == 1) then {\"Easy\"} else {\"Hard\"}},minWeaps,if (limitedFT) then {\"Yes\"} else {\"No\"}]] call A3A_fnc_customHint; nul=CreateDialog \"game_options\";},nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\", 4];\nmapX addAction [\"Map Info\", A3A_fnc_cityinfo,nil,0,false,true,\"\",\"(isPlayer _this) and (_this == _this getVariable ['owner',objNull]) and (side (group _this) == teamPlayer)\", 4];\nmapX addAction [\"Move this asset\", A3A_fnc_moveHQObject,nil,0,false,true,\"\",\"(_this == theBoss)\", 4];\nif (isMultiplayer) then {mapX addAction [\"AI Load Info\", { [] remoteExec [\"A3A_fnc_AILoadInfo\",2];},nil,0,false,true,\"\",\"((_this == theBoss) || (serverCommandAvailable \"\"#logout\"\"))\"]};\n_nul = [player] execVM \"OrgPlayers\\unitTraits.sqf\";\n\n// only add petros actions if he's static\nif (petros == leader group petros) then {\n\tgroup petros setGroupId [\"Petros\",\"GroupColor4\"];\n\t[petros,\"remove\"] call A3A_fnc_flagaction;\t\t// in case we already created them in initserver\n\t[petros,\"mission\"] call A3A_fnc_flagaction;\n};\npetros setIdentity \"friendlyX\";\nif (worldName == \"Tanoa\") then {petros setName \"Maru\"} else {petros setName \"Petros\"};\n\ndisableSerialization;\n//1 cutRsc [\"H8erHUD\",\"PLAIN\",0,false];\n_layer = [\"statisticsX\"] call bis_fnc_rscLayer;\n_layer cutRsc [\"H8erHUD\",\"PLAIN\",0,false];\n[] spawn A3A_fnc_statistics;\n\n//Check if we need to relocate HQ\nif (isNil \"placementDone\") then {\n\tif (isNil \"playerPlacingHQ\" || {!(playerPlacingHQ in (call A3A_fnc_playableUnits))}) then {\n\t\tplayerPlacingHQ = player;\n\t\tpublicVariable \"playerPlacingHQ\";\n\t\tcall A3A_fnc_placementSelection;\n\t};\n};\n\n//Load the player's personal save.\nif (isMultiplayer) then {\n\t[] spawn A3A_fnc_createDialog_shouldLoadPersonalSave;\n}\nelse\n{\n\tif (loadLastSave) then {\n\t\t// just do this directly, because playerHasSave doesn't work without moneyX\n\t\tprivate _loadout = [getPlayerUID player, \"loadoutPlayer\"] call A3A_fnc_retrievePlayerStat;\n\t\tif (!isNil \"_loadout\") then { player setUnitLoadout _loadout };\n\t};\n\tplayer setVariable [\"canSave\", true];\n};\n\n\n//Move the player to HQ now they're initialised.\nplayer setPos (getMarkerPos respawnTeamPlayer);\n\n//Disables rabbits and snakes, because they cause the log to be filled with \"20:06:39 Ref to nonnetwork object Agent 0xf3b4a0c0\"\n//Can re-enable them if we find the source of the bug.\nenableEnvironment [false, true];\n\n[2,\"initClient completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initFuncs.sqf": [
"[2,\"initFuncs started\",_fileName] call A3A_fnc_log",
"[] call compile preprocessFileLineNumbers \"scripts\\Init_UPSMON.sqf\";\n[] call jn_fnc_logistics_init;\nboxX call jn_fnc_arsenal_init;\n\n[2,\"initFuncs completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initGarrisons.sqf": [
"[2,\"InitGarrisons started\",_fileName] call A3A_fnc_log",
"[\"_mrkCSAT\", \"_target\", \"_mrkType\", \"_mrkText\", [\"_useSideName\", false]];\n\n\t{\n\t\tprivate _pos = getMarkerPos _x;\n\t\tprivate _mrk = createMarker [format [\"Dum%1\", _x], _pos];\n\t\t//TODO Multilanguage variable insted text\n\t\t_mrk setMarkerShape \"ICON\";\n\n\t\tif (_useSideName) then\n\t\t{\n\t\t\tkillZones setVariable [_x, [], true];\n\t\t\tserver setVariable [_x, 0, true];\n\n\t\t\tprivate _sideName = if (_x in _mrkCSAT) then {nameInvaders} else {nameOccupants};\n\t\t\t_mrk setMarkerText format [_mrkText, _sideName];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_mrk setMarkerText _mrkText;\n\t\t};\n\n\t\tif (_x in airportsX) then\n\t\t{\n\t\t\tprivate _flagType = if (_x in _mrkCSAT) then {flagCSATmrk} else {flagNATOmrk};\n\t\t\t_mrk setMarkerType _flagType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_mrk setMarkerType _mrkType;\n\t\t};\n\n\t\tif (_x in _mrkCSAT) then\n\t\t{\n\t\t\tif !(_x in airportsX) then {_mrk setMarkerColor colorInvaders;} else {_mrk setMarkerColor \"Default\"};\n\t\t\tsidesX setVariable [_x, Invaders, true];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif !(_x in airportsX) then {_mrk setMarkerColor colorOccupants;} else {_mrk setMarkerColor \"Default\"};\n\t\t\tsidesX setVariable [_x, Occupants, true];\n\t\t};\n\n\t\t[_x] call A3A_fnc_createControls;\n\t} forEach _target;\n};\n\n\n_fnc_initGarrison =\n{\n\tparams [\"_markerArray\", \"_type\"];\n\tprivate [\"_side\", \"_groupsRandom\", \"_garrNum\", \"_garrisonOld\", \"_marker\"];\n\t{\n\t    _marker = _x;\n\t\t\t_garrNum = ([_marker] call A3A_fnc_garrisonSize) / 8;\n\t\t\t_side = sidesX getVariable [_marker, sideUnknown];\n\t\t\tif(_side != Occupants) then\n\t\t\t{\n\t\t\t\t_groupsRandom = [groupsCSATSquad, groupsFIASquad] select ((_marker in outposts) && (gameMode == 4));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(_type != \"Airport\" && {_type != \"Outpost\"}) then\n\t\t\t\t{\n\t\t\t\t\t_groupsRandom = groupsFIASquad;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t \t\t\t\t_groupsRandom = groupsNATOSquad;\n\t\t\t\t};\n\t\t\t};\n\t\t\t//Old system, keeping it intact for the moment\n\t\t\t_garrisonOld = [];\n\t\t\tfor \"_i\" from 1 to _garrNum do\n\t\t\t{\n\t\t\t\t_garrisonOld append (selectRandom _groupsRandom);\n\t\t\t};\n\t\t\t//\n\n\t\t\t//Old system, keeping it runing for now\n\t\t\tgarrison setVariable [_marker, _garrisonOld, true];\n\n\t} forEach _markerArray;\n};\n\nprivate _mrkNATO = [];\nprivate _mrkCSAT = [];\nprivate _controlsNATO = [];\nprivate _controlsCSAT = [];\n\nif (debug) then\n{\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | Setting Control Marks for Worldname: %2  .\", servertime, worldName];\n};\n\nif (gameMode == 1) then\n{\n\t_controlsNATO = controlsX;\n\tswitch (toLower worldName) do {\n\t\tcase \"tanoa\": {\n\t\t\t_mrkCSAT = [\"airport_1\", \"seaport_5\", \"outpost_10\", \"control_20\"];\n\t\t\t_controlsCSAT = [\"control_20\"];\n\t\t};\n\t\tcase \"altis\": {\n\t\t\t_mrkCSAT = [\"airport_2\", \"seaport_4\", \"outpost_5\", \"control_52\", \"control_33\"];\n\t\t\t_controlsCSAT = [\"control_52\", \"control_33\"];\n\t\t};\n\t\tcase \"chernarus_summer\": {\n\t\t\t_mrkCSAT = [\"outpost_21\"];\n\t\t};\n\t\tcase \"tem_anizay\": {\n\t\t\t_mrkCSAT = [\"outpost_8\", \"control_19\", \"control_44\", \"control_45\"];\n\t\t\t_controlsCSAT = [\"control_19\", \"control_44\", \"control_45\"];\n\t\t};\n\t\tcase \"chernarus_winter\": {\n\t\t\t_mrkCSAT = [\"outpost_21\", \"control_30\"];\n\t\t\t_controlsCSAT = [\"control_30\"];\n\t\t};\n\t\tcase \"kunduz\": {\n\t\t\t_mrkCSAT = [\"outpost\"];\n\t\t};\n\t\tcase \"enoch\": {\n\t\t\t_mrkCSAT = [\"airport_3\", \"control_14\"];\n\t\t\t_controlsCSAT = [\"control_14\"];\n\t\t};\n\t\tcase \"tembelan\": {\n\t\t\t_mrkCSAT = [\"airport_4\"];\n\t\t};\n\t\tcase \"malden\": {\n\t\t\t_mrkCSAT = [\"airport\", \"seaport_7\"];\n\t\t};\n\t\tcase \"tem_kujari\": {\n\t\t\t_mrkCSAT = [];\n\t\t};\n\t\tcase \"vt7\": {\n\t\t\t_mrkCSAT = [\"airport_2\", \"control_25\", \"control_29\", \"control_30\", \"control_31\", \"control_32\", \"Seaport_1\", \"Outpost_3\"];\n\t\t\t_controlsCSAT = [\"control_25\", \"control_29\", \"control_30\", \"control_31\", \"control_32\"];\n\t\t};\n\t\tcase \"stratis\": {\n\t\t\t_mrkCSAT = [\"outpost_3\"];\n\t\t};\n\t\tcase \"takistan\": {\n\t\t\t_mrkCSAT = [\"airport_1\", \"outpost_5\", \"outpost_6\", \"outpost_7\", \"outpost_8\", \"resource\", \"resource_5\", \"resource_6\"];\n\t\t\t_controlsCSAT = [\"control\", \"control_1\", \"control_2\", \"control_5\", \"control_13\", \"control_20\", \"control_21\", \"control_22\", \"control_24\", \"control_25\", \"control_31\"];\n\t\t};\n\t};\n    _controlsNATO = _controlsNATO - _controlsCSAT;\n\t_mrkNATO = markersX - _mrkCSAT - [\"Synd_HQ\"];\n\n\tif (debug) then {\n\t\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | _mrkCSAT: %2.\", servertime, _mrkCSAT];\n\t\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | _mrkNATO: %2.\", servertime, _mrkNATO];\n\t};\n}\nelse\n{\n\tif (gameMode == 4) then\n\t{\n\t\t_mrkCSAT = markersX - [\"Synd_HQ\"];\n\t\t_controlsCSAT = controlsX;\n\t}\n\telse\n\t{\n\t\t_mrkNATO = markersX - [\"Synd_HQ\"];\n\t\t_controlsNATO = controlsX;\n\t};\n};\n\n{sidesX setVariable [_x, Occupants, true]} forEach _controlsNATO;\n{sidesX setVariable [_x, Invaders, true]} forEach _controlsCSAT;\n\n[_mrkCSAT, airportsX, flagCSATmrk, \"%1 Airbase\", true] call _fnc_initMarker;\n[_mrkCSAT, resourcesX, \"loc_rock\", \"Resources\"] call _fnc_initMarker;\n[_mrkCSAT, factories, \"u_installation\", \"Factory\"] call _fnc_initMarker;\n[_mrkCSAT, outposts, \"loc_bunker\", \"%1 Outpost\", true] call _fnc_initMarker;\n[_mrkCSAT, seaports, \"b_naval\", \"Sea Port\"] call _fnc_initMarker;\n\nif (!(isNil \"loadLastSave\") && {loadLastSave}) exitWith {};\n\n//Set carrier markers to the same as airbases below.\nif (isServer) then {\"NATO_carrier\" setMarkertype flagNATOmrk};\nif (isServer) then {\"CSAT_carrier\" setMarkertype flagCSATmrk};\n\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | Setting up Airbase stuff.\", servertime];\n};\n\n[airportsX, \"Airport\"] call _fnc_initGarrison;\t\t\t\t\t\t\t\t//Old system\n[airportsX, \"Airport\", [0,0,0]] call A3A_fnc_createGarrison;\t//New system\n\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | Setting up Resource stuff.\", servertime];\n};\n\n[resourcesX, \"Resource\"] call _fnc_initGarrison;\t\t\t\t\t\t\t//Old system\n[resourcesX, \"Other\", [0,0,0]] call A3A_fnc_createGarrison;\t//New system\n\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | Setting up Factory stuff.\", servertime];\n};\n\n[factories, \"Factory\"] call _fnc_initGarrison;\n[factories, \"Other\", [0,0,0]] call A3A_fnc_createGarrison;\n\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | Setting up Outpost stuff.\", servertime];\n};\n\n[outposts, \"Outpost\"] call _fnc_initGarrison;\n[outposts, \"Outpost\", [1,1,0]] call A3A_fnc_createGarrison;\n\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initGarrisons.sqf | Setting up Seaport stuff.\", servertime];\n};\n\n[seaports, \"Seaport\"] call _fnc_initGarrison;\n[seaports, \"Other\", [1,0,0]] call A3A_fnc_createGarrison;\n\n//New system, adding cities\n[citiesX, \"City\", [0,0,0]] call A3A_fnc_createGarrison;\n\n[2,\"InitGarrisons completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initGetMissionPath.sqf": [
"[2,\"Compiling mission path\",_fileName] call A3A_fnc_log",
"[(str missionConfigFile), 0, -15] call BIS_fnc_trimString;\npublicVariable \"missionPath\";\n[2,\"Mission path is valid\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initServer.sqf": [
"[2,\"Dedicated server detected\",_fileName] call A3A_fnc_log",
"[2,\"Server init started\",_fileName] call A3A_fnc_log",
"[\"ss_ServerID\",nil];\nif(isNil \"serverID\") then {\n\tserverID = str(floor(random(90000) + 10000));\n\tprofileNameSpace setVariable [\"ss_ServerID\",serverID];\n};\npublicVariable \"serverID\";\n\nif (isMultiplayer) then {\n\t//Load server parameters\n\tloadLastSave = if (\"loadSave\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\tgameMode = \"gameMode\" call BIS_fnc_getParamValue; publicVariable \"gameMode\";\n\tautoSave = if (\"autoSave\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\tautoSaveInterval = \"autoSaveInterval\" call BIS_fnc_getParamValue;\n\tmembershipEnabled = if (\"membership\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\tswitchCom = if (\"switchComm\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\ttkPunish = if (\"tkPunish\" call BIS_fnc_getParamValue == 1) then {true} else {false};\n\tdistanceMission = \"mRadius\" call BIS_fnc_getParamValue; publicVariable \"distanceMission\";\n\tpvpEnabled = if (\"allowPvP\" call BIS_fnc_getParamValue == 1) then {true} else {false}; publicVariable \"pvpEnabled\";\n\tskillMult = \"AISkill\" call BIS_fnc_getParamValue; publicVariable \"skillMult\";\n\tminWeaps = \"unlockItem\" call BIS_fnc_getParamValue; publicVariable \"minWeaps\";\n\tmemberOnlyMagLimit = \"MemberOnlyMagLimit\" call BIS_fnc_getParamValue; publicVariable \"memberOnlyMagLimit\";\n\tallowMembersFactionGarageAccess = \"allowMembersFactionGarageAccess\" call BIS_fnc_getParamValue == 1; publicVariable \"allowMembersFactionGarageAccess\";\n\tpersonalGarageMax = \"personalGarageMax\" call BIS_fnc_getParamValue; publicVariable \"personalGarageMax\";\n\tcivTraffic = \"civTraffic\" call BIS_fnc_getParamValue; publicVariable \"civTraffic\";\n\tmemberDistance = \"memberDistance\" call BIS_fnc_getParamValue; publicVariable \"memberDistance\";\n\tlimitedFT = if (\"allowFT\" call BIS_fnc_getParamValue == 1) then {true} else {false}; publicVariable \"limitedFT\";\n\tnapalmEnabled = if (\"napalmEnabled\" call BIS_fnc_getParamValue == 1) then {true} else {false}; publicVariable \"napalmEnabled\";\n\tstartWithLongRangeRadio = if (\"startWithLongRangeRadio\" call BIS_fnc_getParamValue == 1) then {true} else {false}; publicVariable \"startWithLongRangeRadio\";\n\tteamSwitchDelay = \"teamSwitchDelay\" call BIS_fnc_getParamValue;\n\tplayerMarkersEnabled = (\"pMarkers\" call BIS_fnc_getParamValue == 1); publicVariable \"playerMarkersEnabled\";\n\tminPlayersRequiredforPVP = \"minPlayersRequiredforPVP\" call BIS_fnc_getParamValue; publicVariable \"minPlayersRequiredforPVP\";\n\thelmetLossChance = \"helmetLossChance\" call BIS_fnc_getParamValue; publicVariable \"helmetLossChance\";\n} else {\n\t[2, \"Setting Singleplayer Params\", _fileName] call A3A_fnc_log",
"[1, \"No loadLastSave setting\", _fileName] call A3A_fnc_log",
"[1, \"No gameMode setting\", _fileName] call A3A_fnc_log",
"[] call A3A_fnc_crateLootParams;\n\n\n// Maintain a profilenamespace array called antistasiSavedGames\n// Each entry is an array: [campaignID, mapname, \"Blufor\"|\"Greenfor\"]\n\ncampaignID = profileNameSpace getVariable [\"ss_CampaignID\",\"\"];\ncall\n{\n\t// If the legacy campaign ID is valid for this map/mode, just use that\n\tif (loadLastSave && !isNil {[\"membersX\"] call A3A_fnc_returnSavedStat}) exitWith {\n\t\t[2, \"Loading last campaign, ID \" + campaignID, _filename] call A3A_fnc_log",
"[profileNamespace getVariable \"antistasiSavedGames\"] param [0, [], [[]]];\n\tprivate _gametype = if (side petros == independent) then {\"Greenfor\"} else {\"Blufor\"};\n\tprivate _existingIDs = [campaignID];\n\t{\n\t\tif (_x isEqualType [] && {count _x >= 2}) then\n\t\t{\n\t\t\tif ((worldName == _x select 1) && (_gametype == _x select 2)) then {\n\t\t\t\tcampaignID = _x select 0;\t\t\t// found a match\n\t\t\t};\n\t\t\t_existingIDs pushBack (_x select 0);\n\t\t};\n\t} forEach _saveList;\n\n\t// If valid save found, exit with that\n\tif (loadLastSave && !isNil {[\"membersX\"] call A3A_fnc_returnSavedStat}) exitWith {\n\t\t[2, \"Loading campaign from saved list, ID \" + campaignID, _filename] call A3A_fnc_log",
"[2, \"Creating new campaign with ID \" + campaignID, _fileName] call A3A_fnc_log",
"[2,format [\"%1 server version: %2\", [\"SP\",\"MP\"] select isMultiplayer, localize \"STR_antistasi_credits_generic_version_text\"],_fileName] call A3A_fnc_log",
"[Invaders,1];\n\tInvaders setFriend [Occupants,1];\n\tif (gameMode == 3) then {\"CSAT_carrier\" setMarkerAlpha 0};\n\tif (gameMode == 4) then {\"NATO_carrier\" setMarkerAlpha 0};\n};\n[\"Initialize\"] call BIS_fnc_dynamicGroups;//Exec on Server\nhcArray = [];\n\nwaitUntil {count (call A3A_fnc_playableUnits) > 0};\nwaitUntil {({(isPlayer _x) and (!isNull _x) and (_x == _x)} count allUnits) == (count (call A3A_fnc_playableUnits))};\n[] spawn A3A_fnc_modBlacklist;\n\ncall A3A_fnc_initGarrisons;\n\nif (loadLastSave) then {\n\t[] call A3A_fnc_loadServer;\n//\twaitUntil {!isNil\"statsLoaded\"};\n\tif (!isNil \"as_fnc_getExternalMemberListUIDs\") then {\n\t\tmembersX = [];\n\t\t{membersX pushBackUnique _x} forEach (call as_fnc_getExternalMemberListUIDs);\n\t\tpublicVariable \"membersX\";\n\t};\n\tif (membershipEnabled and (membersX isEqualTo [])) then {\n\t\t[petros,\"hint\",\"Membership is enabled but members list is empty. Current players will be added to the member list\", \"Membership\"] remoteExec [\"A3A_fnc_commsMP\"];\n\t\t[2,\"Previous data loaded\",_fileName] call A3A_fnc_log",
"[2,\"Membership enabled, adding current players to list\",_fileName] call A3A_fnc_log",
"[];\n\t\t{\n\t\t\tmembersX pushBack (getPlayerUID _x);\n\t\t} forEach (call A3A_fnc_playableUnits);\n\t\tpublicVariable \"membersX\";\n\t};\n\ttheBoss = objNull;\n\t{\n\t\tif (([_x] call A3A_fnc_isMember) and (side _x == teamPlayer)) exitWith {\n\t\t\ttheBoss = _x;\n\t\t};\n\t} forEach playableUnits;\n\tpublicVariable \"theBoss\";\n}\nelse {\n\ttheBoss = objNull;\n\tmembersX = [];\n\tif (!isNil \"as_fnc_getExternalMemberListUIDs\") then {\n\t\t{membersX pushBackUnique _x} forEach (call as_fnc_getExternalMemberListUIDs);\n\t\t\t{\n\t\t\t\tif (([_x] call A3A_fnc_isMember) and (side _x == teamPlayer)) exitWith {theBoss = _x};\n\t\t\t} forEach playableUnits;\n\t}\n\telse {\n\t\t[2,\"New session selected\",_fileName] call A3A_fnc_log",
"[theBoss,\"CORPORAL\"] remoteExec [\"A3A_fnc_ranksMP\"];\n\t\twaitUntil {(getPlayerUID theBoss) != \"\"};\n\t\tif (membershipEnabled) then {membersX pushBackUnique (getPlayerUID theBoss)};\n\t};\n\tpublicVariable \"theBoss\";\n\tpublicVariable \"membersX\";\n};\n\n[2,\"Accepting players\",_fileName] call A3A_fnc_log",
"[2,\"Initial arsenal unlocks completed\",_fileName] call A3A_fnc_log",
"[petros,\"hint\",\"Server load finished\", \"Server Information\"] remoteExec [\"A3A_fnc_commsMP\", 0];\n\n//HandleDisconnect doesn't get 'owner' param, so we can't use it to handle headless client disconnects.\naddMissionEventHandler [\"HandleDisconnect\",{_this call A3A_fnc_onPlayerDisconnect;false}];\n//PlayerDisconnected doesn't get access to the unit, so we shouldn't use it to handle saving.\naddMissionEventHandler [\"PlayerDisconnected\",{_this call A3A_fnc_onHeadlessClientDisconnect;false}];\n\naddMissionEventHandler [\"BuildingChanged\", {\n\tparams [\"_oldBuilding\", \"_newBuilding\", \"_isRuin\"];\n\n\tif (_isRuin) then {\n\t\t_oldBuilding setVariable [\"ruins\", _newBuilding];\n\t\t_newBuilding setVariable [\"building\", _oldBuilding];\n\n\t\t// Antenna dead/alive status is handled separately\n\t\tif !(_oldBuilding in antennas || _oldBuilding in antennasDead) then {\n\t\t\tdestroyedBuildings pushBack _oldBuilding;\n\t\t};\n\t};\n}];\n\nserverInitDone = true; publicVariable \"serverInitDone\";\n[2,\"Setting serverInitDone as true\",_fileName] call A3A_fnc_log",
"[2, \"Waiting for HQ placement\", _fileName] call A3A_fnc_log",
"[2, \"HQ Placed, continuing init\", _fileName] call A3A_fnc_log",
"[] spawn A3A_fnc_distance;\n[] spawn A3A_fnc_resourcecheck;\n[] spawn A3A_fnc_aggressionUpdateLoop;\n[] execVM \"Scripts\\fn_advancedTowingInit.sqf\";\nsavingServer = false;\n\n// Autosave loop. Save if there were any players on the server since the last save.\n[] spawn {\n\tprivate _lastPlayerCount = count (call A3A_fnc_playableUnits);\n\twhile {true} do\n\t{\n\t\tuiSleep autoSaveInterval;\n\t\tprivate _playerCount = count (call A3A_fnc_playableUnits);\n\t\tif (autoSave && (_playerCount > 0 || _lastPlayerCount > 0)) then {\n\t\t\t[] remoteExecCall [\"A3A_fnc_saveLoop\", 2];\n\t\t};\n\t\t_lastPlayerCount = _playerCount;\n\t};\n};\n\n[] spawn A3A_fnc_spawnDebuggingLoop;\n\n//Enable performance logging\n[] spawn {\n\tprivate _logPeriod = [30, 10] select (logLevel == 3);\n\twhile {true} do\n\t{\n\t\t//Sleep if no player is online\n\t\tif (isMultiplayer && (count (allPlayers - (entities \"HeadlessClient_F\")) == 0)) then\n\t\t{\n\t\t\twaitUntil {sleep 10; (count (allPlayers - (entities \"HeadlessClient_F\")) > 0)};\n\t\t};\n\n\t\t[] call A3A_fnc_log",
"[2,\"initServer completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initVar.sqf": [
"[2,\"initVar started\",_fileName] call A3A_fnc_log",
"[\"Server Information\", \"Variables Init Completed\"] call A3A_fnc_customHint;\n[2,\"initVar completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initVarClient.sqf": [
"[2,\"initVarClient started\",_fileName] call A3A_fnc_log",
"[2,\"initVarClient completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initVarCommon.sqf": [
"[2,\"initVarCommon started\",_fileName] call A3A_fnc_log",
"[2,\"Setting initial variables\",_fileName] call A3A_fnc_log",
"[2,\"Generating sides\",_fileName] call A3A_fnc_log",
"[2,\"Declaring item categories\",_fileName] call A3A_fnc_log",
"[\"Rifles\", \"Handguns\", \"MachineGuns\", \"MissileLaunchers\", \"Mortars\", \"RocketLaunchers\", \"Shotguns\", \"SMGs\", \"SniperRifles\"];\nitemCategories = [\"Gadgets\", \"Bipods\", \"MuzzleAttachments\", \"PointerAttachments\", \"Optics\", \"Binoculars\", \"Compasses\", \"FirstAidKits\", \"GPS\", \"LaserDesignators\",\n\t\"Maps\", \"Medikits\", \"MineDetectors\", \"NVGs\", \"Radios\", \"Toolkits\", \"UAVTerminals\", \"Watches\", \"Glasses\", \"Headgear\", \"Vests\", \"Uniforms\", \"Backpacks\"];\n\nmagazineCategories = [\"MagArtillery\", \"MagBullet\", \"MagFlare\", \"Grenades\", \"MagLaser\", \"MagMissile\", \"MagRocket\", \"MagShell\", \"MagShotgun\", \"MagSmokeShell\"];\nexplosiveCategories = [\"Mine\", \"MineBounding\", \"MineDirectional\"];\notherCategories = [\"Unknown\"];\n\n//************************************************************************************************************\n//ALL ITEMS THAT ARE MEMBERS OF CATEGORIES BELOW THIS LINE **MUST** BE A MEMBER OF ONE OF THE ABOVE CATEGORIES.\n//************************************************************************************************************\n\n//Categories that consist only of members of other categories, e.g, 'Weapons' contains items of every category from in weaponCategories;\naggregateCategories = [\"Weapons\", \"Items\", \"Magazines\", \"Explosives\"];\n\n//All items in here *must* also be a member of one of the above categories.\n//These are here because it's non-trivial to identify items in them. They might be a very specific subset of items, or the logic that identifies them might not be perfect.\n//It's recommended that these categories be used with caution.\nspecialCategories = [\"AA\", \"AT\", \"GrenadeLaunchers\", \"LightAttachments\", \"LaserAttachments\", \"Chemlights\", \"SmokeGrenades\", \"LaunchedSmokeGrenades\", \"LaunchedFlares\", \"HandFlares\", \"IRGrenades\",\"LaserBatteries\",\n\t\"RebelUniforms\", \"CivilianUniforms\", \"BackpacksEmpty\", \"BackpacksTool\", \"BackpacksStatic\", \"BackpacksDevice\", \"CivilianVests\", \"ArmoredVests\", \"ArmoredHeadgear\", \"CivilianHeadgear\",\n\t\"CivilianGlasses\"];\n\n\nallCategoriesExceptSpecial = weaponCategories + itemCategories + magazineCategories + explosiveCategories + otherCategories + aggregateCategories;\nallCategories = allCategoriesExceptSpecial + specialCategories;\n\n////////////////////////////////////\n//     BEGIN MOD DETECTION       ///\n////////////////////////////////////\n[2,\"Starting mod detection\",_fileName] call A3A_fnc_log",
"[\"kart\", \"mark\", \"heli\", \"expansion\", \"jets\", \"orange\", \"tank\", \"globmob\", \"enoch\", \"officialmod\", \"tacops\", \"argo\", \"warlords\"];\n\n//Mod detection is done locally to each client, in case some clients have different modsets for some reason.\nhasRHS = false;\nactiveAFRF = false;\nactiveUSAF = false;\nactiveGREF = false;\nhasFFAA = false;\nhasIFA = false;\nhas3CB = false;\n//Systems Mods\nhasACE = false;\nhasACEHearing = false;\nhasACEMedical = false;\n//Radio Mods\nhasACRE = false;\nhasTFAR = false;\n\n//Radio Detection\nhasTFAR = isClass (configFile >> \"CfgPatches\" >> \"task_force_radio\");\nhasACRE = isClass (configFile >> \"cfgPatches\" >> \"acre_main\");\n//ACE Detection\nhasACE = (!isNil \"ace_common_fnc_isModLoaded\");\nhasACEHearing = isClass (configFile >> \"CfgSounds\" >> \"ACE_EarRinging_Weak\");\nhasACEMedical = isClass (configFile >> \"CfgSounds\" >> \"ACE_heartbeat_fast_3\");\n//IFA Detection\n//Deactivated for now, as IFA is having some IP problems (08.05.2020 european format)\nif isClass (configFile >> \"CfgPatches\" >> \"LIB_Core\") then\n{\n    //hasIFA = true;\n    //[2, \"IFA Detected\", _fileName] call A3A_fnc_log",
"[1, \"IFA detected, but it is no longer supported, please remove this mod\", _fileName] call A3A_fnc_log",
"[\"modUnautorized\",false,1,false,false] call BIS_fnc_endMission;\n};\n//RHS AFRF Detection\nif isClass (configFile >> \"CfgFactionClasses\" >> \"rhs_faction_vdv\") then {activeAFRF = true; hasRHS = true; diag_log format [\"%1: [Antistasi] | INFO | initVar | RHS AFRF Detected.\",servertime];};\nif isClass (configFile >> \"CfgFactionClasses\" >> \"rhs_faction_usarmy\") then {activeUSAF = true; hasRHS = true; diag_log format [\"%1: [Antistasi] | INFO | initVar | RHS USAF Detected.\",servertime];};\nif (activeAFRF && activeUSAF && isClass (configFile >> \"CfgFactionClasses\" >> \"rhsgref_faction_tla\")) then {activeGREF = true; diag_log format [\"%1: [Antistasi] | INFO | initVar | RHS GREF Detected.\",servertime];};\n//3CB Detection\nif (activeAFRF && activeUSAF && activeGREF && isClass (configfile >> \"CfgPatches\" >> \"UK3CB_BAF_Weapons\")) then {has3CB = true; diag_log format [\"%1: [Antistasi] | INFO | initVar | 3CB Detected.\",servertime];};\n//FFAA Detection\nif (isClass (configfile >> \"CfgPatches\" >> \"ffaa_armas\")) then {hasFFAA = true; diag_log format [\"%1: [Antistasi] | INFO | initVar | FFAA Detected.\",servertime];};\n\n////////////////////////////////////\n//        BUILDINGS LISTS        ///\n////////////////////////////////////\n[2,\"Creating building arrays\",_fileName] call A3A_fnc_log",
"[\"Land_Cargo_Tower_V1_F\",\"Land_Cargo_Tower_V1_No1_F\",\"Land_Cargo_Tower_V1_No2_F\",\"Land_Cargo_Tower_V1_No3_F\",\"Land_Cargo_Tower_V1_No4_F\",\"Land_Cargo_Tower_V1_No5_F\",\"Land_Cargo_Tower_V1_No6_F\",\"Land_Cargo_Tower_V1_No7_F\",\"Land_Cargo_Tower_V2_F\", \"Land_Cargo_Tower_V3_F\", \"Land_Cargo_Tower_V4_F\"];\nlistMilBld = listbld + [\"Land_Radar_01_HQ_F\",\"Land_Cargo_HQ_V1_F\",\"Land_Cargo_HQ_V2_F\",\"Land_Cargo_HQ_V3_F\",\"Land_Cargo_HQ_V4_F\",\"Land_Cargo_Patrol_V1_F\",\"Land_Cargo_Patrol_V2_F\",\"Land_Cargo_Patrol_V3_F\", \"Land_Cargo_Patrol_V4_F\",\"Land_HelipadSquare_F\",\"Land_Posed\",\"Land_Hlaska\",\"Land_fortified_nest_small_EP1\",\"Land_fortified_nest_small\",\"Fort_Nest\",\"Fortress1\",\"Land_GuardShed\",\"Land_BagBunker_Small_F\",\"Land_BagBunker_01_small_green_F\"];\nUPSMON_Bld_remove = [\"Bridge_PathLod_base_F\",\"Land_Slum_House03_F\",\"Land_Bridge_01_PathLod_F\",\"Land_Bridge_Asphalt_PathLod_F\",\"Land_Bridge_Concrete_PathLod_F\",\"Land_Bridge_HighWay_PathLod_F\",\"Land_Bridge_01_F\",\"Land_Bridge_Asphalt_F\",\"Land_Bridge_Concrete_F\",\"Land_Bridge_HighWay_F\",\"Land_Canal_Wall_Stairs_F\",\"warehouse_02_f\",\"cliff_wall_tall_f\",\"cliff_wall_round_f\",\"containerline_02_f\",\"containerline_01_f\",\"warehouse_01_f\",\"quayconcrete_01_20m_f\",\"airstripplatform_01_f\",\"airport_02_terminal_f\",\"cliff_wall_long_f\",\"shop_town_05_f\",\"Land_ContainerLine_01_F\"];\n//Lights and Lamps array used for 'Blackout'\nlamptypes = [\"Lamps_Base_F\", \"PowerLines_base_F\",\"Land_LampDecor_F\",\"Land_LampHalogen_F\",\"Land_LampHarbour_F\",\"Land_LampShabby_F\",\"Land_NavigLight\",\"Land_runway_edgelight\",\"Land_PowerPoleWooden_L_F\"];\n\n////////////////////////////////////\n//     SOUNDS AND ANIMATIONS     ///\n////////////////////////////////////\n[2,\"Compiling sounds and animations\",_fileName] call A3A_fnc_log",
"[\"Music\\dog_bark01.wss\", \"Music\\dog_bark02.wss\", \"Music\\dog_bark04.wss\", \"Music\\dog_bark05.wss\", \"Music\\dog_maul01.wss\", \"Music\\dog_yelp02.wss\"];\ninjuredSounds =\n[\n\t\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_13_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_14_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_15_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_16_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_17_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_18_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_19_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person0\\P0_moan_20_words.wss\",\n\t\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_19_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_20_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_21_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_22_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_23_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_24_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_25_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_26_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_27_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_28_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_29_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_30_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_31_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_32_words.wss\",\"a3\\sounds_f\\characters\\human-sfx\\Person1\\P1_moan_33_words.wss\",\n\t\"a3\\sounds_f\\characters\\human-sfx\\Person2\\P2_moan_19_words.wss\"\n];\nmedicAnims = [\"AinvPknlMstpSnonWnonDnon_medic_1\",\"AinvPknlMstpSnonWnonDnon_medic0\",\"AinvPknlMstpSnonWnonDnon_medic1\",\"AinvPknlMstpSnonWnonDnon_medic2\"];\n\n////////////////////////////////////\n//     ID LIST FOR UNIT NAMES    ///\n////////////////////////////////////\n[2,\"Creating unit identities\",_fileName] call A3A_fnc_log",
"[\"Anthis\",\"Costa\",\"Dimitirou\",\"Elias\",\"Gekas\",\"Kouris\",\"Leventis\",\"Markos\",\"Nikas\",\"Nicolo\",\"Panas\",\"Rosi\",\"Samaras\",\"Thanos\",\"Vega\"];\n\tif (isMultiplayer) then {arrayids = arrayids + [\"protagonista\"]};\n};\n\n////////////////////////////////////\n//     MISSION PATH WARNING      ///\n////////////////////////////////////\n[2,\"Checking mission path\",_fileName] call A3A_fnc_log",
"[] spawn A3A_fnc_initGetMissionPath;\nwaitUntil\n{\n\tif (scriptDone _getMissionPath) exitWith {true};\n\tif (hasInterface) then {\n\t\t[\"ERROR\", \"Stuck on compiling missionPath, re-launch the mission.\"] call A3A_fnc_customHint;\n\t};\n\t[1,\"Stuck on compiling missionPath, re-launch the mission.\",_fileName] call A3A_fnc_log",
"[\"Server Information\", \"Done compiling missionPath\"] call A3A_fnc_customHint;\n};\n[2,\"Done compiling missionPath\",_fileName] call A3A_fnc_log",
"[2,\"Setting map configuration\",_fileName] call A3A_fnc_log",
"[\"road\",\"road_1\",\"road_2\",\"road_3\",\"road_4\"];\n\t\troadsCE = [\"road_5\",\"road_6\"];\n\t\troadsCSE = [\"road_7\"];\n\t\troadsSE = [\"road_8\",\"road_9\",\"road_10\",\"road_11\"];\n\t\troadsSW = [\"road_12\"];\n\t\troadsCW = [\"road_13\",\"road_14\"];\n\t\troadsNW = [\"road_15\"];\n\t\troadsNE = [\"road_16\"];\n\t\troadsX setVariable [\"airport\",[[[6988.38,7135.59,10.0673],17.0361,\"MG\"],[[6873.83,7472,3.19066],262.634,\"MG\"],[[6902.09,7427.71,13.0559],359.999,\"MG\"],[[6886.75,7445.52,0.0368803],360,\"Mort\"],[[6888.47,7440.31,0.0368826],0.000531628,\"Mort\"],[[6882.14,7445.42,0.0368817],360,\"Mort\"],[[6886.49,7436.58,0.0368807],360,\"Mort\"],[[6970.32,7188.49,-0.0339937],359.999,\"Tank\"],[[6960.98,7188.49,-0.0339937],359.999,\"Tank\"],[[6950.71,7187.42,-0.033505],359.999,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_1\",[[[2175.14,13402.4,-0.01863],138.861,\"Tank\"],[[2183.31,13409.7,-0.0184679],139.687,\"Tank\"],[[2211.39,13434.4,0.0164337],141.512,\"Tank\"],[[2221.62,13440.6,0.016408],142.886,\"Tank\"],[[2221.31,13195,0.0368757],0.000337857,\"Mort\"],[[2224.09,13197.6,0.038271],1.30051e-005,\"Mort\"],[[2218.96,13199.1,0.0382385],0.00923795,\"Mort\"],[[2071.1,13308.5,14.4943],133.738,\"MG\"]]];\n\t\troadsX setVariable [\"airport_2\",[[[11803,13051.6,0.0368805],360,\"Mort\"],[[11813.5,13049.2,0.0368915],0.000145629,\"Mort\"],[[11799.5,13043.2,0.0368919],360,\"Mort\"],[[11723,13115,18.2],300.703,\"MG\"],[[11782.3,13058.1,0.0307827],19.6564,\"Tank\"],[[11810.6,13040.2,0.0368905],360,\"Tank\"],[[11832.9,13042.1,0.0283785],16.3683,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_3\",[[[11658,3055.02,0.036881],360,\"Mort\"],[[11662.6,3060.14,0.0368819],0.000294881,\"Mort\"],[[11664.8,3049.94,0.0368805],360,\"Mort\"],[[11668.9,3055.64,0.0368805],2.08056e-005,\"Mort\"],[[11748,2983,18.2],249.505,\"MG\"],[[11784.1,3132.77,0.183631],214.7,\"Tank\"],[[11720.3,3176.15,0.112019],215.055,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_4\",[[[2092.87,3412.98,0.0372648],0.00414928,\"Mort\"],[[2091.5,3420.69,0.0369596],360,\"Mort\"],[[2099.93,3422.53,0.0373936],0.00215797,\"Mort\"],[[2100.13,3416.28,0.0394554],0.0043371,\"Mort\"],[[2199.5,3472,18.14],0.00187816,\"MG\"],[[2133.01,3405.88,-0.0156536],315.528,\"Tank\"],[[2145.82,3416.83,-0.00544548],316.441,\"Tank\"],[[2163.9,3432.18,-0.0256157],318.777,\"Tank\"]]];\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBTanoa.sqf\";\n\t};\n\tcase \"altis\":\n\t{\n\t\troadsX setVariable [\"airport\",[[[21175.06,7369.336,0],62.362,\"Tank\"],[[21178.89,7361.573,0.421],62.36,\"Tank\"],[[20961.332,7295.678,0],0,\"Mort\"],[[20956.143,7295.142,0],0,\"Mort\"],[[20961.1,7290.02,0.262632],0,\"Mort\"]]];\n\t\troadsX setVariable [\"airport_1\",[[[23044.8,18745.7,0.0810001],88.275,\"Tank\"],[[23046.8,18756.8,0.0807302],88.275,\"Tank\"],[[23214.8,18859.5,0],267.943,\"Tank\"],[[22981.2,18903.9,0],0,\"Mort\"],[[22980.1,18907.5,0.553066],0,\"Mort\"]]];\n\t\troadsX setVariable [\"airport_2\",[[[26803.1,24727.7,0.0629988],359.958,\"Mort\"],[[26809,24728.2,0.03755],359.986,\"Mort\"],[[26815.2,24729,0.0384922],359.972,\"Mort\"],[[26821.3,24729.1,0.0407047],359.965,\"Mort\"],[[26769.1,24638.7,0.290344],131.324,\"Tank\"],[[26774.2,24643.9,0.282555],134.931,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_3\",[[[14414.9,16327.8,-0.000991821],207.397,\"Tank\"],[[14471.9,16383.2,0.0378571],359.939,\"Mort\"],[[14443,16379.2,0.0369205],359.997,\"Mort\"],[[14449.4,16376.9,0.0369892],359.996,\"Mort\"],[[14458,16375.9,0.0369167],359.997,\"Mort\"],[[14447.2,16397.1,3.71081],269.525,\"MG\"],[[14472.3,16312,12.1993],317.315,\"MG\"],[[14411,16229,0.000303268],40.6607,\"Tank\"],[[14404.4,16235,-0.0169964],50.5741,\"Tank\"],[[14407.2,16331.7,0.0305004],204.588,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_4\",[[[11577.4,11953.6,0.241838],122.274,\"Tank\"],[[11577.8,11964.3,0.258125],124.324,\"Tank\"],[[11633.3,11762,0.0372791],359.996,\"Mort\"],[[11637.3,11768.1,0.043232],0.0110098,\"Mort\"],[[11637.1,11763.1,0.0394402],0.00529677,\"Mort\"]],true];\n\t\troadsX setVariable [\"airport_5\",[[[9064.02,21531.3,0.00117016],138.075,\"Tank\"],[[9095.12,21552.8,0.614614],157.935,\"Tank\"],[[9030.28,21531.1,0.261349],157.935,\"Mort\"],[[9033.91,21534.7,0.295588],157.935,\"Mort\"]]];\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBAltis.sqf\";\n\t};\n\tcase \"chernarus_summer\":\n\t{\n\t\troadsX setVariable [\"airport\",[[[12190.479,12604.712,9.432],0,\"MG\"],[[12194.2,12599.4,13.3954],0,\"AA\"],[[12141,12609,0.00088501],0,\"Mort\"],[[12144.3,12615.9,0],0,\"Mort\"],[[12156.5,12614.3,0],0,\"Mort\"],[[12170,12595.9,0.000305176],250.234,\"AT\"],[[12070.4,12656,0.0098114],23.5329,\"Tank\"],[[12022.5,12670.9,0.0098114],18.9519,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_1\",[[[4782.75,10251.4,18],0,\"AA\"],[[4716.17,10215.3,13.1149],278.308,\"AA\"],[[4714.530,10210.043,9.122],238.755,\"MG\"],[[4787.34,10248.9,4.99982],188.303,\"MG\"],[[4741.488,10333.261,20.4],238.946,\"MG\"],[[4818.39,10200.1,0.00982666],239.625,\"Tank\"],[[4765.22,10330.8,0],0,\"Mort\"],[[4758.21,10328.1,0],0,\"Mort\"],[[4751.45,10324.4,0],0,\"Mort\"],[[4745.39,10320.6,0],0,\"Mort\"],[[4739.97,10283.2,0.00567627],291.41,\"AT\"],[[4814.19,10245.1,0.00567627],211.414,\"AT\"],[[4841.34,10158.9,0.0102844],240.137,\"Tank\"],[[4865.7,10116.7,0.00970459],239.499,\"Tank\"],[[4888.33,10074.2,0.00982666],235.077,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_2\",[[[4717.95,2595.24,12.9766],0,\"AA\"],[[4714.134,2591.637,8.97349],227.835,\"MG\"],[[4743.55,2567.69,0.0130215],207.155,\"Tank\"],[[4775.62,2547.37,0.00691605],210.579,\"Tank\"],[[4719.88,2582.34,0.00566483],261.79,\"AT\"],[[4826.5,2558.35,0.00150108],0,\"Mort\"],[[4821.12,2550.32,0.00147152],0,\"Mort\"],[[4816.59,2543.65,0.00147247],0,\"Mort\"],[[4812.77,2518.77,0.00566483],150.397,\"AT\"]]];\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBcherna.sqf\";\n\t};\n\tcase \"chernarus_winter\":\n\t{\n\t\troadsX setVariable [\"airport\",[[[12190.479,12604.712,9.432],0,\"MG\"],[[12194.2,12599.4,13.3954],0,\"AA\"],[[12141,12609,0.00088501],0,\"Mort\"],[[12144.3,12615.9,0],0,\"Mort\"],[[12156.5,12614.3,0],0,\"Mort\"],[[12170,12595.9,0.000305176],250.234,\"AT\"],[[12070.4,12656,0.0098114],23.5329,\"Tank\"],[[12022.5,12670.9,0.0098114],18.9519,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_1\",[[[4782.75,10251.4,18],0,\"AA\"],[[4716.17,10215.3,13.1149],278.308,\"AA\"],[[4714.530,10210.043,9.122],238.755,\"MG\"],[[4787.34,10248.9,4.99982],188.303,\"MG\"],[[4740.75,10333.2,20.3206],232.414,\"MG\"],[[4818.39,10200.1,0.00982666],239.625,\"Tank\"],[[4765.22,10330.8,0],0,\"Mort\"],[[4758.21,10328.1,0],0,\"Mort\"],[[4751.45,10324.4,0],0,\"Mort\"],[[4745.39,10320.6,0],0,\"Mort\"],[[4739.97,10283.2,0.00567627],291.41,\"AT\"],[[4814.19,10245.1,0.00567627],211.414,\"AT\"],[[4841.34,10158.9,0.0102844],240.137,\"Tank\"],[[4865.7,10116.7,0.00970459],239.499,\"Tank\"],[[4888.33,10074.2,0.00982666],235.077,\"Tank\"]]];\n\t\troadsX setVariable [\"airport_2\",[[[4717.95,2595.24,12.9766],0,\"AA\"],[[4714.134,2591.637,8.97349],227.835,\"MG\"],[[4743.55,2567.69,0.0130215],207.155,\"Tank\"],[[4775.62,2547.37,0.00691605],210.579,\"Tank\"],[[4719.88,2582.34,0.00566483],261.79,\"AT\"],[[4826.5,2558.35,0.00150108],0,\"Mort\"],[[4821.12,2550.32,0.00147152],0,\"Mort\"],[[4816.59,2543.65,0.00147247],0,\"Mort\"],[[4812.77,2518.77,0.00566483],150.397,\"AT\"]]];\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBcherna.sqf\";\n\t};\n\tcase \"malden\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBmalden.sqf\";\n\t};\n\tcase \"enoch\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBLivonia.sqf\";\n\t};\n\tcase \"kunduz\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBKunduz.sqf\";\n\t};\n\tcase \"tembelan\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBTembelan.sqf\";\n\t};\n\tcase \"tem_anizay\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBanizay.sqf\";\n\t};\n\tcase \"tem_kujari\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBkujari.sqf\";\n\t};\n\tcase \"vt7\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBvirolahti.sqf\";\n\t};\n\tcase \"stratis\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBstratis.sqf\";\n\t};\n\tcase \"takistan\":\n\t{\n\t\t//Roads DB\n\t\tcall compile preprocessFileLineNumbers \"Navigation\\roadsDBtakistan.sqf\";\n\t};\n};\n\n[2,\"initVarCommon completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initVarServer.sqf": [
"[2,\"initVarServer started\",_fileName] call A3A_fnc_log",
"[\"serverInitialisedVariables\"];\n\nprivate _declareServerVariable = {\n\tparams [\"_varName\", \"_varValue\"];\n\n\tserverInitialisedVariables pushBackUnique _varName;\n\n\tif (!isNil \"_varValue\") then {\n\t\tmissionNamespace setVariable [_varName, _varValue];\n\t};\n};\n\n//Declares a variable that will be synchronised to all clients at the end of initVarServer.\n//Only needs using on the first declaration.\n#define ONLY_DECLARE_SERVER_VAR(name) [#name] call _declareServerVariable\n#define DECLARE_SERVER_VAR(name, value) [#name, value] call _declareServerVariable\n#define ONLY_DECLARE_SERVER_VAR_FROM_VARIABLE(name) [name] call _declareServerVariable\n#define DECLARE_SERVER_VAR_FROM_VARIABLE(name, value) [name, value] call _declareServerVariable\n\n////////////////////////////////////////\n//     GENERAL SERVER VARIABLES      ///\n////////////////////////////////////////\n[2,\"initialising general server variables\",_fileName] call A3A_fnc_log",
"[]);\nDECLARE_SERVER_VAR(smallCApos, []);\n\nDECLARE_SERVER_VAR(attackPos, []);\nDECLARE_SERVER_VAR(attackMrk, []);\nDECLARE_SERVER_VAR(airstrike, []);\n\n//Vehicles currently in the garage\nDECLARE_SERVER_VAR(vehInGarage, []);\n\n//Should vegetation around HQ be cleared\nDECLARE_SERVER_VAR(chopForest, false);\n\nDECLARE_SERVER_VAR(skillFIA, 1);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Initial skill level for FIA soldiers\n//Initial Occupant Aggression\nDECLARE_SERVER_VAR(aggressionOccupants, 0);\nDECLARE_SERVER_VAR(aggressionStackOccupants, []);\nDECLARE_SERVER_VAR(aggressionLevelOccupants, 1);\n//Initial Invader Aggression\nDECLARE_SERVER_VAR(aggressionInvaders, 0);\nDECLARE_SERVER_VAR(aggressionStackInvaders, []);\nDECLARE_SERVER_VAR(aggressionLevelInvaders, 1);\n//Initial war tier.\nDECLARE_SERVER_VAR(tierWar, 1);\nDECLARE_SERVER_VAR(bombRuns, 0);\n//Should various units, such as patrols and convoys, be revealed.\nDECLARE_SERVER_VAR(revealX, false);\nDECLARE_SERVER_VAR(napalmCurrent, false);\n//Whether the players have Nightvision unlocked\nDECLARE_SERVER_VAR(haveNV, false);\nDECLARE_SERVER_VAR(missionsX, []);\n//List of statics (MGs, AA, etc) that will be saved and loaded.\nDECLARE_SERVER_VAR(staticsToSave, []);\n//Whether the players have access to radios.\nDECLARE_SERVER_VAR(haveRadio, hasTFAR || hasACRE);\n//List of vehicles that are reported (I.e - Players can't go undercover in them)\nDECLARE_SERVER_VAR(reportedVehs, []);\n//Currently destroyed buildings.\n//DECLARE_SERVER_VAR(destroyedBuildings, []);\n//Initial HR\nserver setVariable [\"hr\",8,true];\n//Initial faction money pool\nserver setVariable [\"resourcesFIA\",1000,true];\n\n////////////////////////////////////\n//     SERVER ONLY VARIABLES     ///\n////////////////////////////////////\n//We shouldn't need to sync these.\n[2,\"Setting server only variables\",_fileName] call A3A_fnc_log",
"[75, 50] select cadetMode;\t\t\t\t\t\t\t\t\t\t\t\t//Initial % support for NATO on each city\nprestigeBLUFOR = 0;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Initial % FIA support on each city\n// Indicates time in seconds before next counter attack.\nattackCountdownOccupants = 600;\nattackCountdownInvaders = 600;\n\ncityIsSupportChanging = false;\nresourcesIsChanging = false;\nsavingServer = false;\n\nprestigeIsChanging = false;\n\nzoneCheckInProgress = false;\ngarrisonIsChanging = false;\nmovingMarker = false;\nmarkersChanging = [];\n\nplayerHasBeenPvP = [];\n\nsavedPlayers = [];\ndestroyedBuildings = [];\t\t// synced only on join, to avoid spam on change\n\ntestingTimerIsActive = false;\n\n///////////////////////////////////////////\n//     INITIALISING ITEM CATEGORIES     ///\n///////////////////////////////////////////\n[2,\"Initialising item categories\",__FILE__] call A3A_fnc_log",
"[\"AA\", \"AT\", \"GrenadeLaunchers\", \"ArmoredVests\", \"ArmoredHeadgear\", \"BackpacksCargo\"];\n\n//Build list of 'allX' variables, such as 'allWeapons'\nDECLARE_SERVER_VAR(allEquipmentArrayNames, allCategories apply {\"all\" + _x});\n\n//Build list of 'unlockedX' variables, such as 'allWeapons'\nDECLARE_SERVER_VAR(unlockedEquipmentArrayNames, _unlockableCategories apply {\"unlocked\" + _x});\n\n//Various arrays used by the loot system. Could also be done using DECLARE_SERVER_VAR individually.\nprivate _otherEquipmentArrayNames = [\n\t\"initialRebelEquipment\",\n\t\"lootBasicItem\",\n\t\"lootNVG\",\n\t\"lootItem\",\n\t\"lootWeapon\",\n\t\"lootAttachment\",\n\t\"lootMagazine\",\n\t\"lootGrenade\",\n\t\"lootExplosive\",\n\t\"lootBackpack\",\n\t\"lootHelmet\",\n\t\"lootVest\",\n\t\"lootDevice\",\n\t\"invaderStaticWeapon\",\n\t\"occupantStaticWeapon\",\n\t\"rebelStaticWeapon\",\n\t\"invaderBackpackDevice\",\n\t\"occupantBackpackDevice\",\n\t\"rebelBackpackDevice\",\n\t\"civilianBackpackDevice\",\n\t\"diveGear\",\n\t\"flyGear\"\n];\n\nDECLARE_SERVER_VAR(otherEquipmentArrayNames, _otherEquipmentArrayNames);\n\n//We're going to use this to sync the variables later.\neveryEquipmentRelatedArrayName = allEquipmentArrayNames + unlockedEquipmentArrayNames + otherEquipmentArrayNames;\n\n//Initialise them all as empty arrays.\n{\n\tDECLARE_SERVER_VAR_FROM_VARIABLE(_x, []);\n} forEach everyEquipmentRelatedArrayName;\n\n////////////////////////////////////\n//          MOD CONFIG           ///\n////////////////////////////////////\n[2,\"Setting mod configs\",_fileName] call A3A_fnc_log",
"[] spawn {\n\t\t\twaitUntil {sleep 1; !isNil \"TF_server_addon_version\"};\n\t\t\t[2,\"Initializing TFAR settings\",\"initVar.sqf\"] call A3A_fnc_log",
"[\"TF_no_auto_long_range_radio\", true, true,\"mission\"] call CBA_settings_fnc_set;\t\t\t\t\t\t//set to false and players will spawn with LR radio.\n\t\t\tif (hasIFA) then\n\t\t\t\t{\n\t\t\t\t[\"TF_give_personal_radio_to_regular_soldier\", false, true,\"mission\"] call CBA_settings_fnc_set;\n\t\t\t\t[\"TF_give_microdagr_to_soldier\", false, true,\"mission\"] call CBA_settings_fnc_set;\n\t\t\t\t};\n\t\t\t//tf_teamPlayer_radio_code = \"\";publicVariable \"tf_teamPlayer_radio_code\";\t\t\t\t\t\t\t\t//to make enemy vehicles usable as LR radio\n\t\t\t//tf_east_radio_code = tf_teamPlayer_radio_code; publicVariable \"tf_east_radio_code\";\t\t\t\t\t//to make enemy vehicles usable as LR radio\n\t\t\t//tf_guer_radio_code = tf_teamPlayer_radio_code; publicVariable \"tf_guer_radio_code\";\t\t\t\t\t//to make enemy vehicles usable as LR radio\n\t\t\t[\"TF_same_sw_frequencies_for_side\", true, true,\"mission\"] call CBA_settings_fnc_set;\t\t\t\t\t\t//synchronize SR default frequencies\n\t\t\t[\"TF_same_lr_frequencies_for_side\", true, true,\"mission\"] call CBA_settings_fnc_set;\t\t\t\t\t\t//synchronize LR default frequencies\n\t\t};\n\t};\n};\n\n////////////////////////////////////\n//      CIVILIAN UNITS LIST      ///\n////////////////////////////////////\n[2,\"Creating civilians\",_fileName] call A3A_fnc_log",
"[\"C_man_polo_1_F\",\"C_man_polo_1_F_afro\",\"C_man_polo_1_F_asia\",\"C_man_polo_1_F_euro\",\"C_man_sport_1_F_tanoan\"];\nDECLARE_SERVER_VAR(arrayCivs, _arrayCivs);\n\n\n//////////////////////////////////////\n//         TEMPLATE SELECTION      ///\n//////////////////////////////////////\n[2,\"Reading templates\",_fileName] call A3A_fnc_log",
"[\n\t//Rebels\n\t\"nameTeamPlayer\",\n\t\"SDKFlag\",\n\t\"SDKFlagTexture\",\n\t\"typePetros\",\n\t\"staticCrewTeamPlayer\",\n\t\"SDKUnarmed\",\n\t\"SDKSniper\",\n\t\"SDKATman\",\n\t\"SDKMedic\",\n\t\"SDKMG\",\n\t\"SDKExp\",\n\t\"SDKGL\",\n\t\"SDKMil\",\n\t\"SDKSL\",\n\t\"SDKEng\",\n\t\"groupsSDKmid\",\n\t\"groupsSDKAT\",\n\t\"groupsSDKSquad\",\n\t\"groupsSDKSquadEng\",\n\t\"groupsSDKSquadSupp\",\n\t\"groupsSDKSniper\",\n\t\"groupsSDKSentry\",\n\t\"sdkTier1\",\n\t\"sdkTier2\",\n\t\"sdkTier3\",\n\t\"soldiersSDK\",\n\t\"vehSDKBike\",\n\t\"vehSDKLightArmed\",\n\t\"vehSDKAT\",\n\t\"vehSDKLightUnarmed\",\n\t\"vehSDKTruck\",\n\t\"vehSDKPlane\",\n\t\"vehSDKBoat\",\n\t\"vehSDKRepair\",\n\t\"civCar\",\n\t\"civTruck\",\n\t\"civHeli\",\n\t\"civBoat\",\n\t\"SDKMGStatic\",\n\t\"staticATTeamPlayer\",\n\t\"staticAATeamPlayer\",\n\t\"SDKMortar\",\n\t\"SDKMortarHEMag\",\n\t\"SDKMortarSmokeMag\",\n\t\"MGStaticSDKB\",\n\t\"ATStaticSDKB\",\n\t\"AAStaticSDKB\",\n\t\"MortStaticSDKB\",\n\t\"supportStaticSDKB\",\n\t\"supportStaticsSDKB2\",\n\t\"supportStaticsSDKB3\",\n\t\"ATMineMag\",\n\t\"APERSMineMag\",\n\n\t//@Spoffy, is the correct like this?\n\t\"breachingExplosivesAPC\",\n\t\"breachingExplosivesTank\",\n\n\t//Occupants\n\t\"nameOccupants\",\n\t\"factionGEN\",\n\t\"factionMaleOccupants\",\n\t\"factionFIA\",\n\t\"NATOFlag\",\n\t\"NATOFlagTexture\",\n\t\"flagNATOmrk\",\n\t\"NATOAmmobox\",\n\t\"NATOPlayerLoadouts\",\n\t\"vehNATOPVP\",\n\t\"NATOGrunt\",\n\t\"NATOOfficer\",\n\t\"NATOOfficer2\",\n\t\"NATOBodyG\",\n\t\"NATOCrew\",\n\t\"NATOUnarmed\",\n\t\"NATOMarksman\",\n\t\"staticCrewOccupants\",\n\t\"NATOPilot\",\n\t\"FIARifleman\",\n\t\"FIAMarksman\",\n\t\"policeOfficer\",\n\t\"policeGrunt\",\n\t\"groupsNATOSentry\",\n\t\"groupsNATOSniper\",\n\t\"groupsNATOsmall\",\n\t\"groupsNATOAA\",\n\t\"groupsNATOAT\",\n\t\"groupsNATOmid\",\n\t\"NATOSquad\",\n\t\"NATOSpecOp\",\n\t\"groupsNATOSquad\",\n\t\"groupsFIASmall\",\n\t\"groupsFIAMid\",\n\t\"FIASquad\",\n\t\"groupsFIASquad\",\n\t\"groupsNATOGen\",\n\t\"vehNATOBike\",\n\t\"vehNATOLightArmed\",\n\t\"vehNATOLightUnarmed\",\n\t\"vehNATOTrucks\",\n\t\"vehNATOCargoTrucks\",\n\t\"vehNATOAmmoTruck\",\n\t\"vehNATORepairTruck\",\n\t\"vehNATOLight\",\n\t\"vehNATOAPC\",\n\t\"vehNATOTank\",\n\t\"vehNATOAA\",\n\t\"vehNATOAttack\",\n\t\"vehNATOBoat\",\n\t\"vehNATORBoat\",\n\t\"vehNATOBoats\",\n\t\"vehNATOPlane\",\n\t\"vehNATOPlaneAA\",\n\t\"vehNATOTransportPlanes\",\n\t\"vehNATOPatrolHeli\",\n\t\"vehNATOTransportHelis\",\n\t\"vehNATOAttackHelis\",\n\t\"vehNATOUAV\",\n\t\"vehNATOUAVSmall\",\n\t\"vehNATOMRLS\",\n\t\"vehNATOMRLSMags\",\n\t\"vehNATONormal\",\n\t\"vehNATOAir\",\n\t\"vehFIAArmedCar\",\n\t\"vehFIATruck\",\n\t\"vehFIACar\",\n\t\"vehPoliceCar\",\n\t\"NATOMG\",\n\t\"staticATOccupants\",\n\t\"staticAAOccupants\",\n\t\"NATOMortar\",\n\n\t//Invaders\n\t\"nameInvaders\",\n\t\"factionMaleInvaders\",\n\t\"factionFIA\",\n\t\"CSATFlag\",\n\t\"CSATFlagTexture\",\n\t\"flagCSATmrk\",\n\t\"CSATAmmoBox\",\n\t\"CSATPlayerLoadouts\",\n\t\"vehCSATPVP\",\n\t\"CSATGrunt\",\n\t\"CSATOfficer\",\n\t\"CSATBodyG\",\n\t\"CSATCrew\",\n\t\"CSATMarksman\",\n\t\"staticCrewInvaders\",\n\t\"CSATPilot\",\n\t\"FIARifleman\",\n\t\"FIAMarksman\",\n\t\"groupsCSATSentry\",\n\t\"groupsCSATSniper\",\n\t\"groupsCSATsmall\",\n\t\"groupsCSATAA\",\n\t\"groupsCSATAT\",\n\t\"groupsCSATmid\",\n\t\"CSATSquad\",\n\t\"CSATSpecOp\",\n\t\"groupsCSATSquad\",\n\t\"groupsFIASmall\",\n\t\"groupsFIAMid\",\n\t\"FIASquad\",\n\t\"groupsFIASquad\",\n\t\"vehCSATBike\",\n\t\"vehCSATLightArmed\",\n\t\"vehCSATLightUnarmed\",\n\t\"vehCSATTrucks\",\n\t\"vehCSATAmmoTruck\",\n\t\"vehCSATRepairTruck\",\n\t\"vehCSATLight\",\n\t\"vehCSATAPC\",\n\t\"vehCSATTank\",\n\t\"vehCSATAA\",\n\t\"vehCSATAttack\",\n\t\"vehCSATBoat\",\n\t\"vehCSATRBoat\",\n\t\"vehCSATBoats\",\n\t\"vehCSATPlane\",\n\t\"vehCSATPlaneAA\",\n\t\"vehCSATTransportPlanes\",\n\t\"vehCSATPatrolHeli\",\n\t\"vehCSATTransportHelis\",\n\t\"vehCSATAttackHelis\",\n\t\"vehCSATUAV\",\n\t\"vehCSATUAVSmall\",\n\t\"vehCSATMRLS\",\n\t\"vehCSATMRLSMags\",\n\t\"vehCSATNormal\",\n\t\"vehCSATAir\",\n\t\"vehFIAArmedCar\",\n\t\"vehFIATruck\",\n\t\"vehFIACar\",\n\t\"CSATMG\",\n\t\"staticATInvaders\",\n\t\"staticAAInvaders\",\n\t\"CSATMortar\"\n];\n\n{\n\tONLY_DECLARE_SERVER_VAR_FROM_VARIABLE(_x);\n} forEach _templateVariables;\n\ncall compile preProcessFileLineNumbers \"Templates\\selector.sqf\";\n\n////////////////////////////////////\n//     TEMPLATE SANITY CHECK      //\n////////////////////////////////////\n[2,\"Sanity-checking templates\",_fileName] call A3A_fnc_log",
"[\"nameTeamPlayer\", \"SDKFlagTexture\", \"nameOccupants\", \"NATOPlayerLoadouts\", \"NATOFlagTexture\", \"flagNATOmrk\", \"nameInvaders\", \"CSATPlayerLoadouts\", \"CSATFlagTexture\", \"flagCSATmrk\"];\nprivate _factionVars = [\"factionGEN\", \"factionMaleOccupants\", \"factionFIA\", \"factionMaleInvaders\"];\nprivate _magazineVars = [\"SDKMortarHEMag\", \"SDKMortarSmokeMag\", \"ATMineMag\", \"APERSMineMag\", \"vehNATOMRLSMags\", \"vehCSATMRLSMags\", \"breachingExplosivesAPC\", \"breachingExplosivesTank\"];\n\nprivate _missingVars = [];\nprivate _badCaseVars = [];\n{\n\tcall {\n\t\tprivate _varName = _x;\n\t\tprivate _var = missionNamespace getVariable _varName;\n\t\tif (isNil \"_var\") exitWith { [1, \"Missing template var \" + _varName, _filename] call A3A_fnc_log",
"[]) then {_var = [_var]};\t\t\t\t\t\t\t\t\t// plain string case, eg factions, some units\n\t\tif (_varname find \"breachingExplosives\" != -1) then { _var = _var apply {_x#0} };\t\t// [\"class\", n] case for breaching explosives\n\t\tif (_var#0 isEqualType []) then {\t\t\t\t\t\t\t\t\t\t\t\t// arrays of arrays case, used for infantry groups\n\t\t\tprivate _classes = [];\n\t\t\t{ _classes append _x } forEach _var;\n\t\t\t_var = _classes;\n\t\t};\n\n\t\tprivate _section = if (_x in _factionVars) then {\"CfgFactionClasses\"}\n\t\t\telse { if (_x in _magazineVars) then {\"CfgMagazines\"} else {\"CfgVehicles\"} };\n\t\t{\n\t\t\tif !(_x isEqualType \"\") exitWith { [1, \"Bad template var \" + _varName, _filename] call A3A_fnc_log",
"[1, format [\"Missing classnames: %1\", _missingVars], _filename] call A3A_fnc_log",
"[1, format [\"Miscased classnames: %1\", _badCaseVars], _filename] call A3A_fnc_log",
"[2,\"Creating civilian vehicles lists\",_fileName] call A3A_fnc_log",
"[\"_type\"];\n\tprivate _configClass = configFile >> \"CfgVehicles\" >> _type;\n\tif !(isClass _configClass) exitWith {\n\t\t[1, format [\"Vehicle class %1 not found\", _type], _filename] call A3A_fnc_Log;\n\t\tfalse;\n\t};\n\tif (_configClass call A3A_fnc_getModOfConfigClass in disabledMods) then {false} else {true};\n};\n\nprivate _fnc_filterAndWeightArray = {\n\n\tparams [\"_array\", \"_targWeight\"];\n\tprivate _output = [];\n\tprivate _curWeight = 0;\n\n\t// first pass, filter and find total weight\n\tfor \"_i\" from 0 to (count _array - 2) step 2 do {\n\t\tif ((_array select _i) call _fnc_vehicleIsValid) then {\n\t\t\t_output pushBack (_array select _i);\n\t\t\t_output pushBack (_array select (_i+1));\n\t\t\t_curWeight = _curWeight + (_array select (_i+1));\n\t\t};\n\t};\n\tif (_curWeight == 0) exitWith {_output};\n\n\t// second pass, re-weight\n\tprivate _weightMod = _targWeight / _curWeight;\n\tfor \"_i\" from 0 to (count _output - 2) step 2 do {\n\t\t_output set [_i+1, _weightMod * (_output select (_i+1))];\n\t};\n\t_output;\n};\n\nprivate _civVehicles = [];\nprivate _civVehiclesWeighted = [];\n\n_civVehiclesWeighted append ([civVehCommonData, 4] call _fnc_filterAndWeightArray);\n_civVehiclesWeighted append ([civVehIndustrialData, 1] call _fnc_filterAndWeightArray);\n_civVehiclesWeighted append ([civVehMedicalData, 0.1] call _fnc_filterAndWeightArray);\n_civVehiclesWeighted append ([civVehRepairData, 0.1] call _fnc_filterAndWeightArray);\n_civVehiclesWeighted append ([civVehRefuelData, 0.1] call _fnc_filterAndWeightArray);\n\nfor \"_i\" from 0 to (count _civVehiclesWeighted - 2) step 2 do {\n\t_civVehicles pushBack (_civVehiclesWeighted select _i);\n};\n\n_civVehicles append [civCar, civTruck];\t\t\t// Civ car/truck from rebel template, in case they're different\n_civVehicles pushBackUnique \"C_Van_01_box_F\";\t\t// Box van from bank mission. TODO: Define in rebel template\n\nDECLARE_SERVER_VAR(arrayCivVeh, _civVehicles);\nDECLARE_SERVER_VAR(civVehiclesWeighted, _civVehiclesWeighted);\n\n\nprivate _civBoats = [];\nprivate _civBoatsWeighted = [];\n\n// Boats don't need any re-weighting, so just copy the data\n\nfor \"_i\" from 0 to (count civBoatData - 2) step 2 do {\n\tprivate _boat = civBoatData select _i;\n\tif (_boat call _fnc_vehicleIsValid) then {\n\t\t_civBoats pushBack _boat;\n\t\t_civBoatsWeighted pushBack _boat;\n\t\t_civBoatsWeighted pushBack (civBoatData select (_i+1));\n\t};\n};\n\nDECLARE_SERVER_VAR(civBoats, _civBoats);\nDECLARE_SERVER_VAR(civBoatsWeighted, _civBoatsWeighted);\n\nprivate _undercoverVehicles = (arrayCivVeh - [\"C_Quadbike_01_F\"]) + civBoats + [civHeli];\nDECLARE_SERVER_VAR(undercoverVehicles, _undercoverVehicles);\n\n//////////////////////////////////////\n//      GROUPS CLASSIFICATION      ///\n//////////////////////////////////////\n[2,\"Identifying unit types\",_fileName] call A3A_fnc_log",
"[(NATOSquad select 0),(NATOSpecOp select 0),(CSATSquad select 0),(CSATSpecOp select 0),(FIASquad select 0)]);\nDECLARE_SERVER_VAR(squadLeaders, _squadLeaders);\n//Identify Medic Units\nprivate _medics = SDKMedic + [(FIAsquad select ((count FIAsquad)-1)),(NATOSquad select ((count NATOSquad)-1)),(NATOSpecOp select ((count NATOSpecOp)-1)),(CSATSquad select ((count CSATSquad)-1)),(CSATSpecOp select ((count CSATSpecOp)-1))];\nDECLARE_SERVER_VAR(medics, _medics);\n//Define Sniper Groups and Units\nprivate _sniperGroups = [groupsNATOSniper,groupsCSATSniper];\nDECLARE_SERVER_VAR(sniperGroups, _sniperGroups);\n\n//////////////////////////////////////\n//        ITEM INITIALISATION      ///\n//////////////////////////////////////\n//This is all very tightly coupled.\n//Beware when changing these, or doing anything with them, really.\n\n[2,\"Initializing hardcoded categories\",_fileName] call A3A_fnc_log",
"[] call A3A_fnc_categoryOverrides;\n[2,\"Scanning config entries for items\",_fileName] call A3A_fnc_log",
"[A3A_fnc_equipmentIsValidForCurrentModset] call A3A_fnc_configSort;\n[2,\"Categorizing vehicle classes\",_fileName] call A3A_fnc_log",
"[] call A3A_fnc_vehicleSort;\n[2,\"Categorizing equipment classes\",_fileName] call A3A_fnc_log",
"[] call A3A_fnc_equipmentSort;\n[2,\"Sorting grouped class categories\",_fileName] call A3A_fnc_log",
"[] call A3A_fnc_itemSort;\n[2,\"Building loot lists\",_fileName] call A3A_fnc_log",
"[] call A3A_fnc_loot;\n\n////////////////////////////////////\n//   CLASSING TEMPLATE VEHICLES  ///\n////////////////////////////////////\n[2,\"Identifying vehicle types\",_fileName] call A3A_fnc_log",
"[vehFIATruck,vehSDKTruck,vehSDKLightArmed,vehSDKBike,vehSDKRepair]);\nDECLARE_SERVER_VAR(vehNormal, _vehNormal);\n\nprivate _vehBoats = [vehNATOBoat,vehCSATBoat,vehSDKBoat];\nDECLARE_SERVER_VAR(vehBoats, _vehBoats);\n\nprivate _vehAttack = vehNATOAttack + vehCSATAttack;\nDECLARE_SERVER_VAR(vehAttack, _vehAttack);\n\nprivate _vehPlanes = (vehNATOAir + vehCSATAir + [vehSDKPlane]);\nDECLARE_SERVER_VAR(vehPlanes, _vehPlanes);\n\nprivate _vehAttackHelis = vehCSATAttackHelis + vehNATOAttackHelis;\nDECLARE_SERVER_VAR(vehAttackHelis, _vehAttackHelis);\n\nprivate _vehFixedWing = [vehNATOPlane,vehNATOPlaneAA,vehCSATPlane,vehCSATPlaneAA,vehSDKPlane] + vehNATOTransportPlanes + vehCSATTransportPlanes;\nDECLARE_SERVER_VAR(vehFixedWing, _vehFixedWing);\n\nprivate _vehUAVs = [vehNATOUAV,vehCSATUAV];\nDECLARE_SERVER_VAR(vehUAVs, _vehUAVs);\n\nprivate _vehAmmoTrucks = [vehNATOAmmoTruck,vehCSATAmmoTruck];\nDECLARE_SERVER_VAR(vehAmmoTrucks, _vehAmmoTrucks);\n\nprivate _vehAPCs = vehNATOAPC + vehCSATAPC;\nDECLARE_SERVER_VAR(vehAPCs, _vehAPCs);\n\nprivate _vehTanks = [vehNATOTank,vehCSATTank];\nDECLARE_SERVER_VAR(vehTanks, _vehTanks);\n\nprivate _vehTrucks = vehNATOTrucks + vehCSATTrucks + [vehSDKTruck,vehFIATruck];\nDECLARE_SERVER_VAR(vehTrucks, _vehTrucks);\n\nprivate _vehAA = [vehNATOAA,vehCSATAA];\nDECLARE_SERVER_VAR(vehAA, _vehAA);\n\nprivate _vehMRLS = [vehCSATMRLS, vehNATOMRLS];\nDECLARE_SERVER_VAR(vehMRLS, _vehMRLS);\n\nprivate _vehTransportAir = vehNATOTransportHelis + vehCSATTransportHelis + vehNATOTransportPlanes + vehCSATTransportPlanes;\nDECLARE_SERVER_VAR(vehTransportAir, _vehTransportAir);\n\nprivate _vehFastRope = [\"O_Heli_Light_02_unarmed_F\",\"B_Heli_Transport_01_camo_F\",\"RHS_UH60M_d\",\"UK3CB_BAF_Merlin_HC3_18_GPMG_DDPM_RM\",\"UK3CB_BAF_Merlin_HC3_18_GPMG_Tropical_RM\",\"RHS_Mi8mt_vdv\",\"RHS_Mi8mt_vv\",\"RHS_Mi8mt_Cargo_vv\"];\nDECLARE_SERVER_VAR(vehFastRope, _vehFastRope);\n\nprivate _vehUnlimited = vehNATONormal + vehCSATNormal + [vehNATORBoat,vehNATOPatrolHeli,vehCSATRBoat,vehCSATPatrolHeli,vehNATOUAV,vehNATOUAVSmall,NATOMG,NATOMortar,vehCSATUAV,vehCSATUAVSmall,CSATMG,CSATMortar];\nDECLARE_SERVER_VAR(vehUnlimited, _vehUnlimited);\n\nprivate _vehFIA = [vehSDKBike,vehSDKLightArmed,SDKMGStatic,vehSDKLightUnarmed,vehSDKTruck,vehSDKBoat,SDKMortar,staticATteamPlayer,staticAAteamPlayer,vehSDKRepair];\nDECLARE_SERVER_VAR(vehFIA, _vehFIA);\n\n///////////////////////////\n//     MOD TEMPLATES    ///\n///////////////////////////\n//Please respect the order in which these are called,\n//and add new entries to the bottom of the list.\nif (hasACE) then {\n\t[] call A3A_fnc_aceModCompat;\n};\nif (hasRHS) then {\n\t[] call A3A_fnc_rhsModCompat;\n};\nif (hasIFA) then {\n\t[] call A3A_fnc_ifaModCompat;\n};\n\n////////////////////////////////////\n//     ACRE ITEM MODIFICATIONS   ///\n////////////////////////////////////\nif (hasACRE) then {initialRebelEquipment append [\"ACRE_PRC343\",\"ACRE_PRC148\",\"ACRE_PRC152\",\"ACRE_PRC77\",\"ACRE_PRC117F\"];};\n\n////////////////////////////////////\n//    UNIT AND VEHICLE PRICES    ///\n////////////////////////////////////\n[2,\"Creating pricelist\",_fileName] call A3A_fnc_log",
"[_x,50,true]} forEach SDKMil;\n{server setVariable [_x,75,true]} forEach (sdkTier1 - SDKMil);\n{server setVariable [_x,100,true]} forEach  sdkTier2;\n{server setVariable [_x,150,true]} forEach sdkTier3;\n//{timer setVariable [_x,0,true]} forEach (vehAttack + vehNATOAttackHelis + [vehNATOPlane,vehNATOPlaneAA,vehCSATPlane,vehCSATPlaneAA] + vehCSATAttackHelis + vehAA + vehMRLS);\n{timer setVariable [_x,3,true]} forEach [staticATOccupants,staticAAOccupants];\n{timer setVariable [_x,6,true]} forEach [staticATInvaders,staticAAInvaders];\n{timer setVariable [_x,0,true]} forEach vehNATOAPC;\n{timer setVariable [_x,10,true]} forEach vehCSATAPC;\ntimer setVariable [vehNATOTank,0,true];\ntimer setVariable [vehCSATTank,10,true];\ntimer setVariable [vehNATOAA,0,true];\ntimer setVariable [vehCSATAA,3,true];\ntimer setVariable [vehNATOBoat,3,true];\ntimer setVariable [vehCSATBoat,3,true];\ntimer setVariable [vehNATOPlane,0,true];\ntimer setVariable [vehCSATPlane,10,true];\ntimer setVariable [vehNATOPlaneAA,0,true];\ntimer setVariable [vehCSATPlaneAA,10,true];\n{timer setVariable [_x,1,true]} forEach vehNATOTransportPlanes;\n{timer setVariable [_x,1,true]} forEach vehNATOTransportHelis - [vehNATOPatrolHeli];\n{timer setVariable [_x,1,true]} forEach vehCSATTransportPlanes;\n{timer setVariable [_x,10,true]} forEach vehCSATTransportHelis - [vehCSATPatrolHeli];\n{timer setVariable [_x,0,true]} forEach vehNATOAttackHelis;\n{timer setVariable [_x,10,true]} forEach vehCSATAttackHelis;\ntimer setVariable [vehNATOMRLS,0,true];\ntimer setVariable [vehCSATMRLS,5,true];\n\nserver setVariable [civCar,200,true];\t\t\t\t\t\t\t\t\t\t\t\t\t//200\nserver setVariable [civTruck,600,true];\t\t\t\t\t\t\t\t\t\t\t\t\t//600\nserver setVariable [civHeli,5000,true];\t\t\t\t\t\t\t\t\t\t\t\t\t//5000\nserver setVariable [civBoat,200,true];\t\t\t\t\t\t\t\t\t\t\t\t\t//200\nserver setVariable [vehSDKBike ,50,true];\t\t\t\t\t\t\t\t\t\t\t\t//50\nserver setVariable [vehSDKLightUnarmed,200,true];\t\t\t\t\t\t\t\t\t\t//200\nserver setVariable [vehSDKTruck,300,true];\t\t\t\t\t\t\t\t\t\t\t//300\n{server setVariable [_x,700,true]} forEach [vehSDKLightArmed,vehSDKAT];\n{server setVariable [_x,400,true]} forEach [SDKMGStatic,vehSDKBoat,vehSDKRepair];\t\t\t//400\n{server setVariable [_x,800,true]} forEach [SDKMortar,staticATteamPlayer,staticAAteamPlayer];\t\t\t//800\n\n///////////////////////\n//     GARRISONS    ///\n///////////////////////\n[2,\"Initialising Garrison Variables\",_fileName] call A3A_fnc_log",
"[4, 8];\ncityStaticsTiers = [0.2, 1];\nairportUpdateTiers = [3, 6, 8];\nairportStaticsTiers = [0.5, 0.75, 1];\noutpostUpdateTiers = [4, 7, 9];\noutpostStaticsTiers = [0.4, 0.7, 1];\notherUpdateTiers = [3, 7];\notherStaticsTiers = [0.3, 1];\n[] call A3A_fnc_initPreference;\n\n////////////////////////////\n//     REINFORCEMENTS    ///\n////////////////////////////\n[2,\"Initialising Reinforcement Variables\",_fileName] call A3A_fnc_log",
"[]);\nDECLARE_SERVER_VAR(reinforceMarkerInvader, []);\nDECLARE_SERVER_VAR(canReinforceOccupants, []);\nDECLARE_SERVER_VAR(canReinforceInvader, []);\n\n/////////////////////////////////////////\n//     SYNCHRONISE SERVER VARIABLES   ///\n/////////////////////////////////////////\n[2,\"Sending server variables\",_fileName] call A3A_fnc_log",
"[2,\"initVarServer completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_initZones.sqf": [
"[2,\"initZones started\",_fileName] call A3A_fnc_log",
"[];\ncitiesX = [];\n\n[] call A3A_fnc_prepareMarkerArrays;\n\nprivate [\"_name\", \"_sizeX\", \"_sizeY\", \"_size\", \"_pos\", \"_mrk\"];\n\n\nif ((toLower worldName) in [\"altis\", \"chernarus_summer\"]) then {\n\n\t\"((getText (_x >> \"\"type\"\")) == \"\"Hill\"\") &&\n\t!((getText (_x >> \"\"name\"\")) isEqualTo \"\"\"\") &&\n\t!(configName _x isEqualTo \"\"Magos\"\")\"\n\tconfigClasses (configfile >> \"CfgWorlds\" >> worldName >> \"Names\") apply {\n\n\t\t_name = configName _x;\n\t\t_sizeX = getNumber (_x >> \"radiusA\");\n\t\t_sizeY = getNumber (_x >> \"radiusB\");\n\t\t_size = [_sizeX, _sizeY] select (_sizeX <= _sizeY);\n\t\t_pos = getArray (_x >> \"position\");\n\t\t_size = [_size, 50] select (_size < 10);\n\t\t_mrk = createmarker [format [\"%1\", _name], _pos];\n\t\t_mrk setMarkerSize [_size, _size];\n\t\t_mrk setMarkerShape \"ELLIPSE\";\n\t\t_mrk setMarkerBrush \"SOLID\";\n\t\t_mrk setMarkerColor \"ColorRed\";\n\t\t_mrk setMarkerText _name;\n\t\tcontrolsX pushBack _name;\n\t};\n};  //this only for Altis and Cherno\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Setting Spawn Points for %2.\", servertime, worldname];\n};\n//We're doing it this way, because Dedicated servers world name changes case, depending on how the file is named.\n//And weirdly, == is not case sensitive.\n//this comments has not an information about the code\n\n(seaMarkers + seaSpawn + seaAttackSpawn + spawnPoints + detectionAreas + islands) apply {_x setMarkerAlpha 0};\ndefaultControlIndex = (count controlsX) - 1;\noutpostsFIA = [];\ndestroyedSites = [];\ngarrison setVariable [\"Synd_HQ\", [], true];\nmarkersX = airportsX + resourcesX + factories + outposts + seaports + controlsX + [\"Synd_HQ\"];\nif (debug) then {\n\tdiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Building roads for %2.\",servertime,worldname];\n};\nmarkersX apply {\n\t_x setMarkerAlpha 0;\n\tspawner setVariable [_x, 2, true];\n};\t//apply faster then forEach and look better\n\n\n// setup hardcoded population counts for towns\nprivate _hardcodedPop = true;\nswitch (toLower worldName) do {\n\tcase \"tanoa\": {\n\t\t{server setVariable [_x select 0,_x select 1]} forEach\n\t\t[[\"Lami01\",277],[\"Lifou01\",350],[\"Lobaka01\",64],[\"LaFoa01\",38],[\"Savaka01\",33],[\"Regina01\",303],[\"Katkoula01\",413],[\"Moddergat01\",195],[\"Losi01\",83],\n\t\t[\"Tanouka01\",380],[\"Tobakoro01\",45],[\"Georgetown01\",347],[\"Kotomo01\",160],[\"Rautake01\",113],[\"Harcourt01\",325],[\"Buawa01\",44],[\"SaintJulien01\",353],\n\t\t[\"Balavu01\",189],[\"Namuvaka01\",45],[\"Vagalala01\",174],[\"Imone01\",31],[\"Leqa01\",45],[\"Blerick01\",71],[\"Yanukka01\",189],[\"OuaOue01\",200],[\"Cerebu01\",22],\n\t\t[\"Laikoro01\",29],[\"Saioko01\",46],[\"Belfort01\",240],[\"Oumere01\",333],[\"Muaceba01\",18],[\"Nicolet01\",224],[\"Lailai01\",23],[\"Doodstil01\",101],[\"Tavu01\",178],\n\t\t[\"Lijnhaven01\",610],[\"Nani01\",19],[\"PetitNicolet01\",135],[\"PortBoise01\",28],[\"SaintPaul01\",136],[\"Nasua01\",60],[\"Savu01\",184],[\"Murarua01\",258],[\"Momea01\",159],\n\t\t[\"LaRochelle01\",532],[\"Koumac01\",51],[\"Taga01\",31],[\"Buabua01\",27],[\"Penelo01\",189],[\"Vatukoula01\",15],[\"Nandai01\",130],[\"Tuvanaka01\",303],[\"Rereki01\",43],\n\t\t[\"Ovau01\",226],[\"IndPort01\",420],[\"Ba01\",106]];\n\t};\n\tcase \"altis\": {\n\t\t{server setVariable [_x select 0,_x select 1]} forEach\n\t\t[[\"Therisa\",154],[\"Zaros\",371],[\"Poliakko\",136],[\"Katalaki\",95],[\"Alikampos\",115],[\"Neochori\",309],[\"Stavros\",122],[\"Lakka\",173],[\"AgiosDionysios\",84],\n\t\t[\"Panochori\",264],[\"Topolia\",33],[\"Ekali\",9],[\"Pyrgos\",531],[\"Orino\",45],[\"Neri\",242],[\"Kore\",133],[\"Kavala\",660],[\"Aggelochori\",395],[\"Koroni\",32],[\"Gravia\",291],\n\t\t[\"Anthrakia\",143],[\"Syrta\",151],[\"Negades\",120],[\"Galati\",151],[\"Telos\",84],[\"Charkia\",246],[\"Athira\",342],[\"Dorida\",168],[\"Ifestiona\",48],[\"Chalkeia\",214],\n\t\t[\"AgiosKonstantinos\",39],[\"Abdera\",89],[\"Panagia\",91],[\"Nifi\",24],[\"Rodopoli\",212],[\"Kalithea\",36],[\"Selakano\",120],[\"Frini\",69],[\"AgiosPetros\",11],[\"Feres\",92],\n\t\t[\"AgiaTriada\",8],[\"Paros\",396],[\"Kalochori\",189],[\"Oreokastro\",63],[\"Ioannina\",48],[\"Delfinaki\",29],[\"Sofia\",179],[\"Molos\",188]];\n\t};\n\tcase \"chernarus_summer\": {\n\t\t{server setVariable [_x select 0,_x select 1]} forEach\n\t\t[[\"vill_NovySobor\",129],[\"city_StarySobor\",149],[\"vill_Guglovo\",26],[\"vill_Vyshnoye\",41],[\"vill_Kabanino\",86],[\"vill_Rogovo\",66],[\"vill_Mogilevka\",104],[\"city_Gorka\",115],\n\t\t[\"vill_Grishino\",168],[\"vill_Shakhovka\",55],[\"vill_Pogorevka\",57],[\"vill_Pulkovo\",26],[\"vill_Nadezhdino\",109],[\"city_Vybor\",180],[\"vill_Polana\",118],[\"vill_Staroye\",115],\n\t\t[\"vill_Dubrovka\",86],[\"vill_Pustoshka\",163],[\"vill_Kozlovka\",100],[\"vill_Pusta\",52],[\"vill_Dolina\",83],[\"vill_Gvozdno\",78],[\"vill_Prigorodki\",145],[\"vill_Drozhino\",58],\n\t\t[\"vill_Sosnovka\",54],[\"vill_Msta\",96],[\"vill_Lopatino\",159],[\"city_Zelenogorsk\",280],[\"vill_Orlovets\",65],[\"city_Berezino\",340],[\"vill_Myshkino\",49],[\"vill_Petrovka\",45],\n\t\t[\"city_Chernogorsk\",761],[\"vill_Bor\",46],[\"vill_Nizhnoye\",146],[\"vill_Balota\",147],[\"vill_Khelm\",110],[\"city_Krasnostav\",194],[\"vill_Komarovo\",127],[\"city_Elektrozavodsk\",745],\n\t\t[\"city_Solnychniy\",224],[\"vill_Kamyshovo\",196],[\"vill_Tulga\",35],[\"vill_Pavlovo\",99],[\"vill_Kamenka\",127],[\"vill_Olsha\",20]];\n\t};\n\tcase \"chernarus_winter\": {\n\t\t{server setVariable [_x select 0,_x select 1]} forEach\n\t\t[[\"vill_NovySobor\",129],[\"city_StarySobor\",149],[\"vill_Guglovo\",26],[\"vill_Vyshnoye\",41],[\"vill_Kabanino\",86],[\"vill_Rogovo\",66],[\"vill_Mogilevka\",104],[\"city_Gorka\",115],\n\t\t[\"vill_Grishino\",168],[\"vill_Shakhovka\",55],[\"vill_Pogorevka\",57],[\"vill_Pulkovo\",26],[\"vill_Nadezhdino\",109],[\"city_Vybor\",180],[\"vill_Polana\",118],[\"vill_Staroye\",115],\n\t\t[\"vill_Dubrovka\",86],[\"vill_Pustoshka\",163],[\"vill_Kozlovka\",100],[\"vill_Pusta\",52],[\"vill_Dolina\",83],[\"vill_Gvozdno\",78],[\"vill_Prigorodki\",145],[\"vill_Drozhino\",58],\n\t\t[\"vill_Sosnovka\",54],[\"vill_Msta\",96],[\"vill_Lopatino\",159],[\"city_Zelenogorsk\",280],[\"vill_Orlovets\",65],[\"city_Berezino\",340],[\"vill_Myshkino\",49],[\"vill_Petrovka\",45],\n\t\t[\"city_Chernogorsk\",761],[\"vill_Bor\",46],[\"vill_Nizhnoye\",146],[\"vill_Balota\",147],[\"vill_Khelm\",110],[\"city_Krasnostav\",194],[\"vill_Komarovo\",127],[\"city_Elektrozavodsk\",745],\n\t\t[\"city_Solnychniy\",224],[\"vill_Kamyshovo\",196],[\"vill_Tulga\",35],[\"vill_Pavlovo\",99],[\"vill_Kamenka\",127],[\"vill_Olsha\",20]];\n\t};\n    //To improve Performance, reduces pop from 13972 to 4850\n\tcase \"enoch\": {\n\t\t{server setVariable [_x select 0,_x select 1]} forEach\n\t\t[[\"Adamow\",200],[\"Bielawa\",150],[\"Borek\",150],[\"Brena\",150],[\"Dolnik\",100],[\"Gieraltow\",400],[\"Gliniska\",150],[\"Grabin\",250],[\"Huta\",150],[\"Karlin\",50],[\"Kolembrody\",100],\n\t\t[\"Lembork\",50],[\"Lipina\",100],[\"Lukow\",200],[\"Muratyn\",50],[\"Nadbor\",600],[\"Nidek\",100],[\"Olszanka\",100],[\"Polana\",100],[\"Radacz\",150],[\"Radunin\",150],[\"Roztoka\",50],\n\t\t[\"Sitnik\",150],[\"Sobotka\",100],[\"Tarnow\",200],[\"Topolin\",650],[\"Zalesie\",150],[\"Zapadlisko\",100]];\n\t};\n\tcase \"vt7\": {\n\t\t{server setVariable [_x select 0,_x select 1]} forEach\n\t\t[[\"aarre\",80],[\"Alapihlaja\",90],[\"Eerikkala\",88],[\"haavisto\",60],[\"Hailila\",90],[\"Hanski\",100],[\"Harju\",100],[\"harjula\",70],[\"hirvela\",0],\n\t\t[\"Hurppu\",80],[\"Hyypianvuori\",60],[\"Jarvenkyla\",100],[\"kallio\",10],[\"Kirkonkyla\",500],[\"Klamila\",150],[\"Koivuniemi\",100],[\"Korpela\",80],\n\t\t[\"Kouki\",90],[\"Kuusela\",100],[\"Lansikyla\",100],[\"Myllynmaki\",60],[\"Nakarinmaki\",90],[\"Niemela\",60],[\"nopala\",80],[\"Ojala\",80],[\"Onnela\",100],\n\t\t[\"Pajunlahti\",90],[\"piispa\",100],[\"Pyterlahti\",390],[\"Rannanen\",80],[\"Ravijoki\",90],[\"Riko\",100],[\"Santaniemi\",100],[\"Skippari\",80],[\"suopelto\",80],\n\t\t[\"Sydankyla\",150],[\"Tinkanen\",80],[\"toipela\",0],[\"uski\",80],[\"Uutela\",100],[\"Vilkkila\",110],[\"Virojoki\",500],[\"Ylapaa\",80],[\"Ylapihlaja\",80],\n\t\t[\"Souvio\",70]];\n\t};\n\tdefault { _hardcodedPop = false };\n};\n    //Disables Towns/Villages, Names can be found in configFile >> \"CfgWorlds\" >> \"WORLDNAME\" >> \"Names\"\nprivate [\"_nameX\", \"_roads\", \"_numCiv\", \"_roadsProv\", \"_roadcon\", \"_dmrk\", \"_info\"];\n\n\"(getText (_x >> \"\"type\"\") in [\"\"NameCityCapital\"\", \"\"NameCity\"\", \"\"NameVillage\"\", \"\"CityCenter\"\"]) &&\n!(getText (_x >> \"\"Name\"\") isEqualTo \"\"\"\") &&\n!((configName _x) in [\"\"Lakatoro01\"\", \"\"Galili01\"\",\"\"Sosovu01\"\", \"\"Ipota01\"\", \"\"Malden_C_Airport\"\", \"\"FobNauzad\"\", \"\"FobObeh\"\", \"\"22\"\", \"\"23\"\", \"\"toipela\"\", \"\"hirvela\"\"])\"\nconfigClasses (configfile >> \"CfgWorlds\" >> worldName >> \"Names\") apply {\n\n\t_nameX = configName _x;\n\t_sizeX = getNumber (_x >> \"radiusA\");\n\t_sizeY = getNumber (_x >> \"radiusB\");\n\t_size = [_sizeY, _sizeX] select (_sizeX > _sizeY);\n\t_pos = getArray (_x >> \"position\");\n\t_size = [_size, 400] select (_size < 400);\t\t// Different from generateRoadsDB. Maybe not good.\n\t_roads = [];\n\t_numCiv = 0;\n\n\t_roads = roadsX getVariable [_nameX, []];\n\tif (count _roads == 0) then\n\t{\n\t\t[2, format [\"No roads found for marker %1, generating...\", _nameX], _fileName] call A3A_fnc_log",
"[_nameX, _roads, true];\n\t};\n\n\tif (_hardcodedPop) then\n\t{\n\t\t_numCiv = server getVariable _nameX;\n\t\tif (isNil \"_numCiv\" || {!(_numCiv isEqualType 0)}) then\n\t\t{\n\t\t\t[1, format [\"Bad population count data for %1\", _nameX], _fileName] call A3A_fnc_log",
"[_pos, [\"house\"], _size]));\n\t\t};\n\t}\n\telse {\n\t\t_numCiv = (count (nearestObjects [_pos, [\"house\"], _size]));\n\t};\n\n\t_numVeh = round (_numCiv / 3);\n\t_nroads = count _roads;\n\tif(_nroads > 0) then\n\t{\n\t\t//Fixed issue with a town on tembledan having no roads\n\t\t_nearRoadsFinalSorted = [_roads, [], { _pos distance _x }, \"ASCEND\"] call BIS_fnc_sortBy;\n\t\t_pos = _nearRoadsFinalSorted select 0;\n\t};\n\tif (_nroads < _numVeh) then {_numVeh = _nroads};\n\n\t_mrk = createmarker [format [\"%1\", _nameX], _pos];\n\t_mrk setMarkerSize [_size, _size];\n\t_mrk setMarkerShape \"RECTANGLE\";\n\t_mrk setMarkerBrush \"SOLID\";\n\t_mrk setMarkerColor colorOccupants;\n\t_mrk setMarkerText _nameX;\n\t_mrk setMarkerAlpha 0;\n\tcitiesX pushBack _nameX;\n\tspawner setVariable [_nameX, 2, true];\n\t_dmrk = createMarker [format [\"Dum%1\", _nameX], _pos];\n\t_dmrk setMarkerShape \"ICON\";\n\t_dmrk setMarkerType \"loc_Ruin\";\n\t_dmrk setMarkerColor colorOccupants;\n\n\tsidesX setVariable [_mrk, Occupants, true];\n\t_info = [_numCiv, _numVeh, prestigeOPFOR, prestigeBLUFOR];\n\tserver setVariable [_nameX, _info, true];\n};\t//find in congigs faster then find location in 25000 radius\nif (debug) then {\ndiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Roads built in %2.\",servertime,worldname];\n};\n\n\nmarkersX = markersX + citiesX;\nsidesX setVariable [\"Synd_HQ\", teamPlayer, true];\nsidesX setVariable [\"NATO_carrier\", Occupants, true];\nsidesX setVariable [\"CSAT_carrier\", Invaders, true];\n\nantennasDead = [];\nbanks = [];\nmrkAntennas = [];\nprivate _posAntennas = [];\nprivate _blacklistPos = [];\nprivate _posBank = [];\nprivate [\"_antenna\", \"_mrkFinal\", \"_antennaProv\"];\nif (debug) then {\ndiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Setting up Radio Towers.\",servertime];\n};\n\n// Land_A_TVTower_base can't be destroyed, Land_Communication_F and Land_Vysilac_FM are not replaced with \"Ruins\" when destroyed.\n// This causes issues with persistent load and rebuild scripts, so we replace those with antennas that work properly.\nprivate _replaceBadAntenna = {\n\tparams [\"_antenna\"];\n\tif ((typeof _antenna) in [\"Land_Communication_F\", \"Land_Vysilac_FM\", \"Land_A_TVTower_Base\"]) then {\n\t\thideObjectGlobal _antenna;\n\t\tif (typeof _antenna == \"Land_A_TVTower_Base\") then {\n\t\t\t// The TV tower is composed of 3 sections - need to hide them all\n\t\t\tprivate _otherSections = nearestObjects [_antenna, [\"Land_A_TVTower_Mid\", \"Land_A_TVTower_Top\"], 200];\n\t\t\t{ hideObjectGlobal _x; } forEach _otherSections;\n\t\t};\n\t\tprivate _antennaPos = getPos _antenna;\n\t\t_antennaPos set [2, 0];\n\t\tprivate _antennaClass = if (worldName == \"chernarus_summer\") then { \"Land_Telek1\" } else { \"Land_TTowerBig_2_F\" };\n\t\t_antenna = createVehicle [_antennaClass, _antennaPos, [], 0, \"NONE\"];\n\t};\n\t_antenna;\n};\n\nswitch (toLower worldName) do {\n\tcase \"tanoa\": {\n\t\t_posAntennas =\n\t\t[[2682.94,2592.64,-0.000686646], [4701.6,3165.23,0.0633469], [2437.25,7224.06,0.0264893], [2563.15,9017.1,0.291538],\n\t\t[6617.95,7853.57,0.200073], [11008.8,4211.16,-0.00154114], [6005.47,10420.9,0.20298], [7486.67,9651.9,1.52588e-005],\n\t\t[2690.54,12323,0.0372467], [2965.33,13087.1,0.191544], [7278.8,12846.6,0.0838776], [12889.2,8578.86,0.228729],\n\t\t[10114.3,11743.1,9.15527e-005], [10949.8,11517.3,0.14209], [11153.3,11435.2,0.210876], [13775.8,10976.8,0.170441]];\t// All antennas to be bases or to ignore.\n\t\t_blacklistPos = [9, 14];\t\t// Ignore Antenna at <Index> in _posAntennas.\n\t\t_posBank = [[5893.41,10253.1,-0.687263], [9507.5,13572.9,0.133848]];\t// same as RT for Bank buildings, select the biggest buildings in your island, and make a DB with their positions.\n\t\tantennas = [];\n\t};\n\tcase \"altis\": {\n\t\t_posAntennas =\n\t\t[[14451.5,16338,0.000354767], [15346.7,15894,-3.8147e-005], [16085.1,16998,7.08781], [17856.7,11734.1,0.863045],\n\t\t[9496.2,19318.5,0.601898], [9222.87,19249.1,0.0348206], [20944.9,19280.9,0.201118], [20642.7,20107.7,0.236603],\n\t\t[18709.3,10222.5,0.716034], [6840.97,16163.4,0.0137177], [19319,9716.22,0.442627], [19351.9,9693.04,0.639175],\n\t\t[10317.3,8704.65,0.117233], [8268.76,10051.6,0.0100708], [4583.61,15401.1,0.262543],[4555.65,15383.2,0.0271606],\n\t\t[4263.82,20664.1,-0.0102234], [26274.6,22188.1,0.0139847], [26455.4,22166.3,0.0223694]];\n\t\t_blacklistPos = [4, 10, 12, 15, 17];\n\t\t_posBank = [[16586.6,12834.5,-0.638584], [16545.8,12784.5,-0.485485], [16633.3,12807,-0.635017], [3717.34,13391.2,-0.164862], [3692.49,13158.3,-0.0462074], [3664.31,12826.5,-0.379545], [3536.99,13006.6,-0.508585], [3266.42,12969.9,-0.549738]];\n\t\tantennas = [];\n\t};\n\tcase \"chernarus_summer\": {\n\t\t_posAntennas =\n\t\t[[3029.11,2350.27,0.229149], [4547.68,3132.05,0.693176], [3715.81,5984.25,0], [6563.68,3405.56,0.0547333],\n\t\t[5264.35,5314.45,-0.00253296], [6443.78,6545.48,0.0928955], [4967.81,9966.56,0], [8127.52,9151.57,0],\n\t\t[13477.6,3345.84,0.0730896], [13010.1,5964.96,-0.0163116], [12937,12763.6,0.164017]];\n\t\t_blackListPos = [0, 4, 8, 9];\n\t\tantennas = [];\n\t};\n\tcase \"chernarus_winter\": {\n\t\t_posAntennas =\n\t\t[[3029.11,2350.27,0.229149], [4547.68,3132.05,0.693176], [3715.81,5984.25,0], [6563.68,3405.56,0.0547333],\n\t\t[5264.35,5314.45,-0.00253296], [6443.78,6545.48,0.0928955], [4967.81,9966.56,0], [8127.52,9151.57,0],\n\t\t[13477.6,3345.84,0.0730896], [13010.1,5964.96,-0.0163116], [12937,12763.6,0.164017]];\n\t\t_blackListPos = [0, 4, 8, 9];\n\t\tantennas = [];\n\t};\n\tcase \"enoch\": {\n\t\t_posAntennas =\n\t\t[[3830.61,1827.19,0], [5007.39,2131.27,0], [1583.47,7162.08,0.000152588], [3146.07,7024.41,0.00133514],\n\t\t[1408.43,8675.08,-1.00183], [8894.99,2049.1,0.00387573], [2382.53,11479.5,3.05176e-005], [6293.86,9910.17,-7.62939e-006],\n\t\t[3585.76,11540.7,-0.000236511], [7906.11,9917.2,0.0120544], [7776.88,10082.3,0.0262146], [7866.34,10102.5,3.05176e-005],\n\t\t[6908.45,11119.5,-2.40052], [9257.02,10282.7,0.0631027], [10610.4,10890.6,0.166985], [11172.6,11424.1,-2.82624]];\n\t\t_blackListPos = [2, 3, 4, 6, 8, 11, 12, 13, 14, 15];\n\t\tantennas = [];\n\t};\n\tcase \"tembelan\": {\n\t\t_posAntennas =\n\t\t[[502.398,348.476,0.000190735], [4310.99,844.668,0.0271759], [1724.15,4777.62,-1.14441e-005], [2916.02,4174.11,1.14441e-005],\n\t\t[3020.15,8111.37,0.517868], [4133.57,8028.41,0.30658], [7080.68,5748.77,0.500134], [9160.06,4707.45,0.19401],\n\t\t[9542.17,5029,0.0381298], [9191.69,6012.89,0], [9238.39,6075.66,0.160484]];\n\t\t_blackListPos = [1, 4, 6, 8, 9];\n\t\tantennas = [];\n\t};\n\tcase \"vt7\": {\n\t\t_posAntennas =\n\t\t[[907.35,2955.65,0], [6644.62,7275.58,0.00256348], [6242.47,13009.4,0.39426], [13061.2,6487.81,0.760155],\n\t\t[1768.36,15526.1,0.00277328], [15449.2,16603.3,0]];\n\t\t_blackListPos = [];\n\t\tantennas = [];\n\t};\n\tcase \"takistan\": {\n\t\t_posAntennas =\n\t\t[[4014.64,3089.66,0.150604], [5249.37,3709.48,-0.353882], [3126.7,8223.88,-0.649429], [8547.92,3897.03,-0.56073], [5578.24,9072.21,-0.842239], [2239.98,12630.7,-0.575844]];\n\t\t_blacklistPos = [];\n\t\tantennas = [];\n\t};\n\tdefault {\n\t\tantennas = nearestObjects [[worldSize /2, worldSize/2], [\"Land_TTowerBig_1_F\", \"Land_TTowerBig_2_F\", \"Land_Communication_F\", \"Land_Vysilac_FM\",\"Land_A_TVTower_base\", \"Land_Telek1\"], worldSize];\n\n\t\tbanks = nearestObjects [[worldSize /2, worldSize/2], [\"Land_Offices_01_V1_F\"], worldSize];\n\n\t\tprivate _replacedAntennas = [];\n\t\t{ _replacedAntennas pushBack ([_x] call _replaceBadAntenna); } forEach antennas;\n\t\tantennas = _replacedAntennas;\n\n\t\tantennas apply {\n\t\t\t_mrkFinal = createMarker [format [\"Ant%1\", mapGridPosition _x], position _x];\n\t\t\t_mrkFinal setMarkerShape \"ICON\";\n\t\t\t_mrkFinal setMarkerType \"loc_Transmitter\";\n\t\t\t_mrkFinal setMarkerColor \"ColorBlack\";\n\t\t\t_mrkFinal setMarkerText \"Radio Tower\";\n\t\t\tmrkAntennas pushBack _mrkFinal;\n\t\t\t_x addEventHandler [\n\t\t\t\t\"Killed\",\n\t\t\t\t{\n\t\t\t\t\t_antenna = _this select 0;\n\t\t\t\t\t_antenna removeAllEventHandlers \"Killed\";\n\n\t\t\t\t\tcitiesX apply {\n\t\t\t\t\t\tif ([antennas,_x] call BIS_fnc_nearestPosition == _antenna) then {\n\t\t\t\t\t\t\t[_x, false] spawn A3A_fnc_blackout;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t\t_mrk = [mrkAntennas, _antenna] call BIS_fnc_nearestPosition;\n\t\t\t\t\tantennas = antennas - [_antenna];\n\t\t\t\t\tantennasDead pushBack _antenna;\n\t\t\t\t\tdeleteMarker _mrk;\n\t\t\t\t\tpublicVariable \"antennas\";\n\t\t\t\t\tpublicVariable \"antennasDead\";\n\t\t\t\t\t[\"TaskSucceeded\", [\"\", \"Radio Tower Destroyed\"]] remoteExec [\"BIS_fnc_showNotification\", teamPlayer];\n\t\t\t\t\t[\"TaskFailed\", [\"\", \"Radio Tower Destroyed\"]] remoteExec [\"BIS_fnc_showNotification\", Occupants];\n\t\t\t\t}\n\t\t\t];\n\t\t};\n\t};\n};\nif (debug) then {\ndiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Radio Tower built.\", servertime];\ndiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Finding broken Radio Towers.\", servertime];\n};\nif (count _posAntennas > 0) then {\n\tfor \"_i\" from 0 to (count _posAntennas - 1) do {\n\t\t_antennaProv = nearestObjects [_posAntennas select _i, [\"Land_TTowerBig_1_F\", \"Land_TTowerBig_2_F\", \"Land_Communication_F\", \"Land_Vysilac_FM\",\"Land_A_TVTower_base\",\"Land_Telek1\"], 35];\n\n\t\tif (count _antennaProv > 0) then {\n\t\t\t_antenna = _antennaProv select 0;\n\n\t\t\tif (_i in _blacklistPos) then {\n\t\t\t\t_antenna setdamage 1;\n\t\t\t} else {\n\t\t\t\t_antenna = ([_antenna] call _replaceBadAntenna);\n\t\t\t\tantennas pushBack _antenna;\n\t\t\t\t_mrkFinal = createMarker [format [\"Ant%1\", mapGridPosition _antenna], _posAntennas select _i];\n\t\t\t\t_mrkFinal setMarkerShape \"ICON\";\n\t\t\t\t_mrkFinal setMarkerType \"loc_Transmitter\";\n\t\t\t\t_mrkFinal setMarkerColor \"ColorBlack\";\n\t\t\t\t_mrkFinal setMarkerText \"Radio Tower\";\n\t\t\t\tmrkAntennas pushBack _mrkFinal;\n\n\t\t\t\t_antenna addEventHandler [\n\t\t\t\t\t\"Killed\",\n\t\t\t\t\t{\n\t\t\t\t\t\t_antenna = _this select 0;\n\t\t\t\t\t\t_antenna removeAllEventHandlers \"Killed\";\n\n\t\t\t\t\t\tcitiesX apply {\n\t\t\t\t\t\t\tif ([antennas, _x] call BIS_fnc_nearestPosition == _antenna) then {\n\t\t\t\t\t\t\t\t[_x, false] spawn A3A_fnc_blackout\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t_mrk = [mrkAntennas, _antenna] call BIS_fnc_nearestPosition;\n\t\t\t\t\t\tantennas = antennas - [_antenna];\n\t\t\t\t\t\tantennasDead pushBack  _antenna;\n\t\t\t\t\t\tdeleteMarker _mrk;\n\t\t\t\t\t\tpublicVariable \"antennas\";\n\t\t\t\t\t\tpublicVariable \"antennasDead\";\n\t\t\t\t\t\t[\"TaskSucceeded\", [\"\", \"Radio Tower Destroyed\"]] remoteExec [\"BIS_fnc_showNotification\", teamPlayer];\n\t\t\t\t\t\t[\"TaskFailed\", [\"\", \"Radio Tower Destroyed\"]] remoteExec [\"BIS_fnc_showNotification\", Occupants];\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t};\n\t\t};\n\t};\n};\nif (debug) then {\ndiag_log format [\"%1: [Antistasi] | DEBUG | initZones | Broken Radio Towers identified.\",servertime];\n};\nif (count _posBank > 0) then {\n\tfor \"_i\" from 0 to (count _posBank - 1) do {\n\t\t_bankProv = nearestObjects [_posBank select _i, [\"Land_Offices_01_V1_F\"], 30];\n\n\t\tif (count _bankProv > 0) then {\n\t\t\tprivate _banco = _bankProv select 0;\n\t\t\tbanks = banks + [_banco];\n\t\t};\n\t};\n};\n\n// Make list of markers that don't have a proper road nearby\nblackListDest = (markersX - controlsX - [\"Synd_HQ\"] - citiesX) select {\n\tprivate _nearRoads = (getMarkerPos _x) nearRoads (([_x] call A3A_fnc_sizeMarker) * 1.5);\n//\t_nearRoads = _nearRoads inAreaArray _x;\n\tprivate _badSurfaces = [\"#GdtForest\", \"#GdtRock\", \"#GdtGrassTall\"];\n\tprivate _idx = _nearRoads findIf { !(surfaceType (position _x) in _badSurfaces) && { count roadsConnectedTo _x != 0 } };\n\tif (_idx == -1) then {true} else {false};\n};\n\npublicVariable \"blackListDest\";\npublicVariable \"markersX\";\npublicVariable \"citiesX\";\npublicVariable \"airportsX\";\npublicVariable \"resourcesX\";\npublicVariable \"factories\";\npublicVariable \"outposts\";\npublicVariable \"controlsX\";\npublicVariable \"seaports\";\npublicVariable \"destroyedSites\";\npublicVariable \"forcedSpawn\";\npublicVariable \"outpostsFIA\";\npublicVariable \"seaMarkers\";\npublicVariable \"spawnPoints\";\npublicVariable \"antennas\";\npublicVariable \"antennasDead\";\npublicVariable \"mrkAntennas\";\npublicVariable \"banks\";\npublicVariable \"seaSpawn\";\npublicVariable \"seaAttackSpawn\";\npublicVariable \"defaultControlIndex\";\npublicVariable \"detectionAreas\";\npublicVariable \"islands\";\npublicVariable \"roadsMrk\";\n\nif (isMultiplayer) then {\n\t[petros, \"hint\",\"Zones Init Completed\"] remoteExec [\"A3A_fnc_commsMP\", -2]\n};\n\n[2,\"initZones completed\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/init/fn_prepareMarkerArrays.sqf": [
"[\"_allMarker\", \"_placementMarker\", \"_split\", \"_start\", \"_data\"];\n\n_allMarker = allMapMarkers;\n_placementMarker = [];\n\nairportsX = [];\nspawnPoints = [];\nresourcesX = [];\nfactories = [];\noutposts = [];\nseaports = [];\ncontrolsX = [];\nseaMarkers = [];\nseaSpawn = [];\nseaAttackSpawn = [];\ndetectionAreas = [];\nislands = [];\nroadsMrk = [];\n\nfnc_sortPlacementMarker =\n{\n  params [\"_array\", \"_split\"];\n  private [\"_type\", \"_number\", \"_start\", \"_index\", \"_name\"];\n\n  //Calculating linked main marker\n  _type = \"\";\n  switch (_split select 0) do\n  {\n    case (\"airp\"): {_type = \"airport\";};\n    case (\"outp\"): {_type = \"outpost\";};\n    case (\"reso\"): {_type = \"resource\";};\n    case (\"fact\"): {_type = \"factory\";};\n    case (\"seap\"): {_type = \"seaport\";};\n  };\n\n  _number = parseNumber (_split select 1);\n  _start = 1;\n  if(_number != 0) then\n  {\n    //There is no outpost_0 or something\n    _start = 2;\n    _type = format [\"%1_%2\", _type, _number];\n  };\n\n  //Build name\n  _name = _split select _start;\n  for \"_i\" from (_start + 1) to ((count _split) - 1) do\n  {\n    _name = format [\"%1_%2\", _name, _split select _i];\n  };\n\n  //Seting connection\n  _index = _array findIf {(_x select 0) == _type};\n  if(_index == -1) then\n  {\n    _array pushBack [_type, [_name]];\n  }\n  else\n  {\n    ((_array select _index) select 1) pushBack _name;\n  };\n};\n\n{\n  _split = _x splitString \"_\";\n  _start = _split select 0;\n  switch (toLower _start) do\n  {\n    //Detect main marker\n    case (\"airport\"): {airportsX pushBack _x;};\n    case (\"spawnpoint\"): {spawnPoints pushBack _x;};\n    case (\"resource\"): {resourcesX pushBack _x;};\n    case (\"factory\"): {factories pushBack _x;};\n    case (\"outpost\"): {outposts pushBack _x;};\n    case (\"seaport\"): {seaports pushBack _x;};\n    case (\"control\"): {controlsX pushBack _x;};\n    case (\"seapatrol\"): {seaMarkers pushBack _x;};\n    case (\"seaspawn\"): {seaSpawn pushBack _x;};\n    case (\"seaattackspawn\"): {seaAttackSpawn pushBack _x;};\n    case (\"detectplayer\"): {detectionAreas pushBack _x;};\n    case (\"island\"): {islands pushBack _x;};\n    case (\"road\"):\n    {\n      _x setMarkerAlpha 0;\n      roadsMrk pushBack _x;\n    };\n\n    //Following marker are handled elsewhere\n    case (\"respawn\");\n    case (\"dummyupsmonmarker\");\n    case (\"nato\");\n    case (\"csat\");\n    case (\"synd\"): {};\n\n    //Detect placement marker\n    case (\"airp\");\n    case (\"reso\");\n    case (\"fact\");\n    case (\"outp\");\n    case (\"seap\"): {[_placementMarker, _split] call fnc_sortPlacementMarker;};\n\n    default\n    {\n      diag_log format [\"ERROR: Could not resolve marker %1\", _x];\n    };\n  };\n} forEach _allMarker;\n\n//diag_log \"Marker setup done, placement marker are\";\n//[_placementMarker, \"Placements\"] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/functions/pvp/fn_pvpCheck.sqf": [
"[\"_unit\"];\n\nprivate _friendlyPlayers = ({(side group _x == teamPlayer)} count (call A3A_fnc_playableUnits));\nprivate _enemyPlayers = count (call A3A_fnc_playableUnits) - _friendlyPlayers;\n\n// Player checks to prevent them logging into PvP for whatever reason.\nswitch (true) do {\n\tcase (!_isJip): {\n\t\t[\"noJip\",false,1,false,false] call BIS_fnc_endMission;\n\t\t[2,\"Player kicked as they are not Jipping\",_filename] call A3A_fnc_log",
"[\"noPvP\",false,1,false,false] call BIS_fnc_endMission;\n\t\t[2,\"Player kicked as PvP slots are disabled\",_filename] call A3A_fnc_log",
"[_unit] call A3A_fnc_isMember)): {\n\t\t[\"pvpMem\",false,1,false,false] call BIS_fnc_endMission;\n\t\t[2,\"PvP player kicked because they are not a member.\",_filename] call A3A_fnc_log",
"[\"pvpCount\",false,1,false,false] call BIS_fnc_endMission;\n\t\t[2,\"PvP player kicked because there are wayyyyyy too many PvP players..\",_filename] call A3A_fnc_log",
"[\"pvpCount\",false,1,false,false] call BIS_fnc_endMission;\n\t\t[2,\"PvP player kicked as there are not enough normal players.\",_filename] call A3A_fnc_log",
"[\"BossMiss\",false,1,false,false] call BIS_fnc_endMission;\n\t\t[2,\"PvP player kicked as there is no Rebel Commander.\",_filename] call A3A_fnc_log",
"[2,\"PvP player logged in, doing server side checks if the player has been rebel recently.\",_filename] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/init.sqf": [
"[\"%1: [Antistasi] | INFO | Init Started.\",servertime];\n//Arma 3 - Antistasi - Warlords of the Pacific by Barbolani & The Official AntiStasi Community\n//Do whatever you want with this code, but credit me for the thousand hours spent making this.\nprivate _fileName = \"init.sqf\";\nscriptName \"init.sqf\";\n\nif (isNil \"logLevel\") then {logLevel = 2};\n[2,\"Init SQF started\",_fileName] call A3A_fnc_log",
"[3, \"Singleplayer detected: Deleting units for other players.\", _fileName] call A3A_fnc_log",
"[false,false];\nmapX setObjectTexture [0,\"Pictures\\Mission\\whiteboard.jpg\"];\n\n[2,\"Init finished\",_fileName] call A3A_fnc_log"
],
"D:/Dropbox/hobby/Modding/Programs/Github/Foreign_Repos/A3-Antistasi/A3-Antistasi/initServer.sqf": [
"[] call A3A_fnc_initServer;\n} else {\n\t[] spawn {\n\t\twaitUntil {!isNull player && player == player && !isNull (finddisplay 46)};\n\t\t[2, \"Opening Singleplayer Parameter Dialog\", \"initServer.sqf\"] call A3A_fnc_log",
"[] call A3A_fnc_createDialog_setParams;\n\t\t[2, \"Proceeding to initServer\", \"initServer.sqf\"] call A3A_fnc_log"
]
}